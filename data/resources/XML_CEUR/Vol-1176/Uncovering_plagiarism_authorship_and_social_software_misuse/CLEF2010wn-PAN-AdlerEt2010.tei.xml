<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,156.16,115.90,296.82,12.90;1,218.28,135.75,178.79,10.75">Detecting Wikipedia Vandalism using WikiTrust Lab Report for PAN at CLEF 2010</title>
				<funder>
					<orgName type="full">Institute for Scalable Scientific Data Management</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName coords="1,207.92,172.15,68.90,8.64"><forename type="first">B</forename><forename type="middle">Thomas</forename><surname>Adler</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Fujitsu Labs of America, Inc</orgName>
							</affiliation>
						</author>
						<author>
							<persName coords="1,286.28,172.15,60.20,8.64"><forename type="first">Luca</forename><surname>De Alfaro</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Fujitsu Labs of America, Inc</orgName>
							</affiliation>
						</author>
						<author role="corresp">
							<persName coords="1,372.81,172.15,30.16,8.64"><forename type="first">Ian</forename><surname>Pye</surname></persName>
							<email>ipye@cs.ucsc.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">Fujitsu Labs of America, Inc</orgName>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,156.16,115.90,296.82,12.90;1,218.28,135.75,178.79,10.75">Detecting Wikipedia Vandalism using WikiTrust Lab Report for PAN at CLEF 2010</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">4506884988AD9AC08F55E0AC385BD089</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-06-26T15:25+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>WikiTrust is a reputation system for Wikipedia authors and content. WikiTrust computes three main quantities: edit quality, author reputation, and content reputation. The edit quality measures how well each edit, that is, each change introduced in a revision, is preserved in subsequent revisions. Authors who perform good quality edits gain reputation, and text which is revised by several high-reputation authors gains reputation. Since vandalism on the Wikipedia is usually performed by anonymous or new users (not least because long-time vandals end up banned), and is usually reverted in a reasonably short span of time, edit quality, author reputation, and content reputation are obvious candidates as features to identify vandalism on the Wikipedia. Indeed, using the full set of features computed by WikiTrust, we have been able to construct classifiers that identify vandalism with a recall of 83.5%, a precision of 48.5%, and a false positive rate of 8%, for an area under the ROC curve of 93.4%. If we limit ourselves to the set of features available at the time an edit is made (when the edit quality is still unknown), the classifier achieves a recall of 77.1%, a precision of 36.9%, and a false positive rate of 12.2%, for an area under the ROC curve of 90.4%. Using these classifiers, we have implemented a simple Web API that provides the vandalism estimate for every revision of the English Wikipedia. The API can be used both to identify vandalism that needs to be reverted, and to select highquality, non-vandalized recent revisions of any given Wikipedia article. These recent high-quality revisions can be included in static snapshots of the Wikipedia, or they can be used whenever tolerance to vandalism is low (as in a school setting, or whenever the material is widely disseminated).</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="9" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="10" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Between 4% and 6% of Wikipedia edits are considered vandalism <ref type="bibr" coords="1,399.54,557.69,15.27,8.64" target="#b12">[15]</ref>. Although most vandalism is promptly reverted, vandalism on Wikipedia still has negative consequences. First, locating and reverting vandalism ends up consuming the scarce time of Wikipedia editors. Second, the presence of vandalism on the Wikipedia lessens its perceived quality and can be an obstacle to the wider use of its content. For instance, in spite of Wikipedia being an outstanding educational resource, its use in schools is hampered by the risk of exposing students to inappropriate or incorrect material inserted by vandals. Third, any static compilation of Wikipedia articles, such as those produced by the Wikipedia 1.0 project <ref type="bibr" coords="2,219.78,155.18,15.58,8.64">[13]</ref>, is liable to contain a non-negligible amount of vandalized revisions. The presence of vandalism in the compilations reduces their appeal to schools and other environments, where their static, no-surprise nature would otherwise be most appreciated. As the compilations are static, and published on media such as DVD disks or USB keys, the only way to remedy the vandalism is to publish new compilationsincurring both significant cost and risking the inclusion of new vandalism.</p><p>Automated tools help reduce the impact of vandalism on the Wikipedia by identifying vandalized revisions, both facilitating the work of editors and allowing the automated exclusion of vandalized revisions from static compilations and other settings where they are deemed particularly undesirable <ref type="bibr" coords="2,322.47,262.94,15.63,8.64" target="#b9">[10,</ref><ref type="bibr" coords="2,338.10,262.94,11.72,8.64" target="#b10">11,</ref><ref type="bibr" coords="2,349.82,262.94,7.81,8.64" target="#b4">5,</ref><ref type="bibr" coords="2,357.63,262.94,7.81,8.64" target="#b7">8,</ref><ref type="bibr" coords="2,365.44,262.94,7.81,8.64" target="#b3">4,</ref><ref type="bibr" coords="2,373.25,262.94,11.72,8.64" target="#b11">12]</ref>. Corresponding to these two use cases -helping editors, and filtering revisions -we distinguish two aspects of the Wikipedia vandalism detection problem:</p><p>-Zero-delay vandalism detection. The goal of the automated tool is to identify vandalism as soon as it is inserted. Thus, to identify vandalism the tool can make use only of features available at the time the edit takes place: in particular, no features that can be acquired in the future of the edit can be used. This type of vandalism detection is most useful to help the work of editors, who can be altered to the vandalism and take appropriate action in timely fashion. Zero-delay vandalism detection was the focus of the Task 2 PAN 2010 workshop evaluation. -Historical vandalism detection. The goal of the automated tool is to find vandalized revisions wherever they may occur in the revision history of Wikipedia articles. This type of vandalism detection is most useful when filtering vandalism out of the revisions that are displayed to visitors, as in the Flagged Revisions project [14], or included in a static compilation.</p><p>The goal of this work was to build, and evaluate the performance of a vandalism detection tool that relies on the features computed by WikiTrust. <ref type="foot" coords="2,373.54,469.81,3.49,6.05" target="#foot_0">4</ref> WikiTrust is a reputation system for Wikipedia authors and content, based on the algorithmic analysis of the evolution of Wikipedia content <ref type="bibr" coords="2,261.30,495.39,10.79,8.64" target="#b0">[1,</ref><ref type="bibr" coords="2,272.09,495.39,7.19,8.64" target="#b1">2]</ref>. WikiTrust computes the quality of each revision, according to how much of the change introduced by the revision is preserved in subsequent revisions. This computation involves the comparison of each revision with both previous and subsequent revisions. It results in a quality index comprised between -1, for revisions that are entirely reverted, and +1, for revisions whose contribution is kept unchanged. Authors gain or lose reputation according to the quality of the revisions they make. WikiTrust then uses author reputation to compute the reputation of the text comprising each revision, at the granularity of the individual word, according to how well the text has been revised by high-reputation authors. In particular, after each revision, the text that has been inserted or heavily modified has a small amount of reputation, in proportion to the reputation of the revision's author, while the text that has been left unchanged has gained a small amount of reputation, again in proportion to the reputation of the revision's author.</p><p>We decided to base our vandalism detection tool on a simple and efficient architecture. WikiTrust stores the information about revision quality, author reputation, and text reputation in database tables that complement the standard database tables used by the Mediawiki software to implement the Wikipedia. To classify a revision as a vandalism or regular revision, our tool reads information from the WikiTrust and Mediawiki database tables about the revision and its author, and feeds this information to a decision-tree classifier which produces the desired output. We relied on the machinelearning toolset Weka to train and evaluate a classifier <ref type="bibr" coords="3,359.87,203.00,10.58,8.64" target="#b6">[7]</ref>. Our decision to rely only on information readily available in the Mediawiki and WikiTrust database tables has enabled us to produce an efficient Web-based API for our classifier: given the revision id of a Wikipedia revision, the API performs the database lookups and return the classification of the revision in milliseconds. This makes our classifier well-suited to the real-time identification of vandalism and filtering of revisions up to the scale of the English Wikipedia.</p><p>Since vandalism tends to be performed by anonymous or novice authors, who have little or no reputation, and since vandalism tends to be reverted promptly, corresponding to revisions of low quality as measured by WikiTrust, we expected our tool to perform fairly well at historical vandalism detection. Indeed, when evaluated on the PAN 2010 Wikipedia vandalism corpus <ref type="bibr" coords="3,250.83,357.99,10.58,8.64" target="#b8">[9]</ref>, our tool was able to achieve a recall of 83.5% of vandalism, with a precision of 48.5% and a false positive rate of 8.2%, corresponding to an area under the ROC curve <ref type="bibr" coords="3,258.25,381.90,11.62,8.64" target="#b5">[6]</ref> of 93.4%. To our surprise, our tool performed reasonably well even at the task of zero-delay vandalism detection, achieving a recall of 82.8% with a precision of 28.6% and false positive rate of 14.4%, leading to an area under the ROC curve of 90.9% (these results are summarized in Table <ref type="table" coords="3,417.52,417.76,3.60,8.64" target="#tab_0">1</ref>). The surprise is due to the fact that, in evaluating the performance for zero-delay vandalism, we have had to exclude the two most potent classification features we had: revision quality and user reputation. We had to discard the revision quality feature because it is based on a comparison between the given revision and future revisions, and these future revisions are of course not available when a revision is inserted.</p><p>On the other hand, the author reputation feature is available at the time a revision is made, and it would be usable in any real use of our tools. Unfortunately, we had to exclude this from the evaluation performed for the PAN 2010 Workshop, due to the time lag between the revisions being used for the evaluation, and the evaluation itself. The problem is that WikiTrust keeps track only of the current value of user reputation. At the time the PAN 2010 Workshop Task 2 evaluation took place, the values of user reputation in the WikiTrust database reflected author reputation as of May 2010. The PAN 2010 Task 2 evaluation dataset was instead based on revisions that had been entered in November or December 2009. Thus, the author reputation values available to us were in the future of the revisions to be evaluated, and we deemed them unsuitable for the evaluation of the performance of zero-delay vandalism detection. Undoubtedly, the performance we report for the zero-delay tool is lower than the real performance we can achieve by including also the user reputation feature.</p><p>The WikiTrust vandalism detection tool follows a standard two-phase machine learning architecture, consisting of a feature-extraction component followed by a classifier.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Features</head><p>In selecting the features to feed to the classifier, we have limited our consideration to the features that can be readily derived from the information available in the database tables used by WikiTrust, or by the Mediawiki software that serves the Wikipedia. This constraint was imposed so that the resulting tool could work on-line, in real-time, providing vandalism detection for any Wikipedia revision in a fraction of a second. As the WikiTrust database tables replicate some of the information present in the Mediawiki database tables, in practice we could derive all features from the WikiTrust tables alone: this enabled us to implement the vandalism detection tool as a self-contained web API on top of the WikiTrust database at UC Santa Cruz.</p><p>We describe below the features we extracted. We annotate with "H" the features that were extracted for use by the historical classifier, and we annotate with "Z" those that were extracted for use by the zero-delay classifier; we also indicate in brackets the feature name used by the classifier. Not all features we extracted for use by a classifier ended up being used: many were discarded by the classifier training process, as they were of too little significance to be worth using.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>-Author reputation [Reputation] (H).</head><p>Author reputation is an obvious feature to use, since vandalism tends to be performed predominantly by anonymous or novice users, both of which have reputation 0 in the system. In the WikiTrust vandalism detection tool, this feature is included both for zero-delay and for historical vandalism detection: author reputation is in fact available at any time for any user. However, for the purposes of the PAN 2010 Workshop evaluation, we have had to forego this feature, due to the time lag between the revisions, entered in November-December 2009, and the values of reputation available to us, updated as of May 2010. -Author is anonymous [Anon] (H,Z). In addition to author reputation, we also considered the fact whether the author was anonymous or not. Interestingly, whenever author reputation was included as a feature, the feature stating whether the author was anonymous or not was not used by the classifier. Evidently, knowing that a revision was authored by a low-reputation author was enough information: whether the author was anonymous, or a novice, did not seem to matter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>-Time interval to the previous revision [Logtime_prev] (H,Z), time interval to the next revision [Logtime_next] (H).</head><p>We provided as features the quantities log(1 + t), where t is amount of time from the preceding revision, or to the following revision. We thought this feature might be useful, as spam is usually reverted promptly. Indeed, the Logtime_next feature was used, but with a very low threshold of 2.74, corresponding to a delay of only a dozen seconds between a revision and the next one. -Hour of day when revision was created [Hour_of_day] (H,Z). We observed a correlation between the probability of vandalism, and the hour of the day at which the revision was created (timing signals have been used in a more sophisticated way for vandalism detection in <ref type="bibr" coords="5,257.38,131.27,14.94,8.64" target="#b11">[12]</ref>). The classifier did not use this feature: either it was unable to exploit it, or the information it contained was subsumed by that contained in other, more significant features. -Minimum revision quality [Min_quality] (H). In WikiTrust, every revision r is judged with respect to several past and future revisions. In detail, the quality q(r | r -, r + ) of r with respect to a past revision r -and a future revision r + is defined by</p><formula xml:id="formula_0" coords="5,237.76,211.41,156.76,23.89">q(r | r -, r + ) = d(r -, r + ) -d(r, r + ) d(r -, r) .</formula><p>where d(r, r ) represents the edit distance between r and r (for the details on this edit distance, see <ref type="bibr" coords="5,220.73,253.44,10.45,8.64" target="#b0">[1]</ref>). To understand this formula, it is useful to consider it from the point of view of the author A + of the future revision r + . From the point of view of A + , the distance d(r -, r + ) -d(r, r + ) represents how much closer to A + 's work the revision has become, and thus, it measures the improvement done by r upon r -. The amount d(r -, r) measures the amount of change done by introducing r. Thus, q(r | r -, r + ) is a measure of the improvement, divided by the total change: it is equal to -1 for entirely reverted revisions (where r -= r + ), and to +1 if the change introduced by r with respect to r -is perfectly preserved in r + . Every revision is evaluated with respect to up to 6 past and 6 future revisions <ref type="bibr" coords="5,466.48,348.30,10.58,8.64" target="#b2">[3]</ref>.</p><p>The minimum revision quality is the minimum quality computed with respect to all past and future revisions considered. A low value for the minimum revision quality indicates that at least one future author has reverted, in part or entirely, the edit that led to the revision. Minimum revision quality was the most influential feature for detecting vandalism in the historical vandalism detection tool. -Total weight of judges [Judge_weight] (H). Not all triples (r -, r, r + ) used to compute the quality of revision r are given the same weight. The higher the reputation rep(A + ) of the author A + of r + , the higher the weight we give to the computed quality q(r | r -, r + ). Additionally, if r + is very different from both r -and r, then the computed quality is given less weight, as it it difficult to compute what fraction of the change from r -to r has been preserved in r + . Thus, we give to each judging triple (r -, r, r + ) the weight</p><formula xml:id="formula_1" coords="5,203.16,506.55,225.97,23.89">exp - min(d(r -, r + ), d(r, r + )) 3 • (1 + d(r -, r)) • log(1 + rep(A + )).</formula><p>The total weight of the judges is the total weight of all triples used to judge the revision r. This feature was not used by any classifier. -Average revision quality [Avg_quality] (H). In addition to the minimum revision quality mentioned above, we have also considered the average quality of a revision, with respect to the past and future revisions with which it has been compared, weighed as above. In cases in which the minimum revision quality was above the -0.662 threshold, the average quality was a strong signal, with a discrimination threshold of 0.156.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>-Maximum dissent [Max_dissent] (H). The maximum dissent of a revision mea-</head><p>sures how close the average revision quality is to the minimum revision quality. This feature turned out to be useful in the classifier.</p><p>-Delta [Delta] (H, Z). This feature measures the edit distance d(r, r -) between a revision and the previous one. This feature was used by the classifiers, mainly to treat very small edits in a more lenient way than longer ones. -Revision comment length [Comment_len] (H,Z). The length of the comment is another feature we considered, as we assumed that vandalism tended to be associated with short comments. The classifier made use of this feature only for the zero-delay detection, and even there the feature did not carry much weight. -Next revision comment length [Next_comment_len] (H). We also considered as a feature the length of the comment of the revision following the revision to classify. Somewhat to our surpise, this feature turned out to be useful: if the next comment was longer than 110 characters, this made it slightly more likely that the revision under consideration was vandalism. -Next comment mentioned a revert [Next_comment_revert] (H). We considered whether the comment of the next revision mentioned a revert or undo. We expected this to be an important feature: after all, most editors label in such a way the corrective actions they take in presence of vandalism. However, our classifier did not make use of this feature: the features of minimum and average revision quality turned out to be much more reliable and less noisy.</p><p>-Previous text trust histogram [P_prev_hist0 . . . P_prev_hist9] (H,Z). Whenever a revision is created, WikiTrust computes the reputation of each word of the revision, where the reputation is an integer in the interval 0, . . . , 9 <ref type="bibr" coords="6,404.89,354.88,10.58,8.64" target="#b1">[2]</ref>. The reputation of a word indicates how well the word has been revised by reputable authors; in particular, words that have been just entered or displaced by authors without reputation (including both novice and anonymous authors) are assigned a reputation of 0. When the revision is created, WikiTrust also computes a 10-column histogram detailing how many words of the revision have each of the 10 possible reputation values, and stores the histogram in the database, in an entry associated with the revision. We renormalized the histogram, so that the columns summed to 1, and we used the renormalized value of each column as a feature. This turned out to be an important feature in the historical vandalism detection tool, and even more so in the zero-delay detection tool. We tried many different renormalizations for the histograms, such as ensuring that the columns sum to 1 (as in this case), or taking the logarithms of every column value (as in the histogram difference, explained later). The different normalizations led to essentially the same classifier performance.</p><p>-Current text trust histogram [Hist0 . . . Hist9] (H,Z). The current value of the text trust histogram was also provided as a feature, in this case without any renormalization. This feature turned out to be useful in most models, and in particular, in the models for zero-delay vandalism detection. -Histogram difference [L_delta_hist0 . . . L_delta_hist9] (H, Z). For each possible text trust value i ∈ {0, . . . , 9}, we also included a measure of log(1</p><formula xml:id="formula_2" coords="6,151.70,579.95,328.89,20.91">+ |h(i) - h -(i)|) • sign(h(i) -h -(i))</formula><p>, where h is the text trust histogram for the current revision, and h -is the text trust histogram for the previous revision. This feature turned out to be useful in both the zero-delay and the historical vandalism tools: an increase in the number of words with reputation 0 was associated with vandalism.</p><p>In the historical vandalism detection tool, we found that the behavior of the classifier essentially depended on two strong features: [Min_quality] and <ref type="bibr" coords="6,393.48,656.44,48.79,8.64">[Reputation]</ref>. The ad-dition of other features increased performance somewhat, but the set of other features considered was not particularly critical. In the zero-delay tool, on the other hand, the features related to the trust histogram of words played an important role, since they were used in part as proxies for the user reputation feature, which could not be used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The Classifier</head><p>We based our vandalism tools on standard classifiers, and precisely, on the alternating decision tree classifier available as part of Weka <ref type="bibr" coords="7,324.00,215.58,10.57,8.64" target="#b6">[7]</ref>. We experimented with various classifiers provided as part of Weka, and the alternating decision tree classifier (ADTree) was the one that at the same time peformed best, and let to the classification models that were the simplest, and the easiest to implement in a web-based API. Since vandalism is relatively rare, we wished to achieve high recall of vandalism even at the expenses of precision. To this end, we trained the classifier using a cost matrix that specified that the cost of misclassifying a vandalism as a regular revision was β times as large as the cost of misclassifying a regular revision as vandalism. After various experiments, we settled on very small decision trees, consisting of only 10 or 20 nodes. In the PAN 2010 submission, we used β = 10 and a 20-node classifier. As we will see, the 20-node classifier used in the submission is no better than the simpler 10-node classifier we will present in detail. Again, we attribute this to the predominance of a few, very strong features. The classifier for the submission was trained with the following command:</p><p>weka.classifiers.meta.CostSensitiveClassifier -cost-matrix "[0.0 1.0; 10.0 0.0]" -S 1 -W weka.classifiers.trees.ADTree ---B 20 -E -3</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Results</head><p>The performance of the classifier is summarized in Table <ref type="table" coords="7,372.92,444.60,3.74,8.64" target="#tab_0">1</ref>. In the table, we specify the number of nodes used in the classifier, and the cost-factor β used to prioritize recall agaist precision. The models with β = 50 can be used for the problem of selecting a recent, non-vandalized revision of a Wikipedia article, an application where it is more important to reject vandalism, than to avoid false positives. The resulting classifier achieves 92.4% rejection of vandalism, while exhibiting a false positive rate of only 19.8%. As a selection tool for the best revision of an article has the luxury of selecting the best among available revisions, we believe the real-world vandalism rejection rate would in fact exceed 92.4%. The models used by the 10-node historical and zero-delay classifiers are reported in Tables <ref type="table" coords="7,264.55,552.20,4.98,8.64">2</ref> and<ref type="table" coords="7,288.57,552.20,3.88,8.64">3</ref>; these models offer an insight into the working of the classifier, and on the relative importance of the features in each case. In the tables, the nodes of the decision tree are labeled by integers, and the indentation used denotes the level of the node in the tree.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Conclusions</head><p>Our approach to the vandalism task is orthogonal to the usual heuristics and natural language processing techniques that are suggested when the topic of Wikipedia arises. We build atop WikiTrust <ref type="bibr" coords="8,234.90,294.67,10.58,8.64" target="#b0">[1]</ref>, a system for computing user and text reputations by using the implicit feedback of later editors to compute a quality score for every edit. This has the interesting property of adapting with the community to changing notions of acceptable behavior, which we use to construct user reputation. Utilizing features that included data from the future of an edit made notable improvements in our ability to classify the edits either as vandalism or regular, from an AUC value of 0.909 for our zero-delay tool, to an AUC value of 0.934 for our historical analysis tool. An open question is whether the information present in our feature set already overlaps other solutions, or adds to the picture. For instance, it would be relatively easy to add NLP analysis at the point where the actual differences of an edit is computed. As part of our WikiTrust project, we are already able to dynamically download revisions and evaluate them. To encourage further research extending the ideas we propose here, we have integrated our results from this work into the live system and made two web-based APIs available on an experimental basis.</p><p>The first web API implements our final model and presents the caller with a single numerical result indicating the probability that the named revision is vandalism. For a revision &lt;id&gt;, the call http://en.collaborativetrust.com/WikiTrust/RemoteAPI? method=quality&amp;revid=&lt;id&gt; returns the vandalism estimate for the revision, using the WikiTrust historical vandalism detection tool.</p><p>Our second web API will be of greater interest to vandalism detection researchers: we are making available the features for each revision, returned as a JSON<ref type="foot" coords="8,439.56,576.77,3.49,6.05" target="#foot_1">5</ref> result. It uses the same URL structure as the first API, but uses a method value of "rawquality" to indicate that the request is for the feature set: http://en.collaborativetrust.com/WikiTrust/RemoteAPI? method=rawquality&amp;revid=&lt;id&gt;</p><p>The resulting JSON output is a hash table of key/value pairs, naming the feature and the corresponding value for that feature.</p><p>These web APIs will be available as time and resources allow us to maintain this service. We hope that the community will make use of these services and extend this work easily with their own ideas.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" coords="8,134.77,117.38,345.83,142.06"><head>Table 1 .</head><label>1</label><figDesc>Performance summary of the historical and zero-delay vandalism tools, evaluated on the training dataset (via 10-fold cross validation), and on the PAN 2010 evaluation dataset. The classifier used for the PAN 2010 submission is Z20b10.</figDesc><table coords="8,158.79,117.38,297.77,99.32"><row><cell>Classifier</cell><cell>Type</cell><cell>Nodes β Dataset</cell><cell cols="4">Recall Precision False Pos. ROC area</cell></row><row><cell cols="2">H10b20 Historical</cell><cell>10 20 Training</cell><cell>0.903</cell><cell>0.430</cell><cell>0.078</cell><cell>0.956</cell></row><row><cell cols="2">H10b20 Historical</cell><cell cols="2">10 20 Evaluation 0.835</cell><cell>0.485</cell><cell>0.082</cell><cell>0.934</cell></row><row><cell cols="2">H20b50 Historical</cell><cell>20 50 Training</cell><cell>0.950</cell><cell>0.276</cell><cell>0.163</cell><cell>0.957</cell></row><row><cell cols="2">H20b50 Historical</cell><cell cols="2">20 50 Evaluation 0.924</cell><cell>0.302</cell><cell>0.198</cell><cell>0.937</cell></row><row><cell cols="2">Z10b20 Zero-Delay</cell><cell>10 20 Training</cell><cell>0.883</cell><cell>0.286</cell><cell>0.144</cell><cell>0.930</cell></row><row><cell cols="2">Z10b20 Zero-Delay</cell><cell cols="2">10 20 Evaluation 0.828</cell><cell>0.308</cell><cell>0.173</cell><cell>0.909</cell></row><row><cell cols="2">Z20b10 Zero-Delay</cell><cell>20 10 Training</cell><cell>0.837</cell><cell>0.357</cell><cell>0.098</cell><cell>0.931</cell></row><row><cell cols="2">Z20b10 Zero-Delay</cell><cell cols="2">20 10 Evaluation 0.771</cell><cell>0.369</cell><cell>0.122</cell><cell>0.904</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_0" coords="2,144.73,657.93,134.50,6.31"><p>http://www.wikitrust.net/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_1" coords="8,144.73,657.93,102.22,6.31"><p>http://www.json.org</p></note>
		</body>
		<back>

			<div type="funding">
<div><p>may not necessarily reflect the relative sizes of the contributions. This research has been in part supported by the <rs type="funder">Institute for Scalable Scientific Data Management</rs>, an educational collaboration between <rs type="institution">LANL</rs> and the <rs type="institution">University of California Santa Cruz</rs>.</p><p>:</p></div>
			</div>
			<listOrg type="funding">
			</listOrg>
			<div type="references">

				<listBibl>

<biblStruct coords="10,142.61,221.04,333.15,7.77;10,150.95,231.99,258.33,7.77" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="10,239.15,221.04,189.85,7.77">A content-driven reputation system for the Wikipedia</title>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Adler</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">L</forename><surname>De Alfaro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,447.37,221.04,28.39,7.77;10,150.95,231.99,184.85,7.77">Proc. of the 16th Intl. World Wide Web Conf. (WWW 2007)</title>
		<meeting>of the 16th Intl. World Wide Web Conf. (WWW 2007)</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,142.61,242.78,325.37,7.77;10,150.95,253.74,312.39,7.77;10,150.95,264.70,23.90,7.77" xml:id="b1">
	<analytic>
		<title level="a" type="main" coord="10,404.21,242.78,63.77,7.77;10,150.95,253.74,64.30,7.77">Assigning trust to Wikipedia content</title>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Adler</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">K</forename><surname>Chatterjee</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">L</forename><surname>De Alfaro</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Faella</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">I</forename><surname>Pye</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">V</forename><surname>Raman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,233.27,253.74,182.71,7.77">WikiSym 2008: International Symposium on Wikis</title>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,142.61,275.49,329.70,7.77;10,150.95,286.45,222.20,7.77" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="10,284.08,275.49,116.74,7.77">Robust content-driven reputation</title>
		<author>
			<persName coords=""><forename type="first">K</forename><surname>Chatterjee</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">L</forename><surname>De Alfaro</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">I</forename><surname>Pye</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,418.78,275.49,53.54,7.77;10,150.95,286.45,148.47,7.77">Proceedings of AISec 08: First ACM Workshop of AISec</title>
		<meeting>AISec 08: First ACM Workshop of AISec</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,142.61,297.23,328.02,7.77;10,150.95,308.19,327.17,7.77;10,150.95,319.15,203.03,7.77" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="10,339.47,297.23,131.16,7.77;10,150.95,308.19,164.96,7.77">Detecting Wikipedia vandalism with active learning and statistical language models</title>
		<author>
			<persName coords=""><forename type="first">S</forename><forename type="middle">C</forename><surname>Chin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W</forename><surname>Street</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Srinivasan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Eichmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,334.38,308.19,143.74,7.77;10,150.95,319.15,176.88,7.77">WICOW &apos;10: Proceedings of the Fourth Workshop on Information Credibility on the Web</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,142.61,329.94,325.70,7.77;10,150.95,340.90,301.64,7.77;10,150.95,351.86,234.42,7.77" xml:id="b4">
	<analytic>
		<title level="a" type="main" coord="10,290.91,329.94,177.39,7.77;10,150.95,340.90,33.84,7.77">Learning to predict the quality of contributions to wikipedia</title>
		<author>
			<persName coords=""><forename type="first">G</forename><surname>Druck</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">G</forename><surname>Miklau</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Mccallum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,203.00,340.90,249.59,7.77;10,150.95,351.86,122.66,7.77">WikiAI&apos;08: Proceedings of the Workshop on Wikipedia and Artificial Intelligence: An Evolving Synergy</title>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="7" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,142.61,362.65,316.07,7.77;10,150.95,373.60,92.14,7.77" xml:id="b5">
	<analytic>
		<title level="a" type="main" coord="10,195.35,362.65,226.16,7.77">ROC graphs: Notes and practical considerations for researchers</title>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Fawcett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="10,427.30,362.65,31.37,7.77;10,150.95,373.60,32.37,7.77">Machine Learning</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="1" to="38" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,142.61,384.39,335.51,7.77;10,150.95,395.35,234.50,7.77" xml:id="b6">
	<analytic>
		<title level="a" type="main" coord="10,417.87,384.39,60.25,7.77;10,150.95,395.35,98.78,7.77">The WEKA data mining software: An update</title>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">E</forename><surname>Frank</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">G</forename><surname>Holmes</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Pfahringer</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Reutemann</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">I</forename><surname>Witten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="10,255.71,395.35,81.94,7.77">SIGKDD Explorations</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,142.61,406.14,319.35,7.77;10,150.95,417.10,320.28,7.77;10,150.95,428.06,319.59,7.77" xml:id="b7">
	<analytic>
		<title level="a" type="main" coord="10,235.28,406.14,226.68,7.77;10,150.95,417.10,35.31,7.77">Using dynamic Markov compression to detect vandalism in the Wikipedia</title>
		<author>
			<persName coords=""><forename type="first">K</forename><surname>Itakura</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Clarke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,204.64,417.10,266.60,7.77;10,150.95,428.06,197.18,7.77">SIGIR&apos;09: Proceedings of the 32nd International ACM SIGIR Conference on Research and Development in Information Retrieval</title>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="822" to="823" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,142.61,438.84,337.98,7.77;10,150.95,449.80,169.49,7.77" xml:id="b8">
	<analytic>
		<title level="a" type="main" coord="10,199.22,438.84,163.92,7.77">Crowdsourcing a Wikipedia vandalism corpus</title>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Potthast</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,381.25,438.84,99.34,7.77;10,150.95,449.80,96.01,7.77">Proc. of the 33rd Intl. ACM SIGIR Conf. (SIGIR 2010)</title>
		<meeting>of the 33rd Intl. ACM SIGIR Conf. (SIGIR 2010)</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,142.24,460.59,311.99,7.77;10,150.95,471.55,327.54,7.77;10,150.95,482.51,132.55,7.77" xml:id="b9">
	<analytic>
		<title level="a" type="main" coord="10,279.48,460.59,158.62,7.77">Automatic vandalism detection in Wikipedia</title>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Potthast</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Stein</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Gerling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,150.95,471.55,284.33,7.77">ECIR&apos;08: Proceedings of the 30th European Conference on IR Research. LNCS</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">4956</biblScope>
			<biblScope unit="page" from="663" to="668" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,142.24,493.30,307.99,7.77;10,150.95,504.26,313.14,7.77;10,150.95,515.21,327.95,7.77" xml:id="b10">
	<analytic>
		<title level="a" type="main" coord="10,287.44,493.30,162.79,7.77;10,150.95,504.26,134.25,7.77">Automatic vandalism detection in Wikipedia: Towards a machine learning approach</title>
		<author>
			<persName coords=""><forename type="first">K</forename><surname>Smets</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Goethals</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Verdonk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,303.55,504.26,160.54,7.77;10,150.95,515.21,211.71,7.77">WikiAI&apos;08: Proceedings of the Workshop on Wikipedia and Artificial Intelligence: An Evolving Synergy</title>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="43" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,142.24,526.00,331.90,7.77;10,150.95,536.96,322.44,7.77;10,150.95,547.92,124.44,7.77;10,134.77,558.71,7.47,7.77" xml:id="b11">
	<analytic>
		<title level="a" type="main" coord="10,258.30,526.00,215.83,7.77;10,150.95,536.96,71.38,7.77">Detecting Wikipedia vandalism via spatio-temporal analysis of revision metadata</title>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>West</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Kannan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">I</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,240.63,536.96,232.77,7.77;10,150.95,547.92,56.69,7.77">EUROSEC&apos;10: Proceedings of the Third European Workshop on System Security</title>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page">13</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,142.24,624.12,151.33,7.77;10,150.95,635.92,209.81,6.31;10,150.95,646.04,314.69,7.77" xml:id="b12">
	<monogr>
		<ptr target="http://en.wikipedia.org/wiki/Wikipedia:WikiProject_Vandalism_studies/Study1" />
		<title level="m" coord="10,150.96,624.12,114.22,7.77">Wikiproject vandalism study #1</title>
		<imprint>
			<date type="published" when="2006">2006. 15-July-2010</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
