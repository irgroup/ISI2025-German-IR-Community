<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,72.03,75.53,314.39,17.00">STFT Transformers for Bird Song Recognition</title>
				<funder>
					<orgName type="full">NVIDIA</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName coords="1,72.03,95.83,96.85,10.80"><forename type="first">Jean-Francois</forename><surname>Puget</surname></persName>
							<email>jpuget@nvidia.com</email>
							<affiliation key="aff0">
								<orgName type="institution">NVIDIA</orgName>
								<address>
									<addrLine>400 avenue Roumanille</addrLine>
									<postCode>06410</postCode>
									<settlement>BIOT</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,72.03,75.53,314.39,17.00">STFT Transformers for Bird Song Recognition</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">0F55A942493F3D2B5213BA1C0CE9255B</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-06-26T16:14+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Vision Transformer</term>
					<term>Audio classification</term>
					<term>Bird song recognition</term>
					<term>CEUR-WS</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>State of the art for audio classification often relies on the use of convolution neural networks on images made of (log mel) spectrograms. Recently, new image classification models, namely Vision Transformers (ViT), have been proposed. ViT work by mapping non overlapping image patches to the input of a vanilla transformer model. While radically different from convolution neural networks their performance is almost as good. Inspired by this we have explored various ways to adapt ViT to spectrograms classification. The most effective way we found was to use time slices of spectrograms as the input patches. We call this model a STFT Transformer. This model has been evaluated and used during the BirdCLEF 2021 competition. This model alone would have got the 15 th rank out of 816 competitors. When blended with some convolution networks it led to a 11 th rank and a gold medal in that competition.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Bird song recognition is key for monitoring environment evolution and detect possible degradations. The use of machine learning to predict which species are present on audio recordings is a key enabler. A lot of progress has been possible by leveraging the extraordinary progress of computer vision machine learning models in the last decade. This progress is visible through BirdCLEF, a yearly competition series focusing on bird song recognition from audio recordings. Models that win one of these competitions are baselines for the next one. Progress is steady.</p><p>The 2021 edition <ref type="bibr" coords="1,168.08,464.64,12.00,9.90" target="#b0">[1]</ref>[2], hosted on Kaggle, was no exception. Top solutions from previous year competition were used as baseline, eg <ref type="bibr" coords="1,240.59,477.39,12.01,9.90" target="#b2">[3]</ref> <ref type="bibr" coords="1,252.59,477.39,12.01,9.90" target="#b3">[4]</ref>. Participants had to find novel techniques to beat previous year baseline. We present a novel technique we used, called STFT Transformer. It was inspired by recently image classifications models called Vision Transformers <ref type="bibr" coords="1,362.90,502.64,23.81,9.90">[5][6]</ref>.</p><p>Using STFT Transformer is in line with what is now standard practice. Audio recordings are transformed into two dimensions images via the application of short term Fourier transform (STFT) on overlapping windows on the signal. The resulting image is called a spectrogram and has two dimensions: a frequency axis, and a time axis. The spectrogram can optionally be further transformed by log and mel transforms to get a non linear frequency axis. Figure <ref type="figure" coords="1,372.88,565.91,5.50,9.90" target="#fig_0">1</ref> shows a 5 second waveform and its log mel spectrogram.</p><p>Once we have 2D images we can use all the machinery developed for image classification, including state of the art convolution neural networks (CNNs) like EfficientNet. We can also use image augmentation techniques to make models more robust. Using CNNs on spectrograms must be done carefully though, because spectrograms are not ordinary images. The two axes of spectrograms (frequency and time) are not interchangeable. Some commonly used image augmentation techniques such as image rotation make no sense with spectrograms. A further issue is that CNNs are good at learning translation independent patterns. This is good for the time axis but is detrimental on the frequency axis as it corresponds to pitch change. We don't want models that ignore the pitch. STFT Transformer solves this problem entirely.</p><p>The contribution of this paper is four folds: The paper is organized as follows. We describe STFT Transformer in section 2, and the 2021 BirdCLEF competition in section 3. We discuss how the model was trained on BirdCLEF data in section 4. We report competition results for STFT vs CNNs in section 5. We conclude and discuss possible improvements in section 6.</p><formula xml:id="formula_0" coords="2,104.30,409.00,49.66,10.01">â€¢ A new</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">STFT Transformer</head><p>Using transformers to audio spectrograms is not straightforward. One of the issues is how to train them with audio data. Like any transformer model, this would require a lot of data. For comparison, ViT <ref type="bibr" coords="2,93.05,595.92,12.91,9.90" target="#b4">[5]</ref> has been trained on a 300M images dataset. The BirdCLEF competition training data is way too small for reliable training with about 64k recordings only.</p><p>One way to cope with small data is to use a pretrained model and fine tune it on the competition data. Unfortunately, there are no pretrained transformers for spectrograms. We decided to reuse pretrained weights from vision transformers pretrained on large image datasets. For this we needed to use spectrograms of the size expected by Vision Transformers. ViT expects an image of size 384x384 pixels. It then extracts non overlapping 16x16 patches arranged in a 24x24 grid.</p><p>Our first try was to create 384x384 spectrograms. Results were very disappointing, mostly because the time axis was too short, i.e. the frame rate (384/5 = 75 Hz) was too small. We then realized that we could use a different grid shape while keeping the number of patches unchanged. We tried 12x48 patches (192x768 spectrogram, 154 Hz frame rate), and 16x36 (256x576 spectrogram, 115 Hz frame rate). Results were better because frame rate was higher, but still way below CNNs.</p><p>One reason for poorer performance was because ViT adds learnable position embeddings to its input patches. These embeddings capture the spatial relationship between patch locations. When we change the grid the position embeddings are no longer correct.</p><p>We implemented an interpolation from the 24x24 grid embeddings to the new grid size, either 12x48 or 16x36 grid. This interpolation was called after pretrained weights were loaded into the model and before training. As a result, the position embeddings captured the new spatial information accurately. This improved the model accuracy a bit, but most importantly, it made training convergence easier.</p><p>After revisiting the grid shape, we revisited patches shapes. If we use a spectrogram of size 256x576 pixels, i.e. a frame rate of 115Hz, then one time slice of the spectrogram (one STFT) contains 256 pixels. And 256 pixels is precisely the number of pixels in a 16x16 patch. Therefore, we decided to feed a 1x576 grid of 256x1 patches to ViT. The main consequence of this choice is that patches encompass all the frequency axis. There is no longer a need to worry about their frequency position. And there cannot be any pitch invariance in the model anymore.</p><p>Still ViT expects a 384x384 image. We therefore had to reshape the 256x576 spectrogram into a 24x24x16x16 image. Figure <ref type="figure" coords="3,198.58,251.82,5.50,9.90">2</ref> shows how the spectrogram from Figure <ref type="figure" coords="3,385.86,251.82,5.50,9.90" target="#fig_0">1</ref> looks like after the reshaping.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2: example of an input to STFT Transformer</head><p>We tried various ways to adapt the existing position embeddings to a one dimensional grid but the best was to just leave them as is. During fine tuning the model adjusted them to the one-dimensional sequence nature of the input.</p><p>We call the resulting model a STFT Transformer given it takes as input a STFT sequence. This model has been evaluated and used during the BirdCLEF competition, see below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">BirdCLEF 2021 competition</head><p>The competition was hosted on Kaggle [6], the largest machine learning competition worldwide, now owned by Google. Training data for this year competition came in two flavors:</p><p>â€¢ 63874 recordings from Xeno Canto <ref type="bibr" coords="3,290.88,710.19,11.44,9.90" target="#b5">[7]</ref>. Each recording comes with a primary label, i.e. the name of a bird species heard in the recording. It also has secondary labels, which are other species heard in the recording, but maybe less often and not as loud as the primary label. Duration of these recordings ranges from 5 seconds to minutes. Location, time of recording, and many other meta data are available for each of these recordings. â€¢ 20 soundscapes of 10 minutes duration. Each 5 second clip of train soundscape comes with a list of bird species heard during the 5 seconds, or nocall if there is none. Test data is hidden from contestants. It is made of about 80 soundscapes similar to the train soundscapes. The labels for test data are also hidden. There were 397 bird species present in training data. Competition hosts said that all species present in test data also appeared in training data. Test data was split between a public part and a private part that were kept hidden.</p><p>Contestants had to provide a script or a jupyter notebook on Kaggle [6] that reads test data, and that outputs a file containing predictions for each 5 second clip of each test soundscape, without being able to access any internet resource. Hiding the test data is a great way to test generalization of machine learning models to new data. Disabling internet access is to make sure no one can leak test data.</p><p>Contestants could train machine learning models as they see fit. Then they usually created a Kaggle dataset containing their trained model weights. This Kaggle dataset was attached to the test notebook. Code in the notebook could then load these weights from the attached dataset and use them. This way it was possible to use pretrained models on hidden test data.</p><p>Once contestant code was submitted it was run with the hidden test data, and two scores were computed. but the score obtained on the public test part was reported to the contestant. Contestant best public score was displayed in a public leaderboard. It was then possible to see the performance of all contestants in real time. This public leaderboard is a very effective gamification tool. It is very addictive, and most of the contestants checked it on a daily basis during the competition, if not often.</p><p>At the end of the competition scores computed on the private test part are disclosed in a private leaderboard. Ranking on the private leaderboard is the official result of the competition. Top 11 ranks were awarded a gold medal. Top 3 ranks also won a prize money.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Training models</head><p>Even with pretrained weights, fine tuning transformers is tricky. Pipeline designed for training convolution networks fail miserably with exploding loss functions, or disappointing model performance. We devised a training pipeline that enabled robust training of good STFT Transformers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Data preprocessing</head><p>We trained the model on the Xeno Canto recordings. It was clear that training on random 5 second clips had a drawback: some of the clips may not contain the target bird. We then used a simple hypothesis: clips were stripped, i.e. periods without a song at the beginning or at the end were removed for the sake of reducing storage needs. We therefore trained on first 5 seconds or last 5 seconds of clips, assuming these would contain the primary label bird. We preprocessed all the Xeno Canto recordings and saved their first 8 seconds and their last 8 seconds as Numpy files. This speeded up data loading significantly given we did not need to load full recordings.</p><p>In order to improve model confidence when predicting no call, we added to our training data the nocall clips from freefield1010 dataset <ref type="bibr" coords="4,245.85,649.94,11.44,9.90" target="#b6">[8]</ref>. We added a 498th class to represent the nocall. As a result our model could predict both one or more birds, or a nocall.</p><p>Train soundscapes could contain several bird species in a 5 second clip. To model that out of mono bird clips from Xeno Canto we implemented a mixup variant were up to 3 training clips could be merged. To model the presence of several bird species we define the target for the merged clip as the maximum of the targets of each merged clip. The presence of nocall clips from freefield1010 added background noise when they were used via mixup.</p><p>We used librosa <ref type="bibr" coords="4,163.58,738.46,12.66,9.90" target="#b7">[9]</ref> to compute spectrograms. We used 2048 n_fft, 250 n_mels, and the default windows length. We computed the hop length as a function of the desired spectrogram length: a shorter hop length yields a longer spectrogram. The number of mels defines the height of the spectrogram. It was then resized to the desired height. We contemplated moving spectrogram computation to GPU but we saw that the GPU was fully busy on Kaggle with model prediction.</p><p>We implemented pitch variation and speed variations by modifying the sampling rate and the hop length for the STFT computation routine from librosa. A higher sampling rate than the actual sampling rate moved the pitch upward. A shorter hop length amounted to using to a slowed down recording. Clip length was adjusted to yield the same spectrogram length as when no data transformation was used. It is why we stored clips longer than 5 seconds. It enables using long enough clips when hop length is increased. We also added gaussian noise used in previous year solution <ref type="bibr" coords="5,390.92,175.79,11.44,9.90" target="#b2">[3]</ref>.</p><p>When predicting on soundscapes (train or test) we disabled all data augmentations. Soundscape was fed 5 second per 5 second to the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Loss function and secondary labels</head><p>Contestant submissions were evaluated by comparing the model predictions to the test ground truth. For each 5 second clip a F1 score between the predictions and the ground truth is computed. Then these F1 scores are averaged.</p><p>F1 score cannot be used directly as a loss function for training models because it is not differentiable. We simply used binary cross entropy for a 498 multilabel problem. For each training clip we defined a 498 target, with a 1 for the primary label or a nocall.</p><p>Primary labels were noisy, because there is no warranty that the primary label does appear in the first 5 seconds and in the last 5 seconds of every Xeno Canto recording. But they must happen often enough given the good result of our models. We hypothesize that the small proportion of cases where they do not appear in these clips acts as a regularization, a bit like label smoothing.</p><p>Secondary labels were even noisier than primary labels. And there, the clipping argument does not apply. Secondary labels could occur really anywhere in training clips. To cope with that we masked the loss for secondary labels as we didn't want to force the model to learn a presence or an absence when we don't know. We therefore defined a secondary mask that nullifies the BCE loss for secondary labels. For instance, assuming only 3 bird species b0, b1, and b2, and a clip with primary label b0 and secondary label b1, then these two target values are possible:</p><p>[1, 0, 0] [1, 1, 0] The secondary mask is therefore:</p><formula xml:id="formula_1" coords="5,86.28,499.39,34.66,9.90">[1, 0, 1]</formula><p>The loss for b1 is masked and ignored. For merged clips in mixup, a target is masked if it it not one of the primary labels and if it is one of the secondary labels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Cross validation</head><p>We used two ways to evaluate our model strength. The first one, used by many contestants, is to use the train soundscape as holdout dataset. Models are trained on Xeno Canto clips, then used to make predictions on every 5 second clips of every train soundscape. Then F1 score is computed as for the test data.</p><p>The test data had 54% of no calls as witnessed by a nocall submission score. In order to adjust for the difference in the proportion of nocall clips in training soundscapes and test soundscapes we scaled the computation of validation score. We compute F1score on no call rows separately from F1 score on bird call rows, then compute final score with score_all = 0.54 * score_nocall + (1 -0.54) * score_birds (1) Our validation score was very close to the submission score, except for some models from time to time. In order to detect we used 5 folds cross validation on xeno canto clips. We adjusted the score with equation (1) as well.</p><p>We then defined our local score as the minimum of the train soundscape score and the Xeno Canto cross validation score. This revised local score was very well correlated with leaderboard score.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.4.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Training transformers</head><p>We started training our modified vision transformers using the same pipeline as our CNNs, namely 60 epochs with Adam optimizer with weight decay and a one cycle lr scheduler. Given the class imbalance we used a posweight of 10 in BCE loss as well as a class weight that was proportional to the inverse of each bird species frequency. This worked very well in past competitions for CNNs. It worked very well here too because our CNN stayed on top of the public leaderboard during all the competition till the last week.</p><p>However, it was impossible to train transformers with it. Either loss was exploding, or the models did not train much. We hypothesized that it was because loss landscape was not smooth at all for vision transformers, with very narrow local minima. This hunch has been confirmed since then in a paper published after the competition deadline <ref type="bibr" coords="6,279.21,219.57,16.74,9.90" target="#b8">[10]</ref>.</p><p>To make transformer learn we hypothesized that keeping gradient as small as possible would enable reaching very narrow loss minima. We tried gradient clipping but it was too crude. We finally ended up with using a combination of amp autoscale, no class weights, and a small learning rate of 1e-4. In order to cope with the class imbalance we sampled clips according to a weight that depended on its primary label frequency. The less frequent, the more often the clip would be selected.</p><p>We tried several variants of ViT and only kept the original ViT <ref type="bibr" coords="6,367.30,295.59,12.69,9.90" target="#b4">[5]</ref> and its DeiT variant <ref type="bibr" coords="6,473.53,295.59,16.60,9.90" target="#b9">[11]</ref>, mostly because they were the ones supporting 16x16 patches on images larger than 224x224. We used timm <ref type="bibr" coords="6,98.03,320.84,18.16,9.90" target="#b10">[12]</ref> implementation of vision transformers and other models. Models were trained on NVIDIA DGX Station V100.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Results</head><p>Our models were trained on 5 second clips. They may miss longer time span patterns as well as species co-occurrences. We could have addressed this by using a sound event detection model <ref type="bibr" coords="6,491.71,403.86,18.44,9.90" target="#b11">[13]</ref> with our models as backbone. Instead, we decided to postprocess our soundscape prediction logits using 3 thresholds tuned on train soundscapes, pres_thr, incr_thr and occur_incr:</p><p>1. A key observation was made in <ref type="bibr" coords="6,249.22,441.86,12.66,9.90" target="#b2">[3]</ref> and <ref type="bibr" coords="6,283.34,441.86,11.88,9.90" target="#b3">[4]</ref>: if a bird is heard in one of the 5 second clips of a soundscape then it is more likely to be heard in others. To capture this correlation, we computed the maximum prediction for each species across all 5 second clips. For species where this maximum is greater than pres_thr we predicted this species presence as soon as a 5 second clip prediction is above incr_thr. 2. If two bird species are known to co exist then hearing one makes the other one more likely.</p><p>For this we computed a co occurrence matrix using primary and secondary labels. If a species was detected then logits for all co occurring species were increased by occur_incr. Typical values for pres_thr, incr_thr and occur_inc are: 2.1, -0.2, 0.9. We report results for 5 models, STFT Transformer, two Vision Transformers using 16x16 patches, ViT and DeiT, and two variants of our best CNN in Table <ref type="table" coords="6,329.63,568.41,4.14,9.90" target="#tab_0">1</ref>. The two CNNs uses the same EfficientNet b3 backbone, but with different input sizes. For each model we report the validation score on training data, the public leaderboard score and the private leaderboard score. We see that DeiT outperformed ViT when applied to spectrograms with 16x16 patches. Therefore, we did not submit a ViT version of STFT Transformer and only used the DeiT version. STFT Transformer looked weaker on the public leaderboard than the CNNs, but it performed slightly better on the private leaderboard. We also see that STFT Transformer is significantly better than DeiT using 16x16 patches. We believe it is because the former removes the pitch translation issue that the latter faces.</p><p>STFT private score is 15 th on the private leaderboard. Given most top teams used an ensemble of model we think STFT Transformer alone is in the top 10 models of the competition. When blended with the two CNNs in the table it led to the 11th rank and a gold medal. It is a bit surprising that our models, trained on short clips, were competitive with sound event detection (SED) models <ref type="bibr" coords="7,471.70,188.54,18.16,9.90" target="#b11">[13]</ref> trained on 30 second clips used by most top teams in the competition.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusion and future work</head><p>State of the art models for audio classification often rely on convolution networks applied to spectrograms. We presented a new model for audio clip classification, called STFT Transformer. This model is inspired by recently introduced Vision Transformers. Main difference is that our model takes as input the sequence of short-term Fourier transforms of the audio signal, instead of using 16x16 patches from spectrograms. We described how to reuse weights of Vision Transformers pretrained on large image datasets. We also described how the model was trained and used in the 2021 BirdCLEF competition. The model seems competitive with top convolution networks. We claim it is because STFT Transformer does not learn pitch invariant patterns.</p><p>Our model can certainly be improved in many ways. The most obvious is to train it on onger clips, for instance by using it as a backbone in a SED model <ref type="bibr" coords="7,315.13,372.84,16.62,9.90" target="#b11">[13]</ref>. We also would like to explore pretraining on a larger audio dataset instead of reusing models pretrained on image datasets. Last, but not least, we would like to use the new SAM optimizer <ref type="bibr" coords="7,259.10,398.11,18.19,9.90" target="#b8">[10]</ref> to train our STFT Transformers.</p><p>Our code is available at https://github.com/jfpuget/STFT_Transformer</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="2,72.03,292.10,289.72,11.00;2,183.55,177.85,242.02,112.05"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: A waveform (top) and its log mel spectrogram (bottom)</figDesc><graphic coords="2,183.55,177.85,242.02,112.05" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="2,159.01,409.11,364.44,9.90;2,122.30,421.86,33.74,9.90;2,104.30,435.25,390.47,10.01;2,104.30,448.75,283.84,10.01;2,104.30,462.03,262.71,10.01"><head></head><label></label><figDesc>STFT Transformer model working on short term Fourier transform sequences directly â€¢ A way to reuse pretrained Vision Transformer model weights for STFT Transformer â€¢ A robust training pipeline for STFT Transformer fine tuning â€¢ Competitive results on the 2021 BirdCLEF competition</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" coords="3,161.48,275.53,272.05,270.18"><head></head><label></label><figDesc></figDesc><graphic coords="3,161.48,275.53,272.05,270.18" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" coords="6,72.03,619.68,436.87,120.54"><head>Table 1</head><label>1</label><figDesc></figDesc><table coords="6,72.03,633.20,436.87,107.02"><row><cell>Model performance</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Backbone</cell><cell>Image size</cell><cell>Val score</cell><cell>Public LB</cell><cell>Private LB</cell></row><row><cell>Efficientnet b3</cell><cell>300x600</cell><cell>0.7855</cell><cell>0.7906</cell><cell>0.6554</cell></row><row><cell>Efficientnet b3</cell><cell>200x600</cell><cell>0.7853</cell><cell>0.7965</cell><cell>0.6630</cell></row><row><cell>16x16 ViT</cell><cell>192x768</cell><cell>0.7645</cell><cell>0.7445</cell><cell>0.6317</cell></row><row><cell>16x16 Deit</cell><cell>192x768</cell><cell>0.7631</cell><cell>0.7580</cell><cell>0.6397</cell></row><row><cell>STFT DeiT</cell><cell>256x576</cell><cell>0.7755</cell><cell>0.7569</cell><cell>0.6667</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div><head n="7.">Acknowledgement</head><p>This work was fully funded by <rs type="funder">NVIDIA</rs>. Models were trained on <rs type="institution">NVIDIA DGX Station</rs> V100. The author is part of a NVIDIA team whose mission is to compete on Kaggle and other platforms to demonstrate the effectiveness of NVIDIA hardware and software stack. We would like to thank the organizers and <rs type="institution">Kaggle</rs> for hosting a flawless competition. Data was clean, metric was well defined, and hosts provided great introductory notebooks.</p></div>
			</div>
			<listOrg type="funding">
			</listOrg>
			<div type="references">

				<listBibl>

<biblStruct coords="7,108.05,576.91,399.23,9.90;7,108.05,589.66,382.00,9.90;7,108.05,602.17,389.88,9.90;7,108.05,614.91,385.43,9.90;7,108.05,627.42,408.54,9.90;7,108.05,640.19,24.75,9.90" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="7,283.98,602.17,213.95,9.90;7,108.05,614.91,366.76,9.90">Overview of LifeCLEF 2021: a System-oriented Evaluation of Automated Species Identification and Species Distribution Prediction</title>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Joly</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>GoÃ«au</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Kahl</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">L</forename><surname>Picek</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Lorieul</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">E</forename><surname>Cole</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Deneu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Servajean</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Ruiz DecastaÃ±eda</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">I</forename><surname>Bolon</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>Glotin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>PlanquÃ©</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W.-P</forename><surname>Vellinga</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Dorso</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>Klinck</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Denton</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">I</forename><surname>Eggel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Bonnet</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>MÃ¼ller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="7,108.05,627.42,403.79,9.90">Proceedings of the Twelfth International Conference of the CLEF Association (CLEF 2021)</title>
		<meeting>the Twelfth International Conference of the CLEF Association (CLEF 2021)</meeting>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="7,108.05,652.94,392.31,9.90;7,108.05,665.44,407.80,9.90;7,108.05,678.19,335.23,9.90" xml:id="b1">
	<analytic>
		<title level="a" type="main" coord="7,108.05,665.44,104.54,9.90;7,242.98,665.44,212.19,9.90">Bird call identification in soundscape recordings</title>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Kahl</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Denton</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>Klinck</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>Glotin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>GoÃ«au</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W.-P</forename><surname>Vellinga</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>PlanquÃ©</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Joly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="7,476.62,665.44,39.24,9.90;7,108.05,678.19,302.39,9.90">Working Notes of CLEF 2021 -Conference and Labs of the Evaluation Forum</title>
		<imprint>
			<date type="published" when="2021">2021. 2021</date>
		</imprint>
	</monogr>
	<note>Overview of BirdCLEF</note>
</biblStruct>

<biblStruct coords="7,108.05,690.69,180.06,9.90;7,108.05,703.44,296.33,9.90" xml:id="b2">
	<monogr>
		<title level="m" type="main" coord="7,150.58,690.69,77.82,9.90">1st Place Solution</title>
		<author>
			<persName coords=""><surname>Wong</surname></persName>
		</author>
		<ptr target="https://www.kaggle.com/c/birdsong-recognition/discussion/183208" />
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="7,108.05,716.19,209.86,9.90;7,108.05,728.72,299.12,9.90" xml:id="b3">
	<monogr>
		<author>
			<persName coords=""><forename type="first">V</forename><surname>Kramarenko</surname></persName>
		</author>
		<ptr target="https://www.kaggle.com/c/birdsong-recognition/discussion/183269" />
		<title level="m" coord="7,179.58,716.19,78.77,9.90">2nd place solution</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="7,108.05,741.46,407.52,9.90;7,108.05,753.96,403.74,9.90;8,108.05,74.77,411.60,9.90;8,108.05,87.27,205.01,9.90" xml:id="b4">
	<monogr>
		<title level="m" type="main" coord="8,268.01,74.77,251.63,9.90;8,108.05,87.27,84.40,9.90">An image is worth 16x16 words: Transformers for image recognition at scale</title>
		<author>
			<persName coords=""><forename type="first">Alexey</forename><surname>Dosovitskiy</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Lucas</forename><surname>Beyer</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Alexander</forename><surname>Kolesnikov</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Dirk</forename><surname>Weissenborn</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Xiaohua</forename><surname>Zhai</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Thomas</forename><surname>Unterthiner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Mostafa</forename><surname>Dehghani</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Matthias</forename><surname>Minderer</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Georg</forename><surname>Heigold</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Sylvain</forename><surname>Gelly</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jakob</forename><surname>Uszkoreit</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Neil</forename><surname>Houlsby</surname></persName>
		</author>
		<idno>Arxiv, 2010.11929</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,108.05,125.29,279.11,9.90;8,108.05,138.04,126.82,9.90" xml:id="b5">
	<monogr>
		<title level="m" type="main" coord="8,166.58,125.29,188.09,9.90">Sharing bird sounds from around the world</title>
		<author>
			<persName coords=""><forename type="first">Xeno</forename><surname>Canto</surname></persName>
		</author>
		<ptr target="https://www.xeno-canto.org/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct coords="8,108.05,150.54,172.45,9.90;8,108.05,163.29,174.44,9.90" xml:id="b6">
	<monogr>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Stowell</surname></persName>
		</author>
		<ptr target="https://archive.org/details/freefield1010" />
		<title level="m" coord="8,160.76,150.54,59.87,9.90">Freefield1010</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,108.05,175.79,399.82,9.90;8,108.05,188.54,396.38,9.90;8,108.05,201.29,24.75,9.90" xml:id="b7">
	<analytic>
		<title level="a" type="main" coord="8,425.90,175.79,81.97,9.90;8,108.05,188.54,135.99,9.90">librosa: Audio and music signal analysis in python</title>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Mcfee</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Raffel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><forename type="middle">P</forename><surname>Ellis</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Mcvicar</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">E</forename><surname>Battenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="8,266.53,188.54,233.26,9.90">Proceedings of the 14th python in science conference</title>
		<meeting>the 14th python in science conference</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,108.05,213.82,383.91,9.90;8,108.05,226.57,299.87,9.90" xml:id="b8">
	<monogr>
		<author>
			<persName coords=""><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><forename type="middle">J</forename><surname>Hsieh</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Gong</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2106.01548</idno>
		<title level="m" coord="8,241.03,213.82,250.93,9.90;8,108.05,226.57,186.43,9.90">When Vision Transformers Outperform ResNets without Pretraining or Strong Data Augmentations</title>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,108.05,239.07,397.31,9.90;8,108.05,251.82,380.33,9.90" xml:id="b9">
	<monogr>
		<title level="m" type="main" coord="8,442.85,239.07,62.51,9.90;8,108.05,251.82,262.60,9.90">Training dataefficient image transformers &amp; distillation through attention</title>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>Touvron</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Cord</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Douze</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Massa</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Sablay-Rolles</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>Jegou</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2012.12877</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,108.05,264.57,137.52,9.90;8,108.05,277.06,234.11,9.90" xml:id="b10">
	<monogr>
		<title/>
		<author>
			<persName coords=""><surname>Whitman</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Timm</surname></persName>
		</author>
		<ptr target="https://github.com/rwightman/pytorch-image-models" />
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,108.05,289.81,401.82,9.90;8,108.05,302.34,327.87,9.90" xml:id="b11">
	<monogr>
		<title level="m" type="main" coord="8,338.65,289.81,171.22,9.90;8,108.05,302.34,209.88,9.90">PANNs: Large-Scale Pretrained Audio Neural Networks for Audio Pattern Recognition</title>
		<author>
			<persName coords=""><forename type="first">Q</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Y</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Plumble</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1912.10211</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
