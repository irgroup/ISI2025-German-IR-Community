<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,158.89,115.96,297.57,12.62;1,208.38,135.80,198.60,10.52">Profiling Fake News Spreaders on Twitter Notebook for PAN at CLEF 2020</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName coords="1,237.61,169.31,56.76,11.26"><forename type="first">Álvaro</forename><surname>López</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Universitat Politècnica de València</orgName>
							</affiliation>
						</author>
						<author>
							<persName coords="1,317.06,171.83,61.94,8.74"><forename type="first">Pasqual</forename><surname>Martí</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Universitat Politècnica de València</orgName>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,158.89,115.96,297.57,12.62;1,208.38,135.80,198.60,10.52">Profiling Fake News Spreaders on Twitter Notebook for PAN at CLEF 2020</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">8B679A29C83F03472058D97637572C11</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-06-26T16:06+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The increase of fake news makes social media a dangerous and powerful tool due to the big impact that it can have on society. Fake news must be detected automatically to avoid the mass manipulation of people. In this paper we present our team participation at PAN 2020 Shared Task: Profiling Fake News Spreaders on Twitter. We propose a deep learning model to classify authors from twitter into fake news spreaders or not according to their their tweets. The main problem that we tackle is the classification for Spanish and English authors separately, although we also considered bilingual models to solve the task. Our best model obtained an accuracy of 0.755 on Spanish and 0.68 on English.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="9" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="10" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="11" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Global access to the internet has communicated people from every part of the world and every social background. When it first appeared, the Internet was intended to be an independent media, free from the pressure of governments and big influential companies. Its users found in social media platforms a door to all sorts of free information. However, because of its reachability, the Internet is also full of false, intentionally or unintentionally misleading, information. Malicious agents take advantage of social media to spread fake news. Fake news capitalize on society's polarization, appealing to the user's feelings, which makes them be easily shared without questioning their credibility. This makes fakes news a big threat to our society and a powerful tool to manipulate people, ultimately having a great impact on their lives.</p><p>Currently, one of the most popular social media is Twitter, a platform in which users can share tweets, short written messages that may contain pictures, videos or links to other websites. In this work, we are presented with the task of classifying Twitter users in two classes depending on whether they are fake news spreaders or not. The aim is to build a system that quickly detects this type of user before the news are spread or, at least, stops them from spreading more.</p><p>In this paper, we present our participation at PAN 2020 Shared Task: Profiling Fake News Spreaders on Twitter (4). Our approach is based on deep learning classification models for every tweet language as well as a bilingual model that classifies tweets of both languages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related work</head><p>The detection of fake news is a complex topic which can be addressed in very different ways in order to make the most of the available information. In <ref type="bibr" coords="2,465.10,196.27,11.62,8.74" target="#b5">(6)</ref>, authors use data mining techniques to make use of all possible information before the classification. They use not only a linguistic-based approach but also get data from the author profile, their network of contacts in social media (to detect bots) and other user's opinions in their posts.</p><p>The type of model used for the classification varies too. In (1) they used a Naive Bayes classifier to tackle the task in a similar way that spam filters do. On the other hand, in (2) authors used SVM classifiers with linguistic features such as n-grams, punctuation, psycholinguistic features (aided by a lexicon), readability and syntax. Finally, in (5) authors use a deep learning model that combined linguistic information extracted from news using an RNN and extracted information from user features with an FC network, building an ensemble of models to classify.</p><p>We have observed a diversity in approaches which might be derived from the heterogeneity among fake news sources. The media from where the data is extracted greatly influences the news extension and format, since the information is presented differently in a tweet than in a web post, for instance. Besides that, the metadata regarding the author and her/his social media network differs too. Because of that, there is not just one predominant approach, although it must be noted that most of them take into account linguistic features.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Our approach</head><p>In order to classify the authors we are given some of their tweets, all written in either English or Spanish. We approached the problem in two different ways: on the one hand, training a classifier that takes all tweets as a sequence and assigns a class to the author; on the other hand, training a single tweet classifier and then performing a vote with the classification of each tweet to decide the class of the author.</p><p>Between both approaches, we decided to use the single tweet classifier for two main reasons: firstly, we prefer to train a solid single tweet classifier so that we do not depend on having more or fewer tweets than in inference, and we will be able to classify correctly new authors even if they have fewer or higher number of tweets than the ones in our training set. Secondly, if we use the approach of the sequence of tweets for each author, the number of samples to train the models is reduced drastically since the number of single tweets is significantly higher than the number of authors.</p><p>In the next sections, we are going to describe the models implemented following the chosen approach and how their training was performed. We will present not only independent models for English and Spanish but also a bilingual model that deals with the problem of classifying authors whose language is unknown as well as bilingual authors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Models</head><p>In this section we describe the model architectures employed and the main idea behind them. The models used can be grouped in three classes based on the type of encoding used for the tweets: untrained embedding, pretrained neural net language model and pretrained multilingual encoder.</p><p>The first type is model 1 which uses a new untrained embedding layer to encode the tweets words. After this embedding layer it has two bidirectional LSTM layers with 32 units and then a fully connected part with one dense layer of 128 neurons and the last one with 1 neuron with sigmoid activation function for classification (0 not fake, 1 fake). For the other layers we employed the ReLU activation function and batch normalization between all the layers. To avoid overfitting we used a dropout layer between the dense layers with a drop factor of 0.5. With this model we tried to train our own embeddings for English and Spanish from scratch. But as we show in the results section we couldn't achieve good results because we did not have enough data to train the embeddings and, consequently, the models with this new embeddings couldn't learn well because of the bad encoding of the words.</p><p>The second type of models are the ones with a pretrained embedding based on feed-forward Neural Net Languange Model (nnlm)(8)<ref type="foot" coords="3,362.81,399.96,3.97,6.12" target="#foot_0">1</ref> , the size of the embedding output is a vector of 128 dimensions with the full tweet encoding. This is because this module internally combines the words embeddings into a single vetor to encode the sentence. With this pretrained embedding we aimed to improve the results taking advantage of the better representation of the tweets that it gives thanks to the large amount of data<ref type="foot" coords="3,287.89,459.73,3.97,6.12" target="#foot_1">2</ref> and resources used to train it.</p><p>We trained two models with this kind of embedding. The first one is model 3, this model is a basic fully connected net with two dense layers of 32 neurons and the last one with 1 for making the classification with a sigmoid activation function. Before these three layers we employed batch normalization and a drop out with a drop factor of 0.5 to avoid overfitting and to regularize the training of the parameters. With this regularization techniques we tried to avoid destroying our embedding since it had been fine tuned during the training phase.</p><p>The second model trained with the nnlm based embedding is model 4. This one uses a slightly more complex architecture as can be seen in Figure <ref type="figure" coords="3,134.77,580.86,3.87,8.74" target="#fig_1">1</ref>. It also uses dense layers but we introduce skip connections that allow to jump over each dense layer to give more paths to back-propagate the error. To implement the skip connections we used concatenation layers, and to apply regularization we used batch normalization after each dense layer and dropout after each concatenation layer with a drop rate of 0.5.</p><p>Finally the last type of models are the ones with a pretrained multilingual encoder <ref type="foot" coords="4,168.28,160.53,3.97,6.12" target="#foot_2">3</ref> . This encoder is a CNN based model trained over 16 languages for tasks such as text classification, text clustering, semantic textural similarity retrieval, cross-lingual text retrieval, etc. All the model details can be found in <ref type="bibr" coords="4,444.21,186.02,11.62,8.74" target="#b6">(7)</ref>. The main idea of this model is to be able to encode sentences in different languages but with the same meaning to vectors with a similar encoding. In this case the encoder generates a 512 size vector to encode the whole input sentence. By using this type of sentence encoder, not only we have been able to train models for English and Spanish but also for both languages at the same time, aiming to get similar results to the single language models. So based in this type of sentence encoder, not only we have been able to train models for English and Spanish but also for both at the same time trying to get similar results with this single model.</p><p>We trained three models with the multilingual encoder. The first one is model 5. This model shares exactly the same architecture than model 4 (shown in Figure <ref type="figure" coords="4,179.38,343.98,4.43,8.74" target="#fig_1">1</ref>) but changing the nnlm encoder by the cnn multilingual encoder. We used the same architecture to be able to compare directly the two encoders and because the capacity of this model is big enough also for this encoding.</p><p>The next model is model 6 which is an extension of model 5, since it has the same layers but with double number of neurons in the fully-connected layers. With this modification we tried to learn more patterns in the data thanks to the bigger model and the strong regularization of the dropout layers to force sparsity.</p><p>The last model trained is the bilingual one, model 7. To approach this harder problem of multilingual classification we take advantage of the multilingual encoder to be able to work with nearly the same representation of the tweet no matter the language it is written in. But as we are training for a bilingual task, in order to force the network to learn some finer characteristics of each language we trained a bilinear model with two parallel networks that have been pretrained each one for a single language. For that, we used two pretrained versions of model 5, one for English and one for Spanish, and we connected the output of the cnn encoding to both nets; the resulting output tensors of these nets are then concatenated and passed through a simple fully-connected net with a dense layer with 128 neurons and ReLu, and the output dense with 1 neuron and sigmoid activation function. We also used batch normalization before the two dense layers.  5 Experimental setup</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Data processing and partitioning</head><p>In this section we describe how we split and processed the data in order to train the models.</p><p>The dataset has tweets from 600 authors written in English or Spanish. For this task we will know in advance the language of the tweets of an author, so we will be able to build independent models for each language. Nevertheless, we will also confront the task with a multilingual model that works with tweets of both languages.</p><p>As can be seen in Table <ref type="table" coords="6,261.53,250.16,4.98,8.74" target="#tab_0">1</ref> we have a perfectly balanced dataset at author level so we decided to make a random partition with 80% of the authors for train split and the other 20% for validation. Since the models were tested on the TIRA(3) platform, we avoided creating a test split so as to have more training data.</p><p>From this partitions we extracted all the tweets and their label from the author and stored them in one file for each partition, obtaining a dataset to train the single tweet classifiers. All these tweets have been processed to be in one single line by removing the break line token ('\n').</p><p>After this we obtained the data balance shown in Tables 2 for English and 3 for Spanish. Table <ref type="table" coords="6,162.16,553.62,3.87,8.74">2</ref>: Statistics of the dataset tweets by label for English data. The percentages shown are the percentage over the split of data (train or validation).</p><p>We have implemented two input pipelines because not all the models previously described accept the same input data format.</p><p>The first pipeline, used for model 1, takes the tweets strings and tokenizes them separating the tokens by the blank space and then uses a token encoder to get the id corresponding to each word token. We used one token encoder with the English vocabulary and another for Spanish, both of them taking the vocabulary set of words from the tweets in the train partition.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Partition Class 1 Class 0 Total</head><p>Train 11800 (49%) 12200 (51%) 24000 Validation 3200 (53%) 2800 (47%) 6000 15000 15000 30000</p><p>Table <ref type="table" coords="7,162.04,172.34,3.87,8.74">3</ref>: Statistics of the dataset tweets by label for Spanish data. The percentages shown are the percentage over the split of data (train or validation).</p><p>For the rest of the models we used the other input pipeline that just forwards the tweets strings to the model. This is because the pretrained encoders (nnlm and multilingual) have their own sentence processing from the sentence string to the feature vector.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Training</head><p>As we explained in the description of the models, we applied abundant regularization with dropout and batch normalization. This is because we have observed that without it the models quickly overfitted reaching training accuracies over 90% while having validation accuracies just over 60%. With all the regularization we achieved a very controlled training with very low overfitting and in very advanced epochs.</p><p>Regarding models 1, 3 and 4, the ones with the new embedding and the nnlm encoder, we trained them for 5000 epochs, which was possible thanks to their training speed of two seconds per epoch during training. Once again, to avoid overfitting and develop a more stable training we used the SGD optimizer with a momentum of 0.9 and a low learning rate of 0.0002, which is lowered by a learning rate scheduler to 0.0001 from epoch 1000 and to 0.00005 from epoch 3000.</p><p>For the models with the cnn based multilingual encoder we had to adjust the number of epochs because they required more computation than the previous ones. In this case we trained for 1000 epochs using the Adam optimizer with a learning rate of 0.0002.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Results</head><p>For getting the vote result for classifying an author we implemented two types of voting techniques given the probability of each tweet of being fake. These two voting methods are the averaged vote and product vote.</p><p>The averaged vote is a more standard way of performing the voting process. The author will be classified as a likely fake news spreader depending on if the average of the probabilities of their tweets is higher than a given threshold.</p><p>The product vote is slightly more sophisticated and consists of taking again the probabilities of each tweet of being fake given by the model and we also compute the probability of being true for each tweet (P (true) = 1 -P (f ake)). Then we perform the product of of each group of probabilities and we get the author label by choosing the class of the highest product result. This method is shown in equation 1 where m is the total number of tweets for this author. Note that in this case we don't use any threshold to get the label, we just take the class that maximizes the product. With this vote technique we aim to get better results in the case of having very high probabilities because they have less impact to reduce the product value.</p><formula xml:id="formula_0" coords="8,149.64,209.35,330.95,30.32">author pred = argmax( m-1 i=0 P (tweet i = true), m-1 i=0 P (tweet i = f ake)) (1)</formula><p>After making inference in the validation set with the best model of each type we got the results of Table <ref type="table" coords="8,251.20,262.48,3.87,8.74">4</ref>. Note that for all the results shown we obtained the same value with both voting techniques described except in two cases (marked with *) where we got modestly better results using the product vote. The table also shows the false negatives (FN) and the false positives (FP) in order to make a better analysis. Table <ref type="table" coords="8,163.06,442.65,3.87,8.74">4</ref>: Results on the validation split for every model and language. In the case of bilingual results the accuracy is computed over the combination of the English and Spanish validation splits. *In this case the product voting obtains better results.</p><p>Analyzing model 1 results, if we look at the accuracies obtained and the FN/FP ratio we can see that this model is just classifying always in the "true" class because the obtained accuracy matches the number of true samples in the validation sets for English and Spanish (see Tables <ref type="table" coords="8,359.82,548.48,4.98,8.74">2</ref> and<ref type="table" coords="8,387.66,548.48,3.87,8.74">3</ref>). This is because of the model embedding which is not pretrained and could not be trained with the available data and resources. If the embedding is bad the results of the net will also be bad.</p><p>Looking at models 3 and 4 we can see how we started to get some better results, mainly in the case of the Spanish data that seems to be an easier task than the English one. In the case of model 3 and English data we get just one more point in accuracy over the partition proportion but looking at the FN/FP we see that the main source of errors are the FP so this model is not voting just the majority class. However, a big step is achieved by model 4, which has a more complex model architecture and gets significantly better results in the case of English data.</p><p>Finally looking at models 5, 6 and 7, the ones with the multilingual encoder, we see a huge increase in the case of English data and a smaller decrease for the Spanish, but in overall the performance of the models 6 and 7 get a better result for classifying both languages separately. Note that model 6 is just a bigger version of model 5 but it doesn't achieve any better results and, looking at the bilingual classification, model 5 gets better results with the product vote. Also note that model 7 gets the same result as model 6 despite having the pretrained models 5 and 6 as two branches of its net.</p><p>We also analyzed the models output probabilities to see if the predictions are made with a good level of confidence by the models. In Figure <ref type="figure" coords="9,417.29,258.71,4.98,8.74" target="#fig_3">2</ref> we show the counts of probabilities outputted by model 5 making inference with the development partition in both languages. Comparing both languages we can confirm that for Spanish the models obtained better results because the fake samples probabilities are more separated from the true ones in the right histogram. Also, the range of probabilities is wider in Spanish so it has a more confident prediction in some cases.</p><p>In the case of having more data to make this histogram analysis we could adjust the threshold for making the average vote behave in a way such that the number of false negatives is minimized, lowering the threshold from 0.5 and making a trade-off between false positives and false negatives, taking into account the shape of the histogram. We made some experiments by changing the threshold and we got better results in some cases but since the development partition is very small and we can not ensure that it is a representative set of data, we decided to not implement it in the final model.  After analyzing the results we decided to select model 5 as the one to submit on TIRA platform and perform the test inference. We did it on the early bird submission period and we got 0.755 of accuracy on Spanish and a 0.68 on English. If we compare it with the results from the experiments, we got more or less an expected result having more accuracy on Spanish than English.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusions</head><p>Being able to detect fake news spreaders automatically is a really hard task. Although a fully automatic detection of malicious users may still be far, a robust model with a low number of false negatives would have a big impact, providing a first filtering for potential fake news spreaders for humans to later review more carefully, saving their time and resources.</p><p>We have seen that the task difficulty also depends on the language, probably not because of the language itself but because of the different ways of making fake news depending on the language that the target people speak. In this case it seems that for the Spanish language it is easier to find patterns to detect fake news.</p><p>Despite of the results we have seen that the task is approachable. We are convinced that with a bigger dataset and more research we could get good enough results.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="5,134.77,601.24,345.82,8.74;5,134.77,613.19,345.82,8.74;5,134.77,625.15,272.65,8.74"><head>Fig. 1 :</head><label>1</label><figDesc>Fig.1: Model 4 architecture. The dense layers units are 32, 64, 128, 256 and 1 (from top to bottom). The drop rate for the dropout is 0.5. The activation functions are ReLU except for the last dense which is sigmoid.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3" coords="9,134.77,627.97,345.82,8.74;9,134.77,639.92,40.96,8.74;9,134.77,469.82,172.91,129.68"><head>Fig. 2 :</head><label>2</label><figDesc>Fig. 2: Probability count for the predictions made for each class and dataset language.</figDesc><graphic coords="9,134.77,469.82,172.91,129.68" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" coords="6,167.94,407.46,279.48,140.54"><head>Table 1 :</head><label>1</label><figDesc>Statistics of the dataset authors by label and language.</figDesc><table coords="6,220.39,407.46,174.58,140.54"><row><cell cols="4">Language Class 1 Class 0 Total</cell></row><row><cell>English</cell><cell>150</cell><cell>150</cell><cell>300</cell></row><row><cell>Spanish</cell><cell>150</cell><cell>150</cell><cell>300</cell></row><row><cell></cell><cell>300</cell><cell>300</cell><cell>600</cell></row><row><cell cols="2">Partition Class 1</cell><cell cols="2">Class 0 Total</cell></row><row><cell cols="4">Train 12400 (52%) 11600 (48%) 24000</cell></row><row><cell cols="4">Validation 2600 (43%) 3400 (57%) 6000</cell></row><row><cell></cell><cell>15000</cell><cell>15000</cell><cell>30000</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0" coords="3,144.73,623.92,335.87,7.86;3,144.73,635.53,148.36,7.47"><p>We get this nnlm models from tensorflow hub (https://tfhub.dev/google/ collections/tf2-preview-nnlm/1).</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1" coords="3,144.73,645.84,335.86,7.86;3,144.73,656.80,123.95,7.86"><p>The datasets used to train these embeddings are the English Google News 200B and the Spanish Google News 50B.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2" coords="4,144.73,645.84,335.87,7.86;4,144.73,657.44,229.38,7.47"><p>We get this multilingual encoder from tensorflow hub (https://tfhub.dev/google/ universal-sentence-encoder-multilingual-large/3).</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct coords="11,150.26,170.80,323.31,8.74;11,150.26,182.75,300.32,8.74;11,150.26,194.71,196.51,8.74" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="11,264.18,170.80,205.80,8.74">Fake news detection using naive bayes classifier</title>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Granik</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">V</forename><surname>Mesyura</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="11,188.73,182.75,261.85,8.74;11,150.26,194.71,104.03,8.74">IEEE First Ukraine Conference on Electrical and Computer Engineering (UKRCON)</title>
		<imprint>
			<date type="published" when="2017">2017. 2017</date>
			<biblScope unit="page" from="900" to="903" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="11,150.26,206.67,300.60,8.74;11,150.26,218.59,243.30,8.77;11,150.26,231.29,162.14,8.30" xml:id="b1">
	<monogr>
		<title level="m" type="main" coord="11,404.65,206.67,46.22,8.74;11,150.26,218.62,94.35,8.74">Automatic detection of fake news</title>
		<author>
			<persName coords=""><forename type="first">V</forename><surname>Pérez-Rosas</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Kleinberg</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Lefevre</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Mihalcea</surname></persName>
		</author>
		<idno>CoRR abs/1708.07104</idno>
		<ptr target="http://arxiv.org/abs/1708.07104" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="11,150.26,242.53,301.94,8.74;11,150.26,254.49,330.33,8.74;11,150.26,266.44,234.07,8.74" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="11,378.42,242.53,73.78,8.74;11,150.26,254.49,94.59,8.74">TIRA Integrated Research Architecture</title>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Potthast</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Gollub</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Wiegmann</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Stein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="11,386.67,254.49,93.92,8.74;11,150.26,266.44,139.45,8.74">Information Retrieval Evaluation in a Changing World</title>
		<editor>
			<persName><forename type="first">N</forename><surname>Ferro</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Peters</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2019-09">Sep 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="11,150.26,278.40,311.74,8.74;11,150.26,290.35,307.76,8.74;11,150.26,302.31,329.18,8.74;11,150.26,314.26,315.51,8.74" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="11,375.08,278.40,86.92,8.74;11,150.26,290.35,307.76,8.74;11,150.26,302.31,31.50,8.74">Overview of the 8th Author Profiling Task at PAN 2020: Profiling Fake News Spreaders on Twitter</title>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Rangel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Giachanou</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Ghanem</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Rosso</surname></persName>
		</author>
		<ptr target="-WS.org" />
	</analytic>
	<monogr>
		<title level="m" coord="11,452.74,302.31,26.71,8.74;11,150.26,314.26,111.82,8.74">CLEF 2020 Labs and Workshops</title>
		<title level="s" coord="11,270.42,314.26,104.49,8.74">Notebook Papers. CEUR</title>
		<editor>
			<persName><forename type="first">L</forename><surname>Cappellato</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Eickhoff</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">N</forename><surname>Ferro</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Névéol</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2020-09">Sep 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="11,150.26,326.22,318.97,8.74;11,150.26,338.14,306.31,9.05" xml:id="b4">
	<monogr>
		<title level="m" type="main" coord="11,291.74,326.22,172.73,8.74">CSI: A hybrid deep model for fake news</title>
		<author>
			<persName coords=""><forename type="first">N</forename><surname>Ruchansky</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Seo</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<idno>CoRR abs/1703.06959</idno>
		<ptr target="http://arxiv.org/abs/1703.06959" />
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="11,150.26,350.13,307.93,8.74;11,150.26,362.08,206.04,8.74" xml:id="b5">
	<monogr>
		<author>
			<persName coords=""><forename type="first">K</forename><surname>Shu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Sliva</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>Liu</surname></persName>
		</author>
		<title level="m" coord="11,356.71,350.13,101.48,8.74;11,150.26,362.08,175.04,8.74">Fake news detection on social media: A data mining perspective</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="11,150.26,371.52,313.59,11.26;11,150.26,385.99,316.19,8.74;11,150.26,397.92,324.08,8.77;11,150.26,409.90,195.90,9.02" xml:id="b6">
	<monogr>
		<title level="m" type="main" coord="11,413.04,385.99,53.41,8.74;11,150.26,397.95,209.82,8.74">Multilingual universal sentence encoder for semantic retrieval</title>
		<author>
			<persName coords=""><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Cer</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Ahmad</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Law</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">N</forename><surname>Constant</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">G</forename><forename type="middle">H</forename><surname>Ábrego</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Tar</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Y</forename><surname>Sung</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Strope</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Kurzweil</surname></persName>
		</author>
		<idno>CoRR abs/1907.04307</idno>
		<ptr target="http://arxiv.org/abs/1907.04307" />
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="11,150.26,421.86,292.02,8.74;11,150.26,433.78,330.33,8.77" xml:id="b7">
	<analytic>
		<title level="a" type="main" coord="11,347.24,421.86,95.04,8.74;11,150.26,433.81,65.48,8.74">A neural probabilistic language model</title>
		<author>
			<persName coords=""><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Réjean</forename><surname>Ducharme</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><forename type="middle">V C J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="11,223.66,433.81,166.71,8.74">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1137" to="1155" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
