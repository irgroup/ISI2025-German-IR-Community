<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,144.36,116.80,326.61,12.93;1,155.04,134.68,305.35,12.93">GFMed: Question Answering over BioMedical Linked Data with Grammatical Framework</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName coords="1,271.68,171.93,72.28,9.96"><forename type="first">Anca</forename><surname>MÈƒrginean</surname></persName>
							<email>anca.marginean@cs.utcluj.ro</email>
							<affiliation key="aff0">
								<orgName type="institution">Technical University of Cluj Napoca</orgName>
								<address>
									<postCode>401446</postCode>
									<settlement>Cluj-Napoca</settlement>
									<country key="RO">Romania</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,144.36,116.80,326.61,12.93;1,155.04,134.68,305.35,12.93">GFMed: Question Answering over BioMedical Linked Data with Grammatical Framework</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">52E0320C9F7D9010FF1148B374BB994D</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-06-26T15:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper reports on the participation of the system GF-Med in QALD-4 question answering challenge for Biomedical interlinked data. GFMed introduces grammars for a controlled natural language targeted towards biomedical information and the corresponding controlled SPARQL language. The grammars are described in Grammatical Framework and introduce linguistic and SPARQL phrases mostly about drugs, diseases and relationships between them.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="9" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="10" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="11" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="12" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Linked Data means using the Web to connect related data. A large number of data from various domains such as government data, medicine, education, life sciences, literature, art and others were made available in the context of the Linked Open Data (LOD) initiative built around DBpedia.</p><p>One of the greatest challenges of this new big set of data is querying it. In order to fill the gap between end users and formal languages like SPARQL more approaches emerged: querying in full natural language <ref type="bibr" coords="1,371.39,441.09,10.00,9.96" target="#b7">[8]</ref>, in Controlled Natural Languages <ref type="bibr" coords="1,183.73,453.09,10.00,9.96" target="#b3">[4]</ref>, or incremental query building <ref type="bibr" coords="1,332.93,453.09,10.00,9.96" target="#b8">[9]</ref>.</p><p>The medical domain excels in the quantity of existing data, and lately, there is a large interest in making biomedical data available in RDF format (Bio2RDF project <ref type="bibr" coords="1,168.01,488.97,10.31,9.96" target="#b1">[2]</ref>). Task 2, Biomedical question answering over linked data, of the Question Answering over Linked Data (QALD-4) lab, proposes querying of the following three biomedical datasets: DrugBank, Diseasome and SIDER. DrugBank is part of the project Bio2RDF, while the other two are not. DrugBank gives drug (chemical, pharmacological and pharmaceutical) data with comprehensive drug target (sequence, structure, and pathway) information. Diseasome provides information about human disease-gene network, while SIDER relates drugs to their adverse reactions. The Linked Data version of Diseasome publishes a network of 4300 disorders and disease genes, as well as possible drugs for diseases. SIDER includes 4192 side effects, 996 drugs and 99423 drug/side-effect pairs.</p><p>The objective of Task2 of QALD-4 is to search solutions for querying these three datasets considering also their integration. The key challenge, as stated by the organizers, is to translate the users' information needs into a form such that they can be evaluated using standard Semantic Web query processing and inferencing techniques. The current system proposes a natural language query Fig. <ref type="figure" coords="2,223.69,223.76,4.12,8.08">1</ref>. Main GFMed grammars and used resources approach based on translation from a controlled natural language to SPARQL. The translation relies on grammars defined in Grammatical Framework <ref type="bibr" coords="2,447.11,270.09,10.00,9.96" target="#b6">[7]</ref>. Our main objective was to test the semantic coverage of our application domain grammar against the questions proposed in Task 2 of QALD-4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">System Overview</head><p>Grammatical Framework (GF) is a special-purpose programming language for writing grammars based on a typed functional programming language. GF grammars are divided into abstract and concrete grammars. An abstract grammar defines categories and functions. Each category stands for a set of trees. Functions produce trees of certain categories. The linearization types and functions are defined in concrete grammars. For each category, a linearization type is needed and each function requests a linearization function. Based on the abstract grammar and the concrete grammars for each language, GF is able to translate a phrase from one language to another by parsing it first into an abstract tree and then linearizing it by means of the concrete grammars.</p><p>Description Logics (DLs) <ref type="bibr" coords="2,267.23,476.49,10.57,9.96" target="#b0">[1]</ref> are a family of knowledge representation languages that can be used to represent the knowledge of an application domain in a structured and formally well-understood way. In the description logic ALC, concepts are built using the set of constructors formed by negation, conjunction, disjunction, value restriction, and existential restriction. Extensions of ALC introduce inverse roles, number restrictions (N , Q) and concrete domains(O). Even though the three targeted datasets are not all providing for DLs descriptions or ontologies, approaching them from a DLs perspective indicates ways to efficiently split possible questions in semantic parts that have straightforward translations to SPARQL and are highly composable.</p><p>GFMed consists mainly of a GF grammar for the application domain given by SIDER, Diseasome and DrugBank datasets. GFMed also includes some minor preprocessing of questions and postprocessing of translation results, mainly in order to deal with structures involving numeric values, e.g. values for water solubility, or free text, like different names of foods. Figure <ref type="figure" coords="2,402.60,644.49,4.98,9.96">1</ref> shows the main grammars: an abstract grammar and two concrete grammars. For each concrete For domain-specific applications, the GF abstract grammar must state the main semantic categories and trees of the language. For GFMed we introduced the following categories: Drug, Target, Disease, Gene, SideEffect and SIDER Drug corresponding to the main resources in the targeted datatsets. We also introduced the categories DrugBankProperty, DiseasomeProperty and SIDER-Property for describing the properties of the same datatsets. For each mentioned resource category, classes of these semantic entities are described, resulting Drug-Class, DiseaseClass, GeneClass, TargetClass and SideEffectClass. Trees for these categories are built either from a single named resource, or from a restriction on a property. For each X Class there are one or more CriterionForX Class categories, where the class can be obtained from the Criteria for that class. For example, drugs that interact with food is a DrugClass tree, while interact with food is a CriterionForDrugClass. In other words, trees of type CriterionForX Class are subtrees of X Class trees. Table <ref type="table" coords="4,271.30,131.25,4.98,9.96" target="#tab_0">1</ref> depicts the main categories together with their English linearization category and some examples or explanations.</p><p>The core of the abstract grammar consists of functions to build trees. GF-Med's functions can be categorized in (i) functions that describe property restrictions, (ii) functions for transforming a criterion of a class into a class or for transformations between different types of classes and properties, (iii) functions expressing queries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Building Trees for Property Restrictions</head><p>In DLs, there are two types of roles or properties: object properties and datatype properties. Object properties relate two concepts, while datatype properties relate one concept to a value of a certain datatype. For example, the object property SideEffect connects the resources PenicillinG and Fever. Differently, the Mechanism of Action property relates the drug Lepirudin to a string value.</p><p>Object properties and datatype properties are treated differently in the GF-Med grammar. When it comes to object properties, the DL existential restriction âˆƒR.C on property R describes the set of individuals having as value of the property (role) R an individual from the concept C. For example, âˆƒ Pos-sibleDrug.FeverInducingDrug is a restriction on property P ossibleDrug whose interpretation, if it exists, is the set of all diseases that have at least one possible drug from the class FeverInducingDrug. F everInducingDrug stands for all drugs that have fever as a side effect and it is a value restriction, with value F ever, on the property SideEf f ect. We believe that even though the targeted datasets are not described in DL, in order to have language constructors able to be composed based on their type, the functions to build trees in either English or SPARQL can be described similarly to DL constructors. This approach is also justified by the functional style of the chosen grammatical framework.</p><p>Each DL constructor can be expressed in natural language in more ways, either as noun phrase (NP), verbal phrase (VP), adjectival phrase (AP), verbphrase-modifying adverb (Adv), relative clause (RCl) or clause with some missing part (ClSlash). These syntactic categories are defined by GF library. To each DL constructor identified at a conceptual level correspond more functions to build trees at concrete English level, one for each possible syntactic structure. Figure <ref type="figure" coords="4,166.46,536.85,4.98,9.96" target="#fig_0">2</ref> shows functions that model restriction on the property P ossibleDrug with values in DrugClass. In a similar manner, functions for restriction on the inverse property of PossibleDrug are defined. They allow statements about drugs used to treat a certain disease or a disease class. For all object properties, the abstract and concrete grammars include sets of functions to express existential and value restrictions on them. Since classese formed from only one named drug are allowed, value restrictions on object properties can be treated in the same way as existential restrictions.</p><p>When it comes to restrictions on datatype properties, the English methods to express them are not anymore particular to each property, therefore it is possible to treat all with the same set of functions. Some examples are described in Fig. <ref type="figure" coords="4,472.81,656.49,3.91,9.96">3</ref>. The property becomes one of the functions' parameters. The most important issue is that it is not possible to include all actual values in the grammar, because the set of values is not finite. This issue can not be completely solved in GF. The proposed solution is to include in the grammar generic trees with a dummy string. If the translation to SPARQL succeeds, the dummy value is replaced in the generated query during postprocessing. Since the values for these restrictions tend to appear at the end of the question, e.g. Give me the side effects of drugs with a solubility of 3.24e-02 mg/mL, in the preprocessing phase the string value is replaced with XX and the question to be parsed becomes Give me the side effects of drugs with a solubility of XX. This is identified as [GiveSiderProperty SideEffect [ToDrugClass [ValueRestriction Solubility]]], where SideEffect indicates the object property whose value is asked for. The content of the innermost brackets represents the drugs indicated by the transformation to DrugClass of a value restriction on the datatype property Solubility. Another possible solution for covering numerical values for these restrictions could be based on the GF support for integers and floating point numbers.</p><p>Other described constructors include HighestNumber, LowestNumber, ZeroNumber, which are focused on the number of properties, or HighestValue, and LowestValue which are focused on values of properties. For example, the least common chromosome location is interpreted as [LowestValue ChromosomeLocation], where ChromosomeLocation is a DrugBank property. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Transformation Functions</head><p>For composability reasons, transformation functions are defined for getting from a criterion to a class, or for getting from one dataset to another. The former are important for English linearization, while the latter play an important role in SPARQL linearization.</p><p>The first transformation functions take criteria and build on them the upper level linguistic structures needed in queries. For example, in order to get to the Noun Phrase drugs used for Rickets from the Adjectival Phrase used from Rickets, there is a transformation from CriterionForDrugClassAdj to DrugClass that adds the noun drugs to linearization of the AP. When building SPARQL queries, these transformation functions do not alter the linearization of the Criterion, because the corresponding SPARQL triplets are already completely built. All the English alternatives for expressing a conceptual DL constructor have the same SPARQL linearization. This is somehow expected, as SPARQL is a formal language tightly related to DLs.</p><p>The second type of transformations deals with queries requesting access to more datasets. In this case, English linearization does not alter the object of transformation, while the SPARQL linearization introduces new variables and sameAs statements. For example, the function DBT oSiderDrug converts the class of DrugBank drugs to the class of Sider drugs. Its SPARQL linerization introduces a new variable ?siderdrug that is related with a sameAs statement </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Functions for Queries</head><p>Several types of queries were identified: give, list, which, what, for/with which, and is/are there. They are applied on one class, one criterion, or on a list of classes or criteria for classes (see Fig. <ref type="figure" coords="7,263.76,441.09,3.89,9.96">4</ref>). The questions deal mostly with resource classes and criteria for these classes and less with properties. An exception to this rule is the question WhatPropertyValue. This question treats PropertyClass instead of a resource class, because it queries for information about a property class and not about a property of some resource. For example, the question which is the least common chromosome location is parsed to the abstract tree [What-PropertyValue [LowestNumberValue [DBToProperty ChromosomeLocation]]]. Its SPARQL linearization requires aggregation and sort operations. The advantage of taking the described approach is the flexibility in composition of trees/constructors, based on their types and transformation functions. For example, drugs that interact with the drugs used for diseases treated by tetracycline is parsed to the abstract tree t 3 =[ToDrugClass withThatVP [DDrugClassCriterionVP t 2 ]], where t 2 =[AdjToDrugClass [PossibleDrugsForCri-terionAdj t 1 ]] is the tree for the class of drugs that are used for diseases in t 1 .</p><formula xml:id="formula_0" coords="7,134.76,608.61,311.18,10.65">t 1 =[ToDiseaseClass [WithPossibleDrugsCriterion [SingleDrug DB00759]]</formula><p>] stands for a DiseaseClass of diseases treated by tetracycline. DB00759 is the DrugBank ID for tetracycline. The abstract tree t 3 is linearized in the SPARQL concrete grammar. By running the query, we get drugs which interact with tetracycline, and also other drugs used to treat the same diseases as tetracycline. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Pre-and Post-processing</head><p>GF comes with an HTTP server that supports REST services for its main functionality, as translation or parsing. GFMed includes (i) the abstract grammar and the concrete grammars for English and SPARQL described previously, and (ii) a Java standalone application that consumes GF translation service based on these grammars. The standalone application includes a preprocessing module, a module for consuming the translation service, and a post-processing module. Algorithm 1 describes the main steps of the translation from a natural language to SPARQL.</p><p>Preprocessing includes a simple transformation of the question to lowercase, and a failure handling method. When the translation module gets a failure from the server, the failure handling method repeatedly trims the last word of the question and replaces the trimmed sequence with the dummy string XX. This is done in order to deal with value restrictions, for example drugs with water solubility of 3.24e-02 mg/mL. It can be observed that the part which represents the value is formed by the last two words, and not only the last one.</p><p>A special case of this trimming is done for situations where a list of free text values is included in the question. Question 13 from the QALD test set is an example for this situation: it includes the phrase drugs whose mechanism of action involves norepinephrine and serotonin, with mechanism of action as a datatype property. In this case, the preprocessing includes a step where the question is split by the string and. Thus, the previously mentioned phrase becomes drugs whose mechanism of action involves XX and YY. In case the translation works, XX is replaced with norepinephrine in the resulting query, and Y Y with serotonin. It must be mentioned that in case one of the free text values includes more than one word, this method fails.</p><p>After a successful translation, the postprocessing module searches for the abstract tree with the smallest length. This is needed because is is possible to have more alternatives for translating the questions, mainly due to the transformation functions. Once the tree is found, its SPARQL linearization is extracted. In case it was a value restriction, solved by the failure handling method, some replacements are done.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Employed Resources</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Language Resources</head><p>GFMed is built mainly as a domain-specific application grammar described in GF. The GF services of parsing, linearization, translation and completion based on two concrete grammars and an abstract grammar are employed. The completion service supports assisted query building by suggesting at each step possible words to continue.</p><p>GF has support for syntax, lexicon and inflections in 36 languages. It comes with a comprehensive library for the English language <ref type="bibr" coords="9,373.64,410.61,10.00,9.96" target="#b6">[7]</ref>. GFMed English concrete grammar relies on this library when it comes to syntax, morphological paradigms used to introduce new elements in the lexicon, and coordination.</p><p>The situation is different for SPARQL. GF does not provide a library for it, even though there are applications using GF for querying Linked Data in Natural Language <ref type="bibr" coords="9,200.07,470.37,10.00,9.96" target="#b2">[3]</ref>. Therefore, GFMed proposes a resource library for SPARQL<ref type="foot" coords="9,476.16,469.01,3.97,6.97" target="#foot_0">1</ref> which defines categories and operators for dealing with RDF resources and properties, with partial or complete triplets, and with aggregation, filtering, and sort operations.</p><p>In the concrete SPARQL grammar built on top of this library, each property from the targeted datasets is linearized to a triplet structure that has null object and subject. These two are completed within linearization of different restriction functions: one of them must be a resource or a previously introduced variable, case in which there must exist a triplet where this variable is bound. The other one is completed with a newly introduced variable that will be either included in the SELECT clause of the query, or will become the subject or the object of another triplet, when more functions are composed. In order to be able to do this, the linearizations of X Class or of the associated criteria are structures consisting of the name of the new variable and the body that includes complete triplets and possible aggregations or filters. When dealing with value restrictions, the SPARQL linearization must include different types of filters according to the datatype of the property: regex-based filters for string, and equality for integer or real datatypes. In order to identify the correct filter, SPARQL linearization of each DrugBank, Diseasome, Sider property includes also the type, Number or String, in addition to its complete name.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Generated Lexicons</head><p>It must be emphasized that GF grammars must know, at compilation time, all the tokens that are part of the analyzed text. Therefore, GFMed includes lexicons for both SPARQL and English formed of all drugs, targets, diseases, genes, and side effects extracted from the three datasets (see Fig. <ref type="figure" coords="10,423.11,424.41,3.89,9.96">1</ref>).</p><p>In the early stages of GFMed's development, these lexicons where generated from data sources available on the sites of the three datatasets, either by using SPARQL endpoints, or by parsing RDF files. In the end, the lexicons where generated by executing SPARQL queries on the QALD-provided endpoint. Special attention was given to side effects, drugs, and genes. For the same ID of a side effect more synonym names are known, expressed through the property sideEf-fectName. For one drug ID in DrugBank, there are more names and synonyms. Furthermore, as the name, the synonyms and the brand names of a drug can appear in a question, English linearization of each drug includes alternatives expressed by values of properties name, synonym, and brandName. For Genes, besides the property rdf s : label, it was considered the property owl : sameAs that relates some genes to DBpedia resources. Extended names for genes are extracted from these resources.</p><p>Table <ref type="table" coords="10,178.20,596.73,4.98,9.96" target="#tab_2">2</ref> shows the number of resources identified in this way, giving both the number of distinct IDs and distinct names for each category. Even though the number of elements in lexicons is not small, the time of compilation to PGF (Portable Grammar Format) and the running time are not significantly increased. But, if it were to take the same approach for DBPedia for example, the size of the lexica and of the grammars could become a problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Results and Their Analysis</head><p>The system was evaluated against training and test questions of Task 2 in QALD. GFMed had the best results, with the overall evaluation from table 3. GFMed correctly parsed all the questions, except one. It partially parsed question 21, Give me the drug categories of Desoxyn, for which it obtained 0.85714 recall and precision 1, meaning that all the answers retrieved by the proposed query were correct, but they were not complete. The reason for this is that Desoxyn is a brand name for drugs with DrugBank IDs DB00182, DB01576, DB01577. We wrongly assumed that one brand name can be associated either to only one drug, or to several drugs but with consistent descriptions. The drug DB00182 has one more category compared to the other two drugs: amphetamines. GFMed identified the drug as being DB01577 so it missed this category. Given the fact that more drugs with different names and different descriptions can have the same brand name, we think that the lexicon should treat the names differently in comparison to the brand names. Instead of having one drug with alternative linearizations for both name and brand name, it would be better to linearize in English a drug ID only to its name and synonyms. A new category for brand names is required, and consequently, a new transformation function from brand name to drug IDs. Thus, the generated Where clause would become:</p><p>{?drug drugbank:brandName "Desoxyn". ?drug drugbank:drugCategory ?categ} instead of currently generated {drugbank:DB01577 drugbank:drugCategory ?categ} 5 Perspectives for Future Work</p><p>The set of described abstract and concrete structures can be extended to other DL constructors. Furthermore, transformation functions are valuable for a uniform treatment of different types of resources, properties or restrictions, but they introduce on one hand (i) the possibility to generate incorrect English questions, as List Lepirudin, where Lepirudin is transformed to a drug class, and on the other hand (ii) the parsing of a question into several alternative abstract trees which introduce unnecessary sameAs statements in the SPARQL linearization. The current solution to take the shortest abstract tree works well, but we plan to investigate ways to avoid the enumerated issues of transformation functions from the grammar itself.</p><p>Starting from the GFMed experiment, a general methodology to build such grammars from ontologies in a semi-automatical manner is to be investigated, similar to the approach taken in <ref type="bibr" coords="11,278.57,656.49,10.00,9.96" target="#b4">[5]</ref>.</p><p>Support for multilinguality is one of the GF strengths that we intend to exploit in future work. In order to support querying of the Task2 datasets in a GF recognised language other than English, GFMed English concrete grammar can be moved almost entirely to an incomplete grammar. Querying in a different language can be obtained by extending this incomplete grammar with language-specific exceptions, together with the language-dependent lexicon. A similar experiment to GFMed, but for Romanian language, is described in <ref type="bibr" coords="12,470.04,191.01,10.57,9.96" target="#b5">[6]</ref> where DBpedia information about cultural personalities are searched.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions</head><p>We consider that our DL-based methodology for building Controlled Natural Language for querying Linked Data was validated by this experiment. The described grammars are expressive enough to cover questions proposed in Task 2 of QALD, addressing querying over more datasets, complex queries with different linguistic structures, and queries that involve lists and free text. By its intrinsic definition, the semantic of any Controlled Natural Language is limited, so our language is also limited. Nethertheless, the DL approach can guide its extension in a structured way.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="5,137.16,379.32,340.96,8.97"><head>WFig. 2 .</head><label>2</label><figDesc>Fig. 2. Functions for diseases expressed as restrictions on the property PossibleDrug</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="6,227.28,365.40,160.73,8.97"><head>V alueRestriction :Fig. 3 .</head><label>alueRestriction3</label><figDesc>Fig. 3. Functions for Value Restrictions</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="7,250.08,253.80,115.25,8.97"><head>W hichDisease2 :Fig. 4 .</head><label>hichDisease24</label><figDesc>Fig. 4. Functions for queries</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" coords="3,134.76,116.28,345.94,404.74"><head>Table 1 .</head><label>1</label><figDesc>Main categories of GFMed grammars</figDesc><table coords="3,134.76,137.16,345.94,383.86"><row><cell>Category</cell><cell cols="3">English Examples and Short Explanation</cell></row><row><cell></cell><cell>Category</cell><cell></cell><cell></cell></row><row><cell>X</cell><cell>NP</cell><cell>X</cell><cell>âˆˆ {Drug, T argetConcept, Gene, Disease,</cell></row><row><cell></cell><cell></cell><cell cols="2">SideEf f ect, SiderDrug}</cell></row><row><cell>DrugBank-</cell><cell>CN</cell><cell cols="2">MeltingPoint, GeneralFunction, DosageForm, Predict-</cell></row><row><cell>Property</cell><cell></cell><cell cols="2">edWaterSolubility, Manufacturers, Indication, Target,</cell></row><row><cell></cell><cell></cell><cell cols="2">Interacting, FoodInteraction,...</cell></row><row><cell>Sider-</cell><cell>CN</cell><cell cols="2">SideEffect</cell></row><row><cell>Property</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Diseasome-</cell><cell>CN</cell><cell cols="2">AssociatedGene, PossibleDrug, ClassDegree, Degree,</cell></row><row><cell>Property</cell><cell></cell><cell cols="2">Class, Size, SubtypeOf, ChromosomalLocation</cell></row><row><cell>Property</cell><cell>CN</cell><cell cols="2">any kind of property from the above three</cell></row><row><cell>X Class</cell><cell>NP</cell><cell cols="2">classes formed of a single named X entity: Lepirudin,</cell></row><row><cell></cell><cell></cell><cell cols="2">or from drugs described by a criterion: drugs that target</cell></row><row><cell></cell><cell></cell><cell cols="2">Prothrombin</cell></row><row><cell></cell><cell></cell><cell cols="2">DrugClass, TargetClass, SideEffectClass, SiderDrug-</cell></row><row><cell></cell><cell></cell><cell cols="2">Class, DiseaseClass, GeneClass, PropertyClass</cell></row><row><cell>Criterion-</cell><cell></cell><cell cols="2">criteria for getting a class of X, expressed by an Y syn-</cell></row><row><cell>ForXClassY</cell><cell></cell><cell cols="2">tactic structure</cell></row><row><cell></cell><cell>NP</cell><cell cols="2">Lepirudin as possible drug</cell></row><row><cell></cell><cell cols="3">Adv with Lepirudin as possible drug</cell></row><row><cell></cell><cell>AP</cell><cell cols="2">treated with Lepirudin, indicated for Fever</cell></row><row><cell></cell><cell>VP</cell><cell cols="2">treat Tuberculosis</cell></row><row><cell></cell><cell cols="3">RCl whose possible drug is Lepirudin, whose possible drugs</cell></row><row><cell></cell><cell></cell><cell cols="2">interact with Lepirudin</cell></row><row><cell></cell><cell cols="3">ClSlash Lepirudin is used for</cell></row><row><cell>Question</cell><cell>QS</cell><cell cols="2">which drugs interact with food</cell></row><row><cell>Utterance</cell><cell>Utt</cell><cell cols="2">utterances from affirmative clauses List the drugs that...</cell></row><row><cell></cell><cell></cell><cell cols="2">or from question clauses What are the drugs that ...</cell></row><row><cell cols="4">grammar, lexicons derived from SIDER, Diseasome and DrugBank were gener-</cell></row><row><cell cols="4">ated. Many syntactic structures in both English and SPARQL grammars were</cell></row><row><cell cols="4">driven by the datatsets' terminology.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" coords="10,146.52,116.28,319.36,106.77"><head>Table 2 .</head><label>2</label><figDesc>Number of distinct resources described in lexicon</figDesc><table coords="10,146.52,135.36,319.36,87.69"><row><cell cols="3">Dataset Resource Distinct Distinct</cell><cell>Considered properties</cell></row><row><cell>Type</cell><cell>IDs</cell><cell>names</cell><cell></cell></row><row><cell>DrugBank Drug</cell><cell>1470</cell><cell cols="2">22872 drugbank : name, drugbank : synonym,</cell></row><row><cell></cell><cell></cell><cell></cell><cell>drugbank : brandN ame</cell></row><row><cell>DrugBank Target</cell><cell>4553</cell><cell>3784</cell><cell>drugbank : name</cell></row><row><cell>Diseasome Disease</cell><cell>4213</cell><cell>3642</cell><cell>diseasome : name</cell></row><row><cell>Diseasome Gene</cell><cell>3919</cell><cell>4328</cell><cell>rdf s : label, owl : sameAs</cell></row><row><cell cols="2">SIDER SideEffect 1737</cell><cell>2398</cell><cell>sider : sideEf f ectN ame</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" coords="11,188.76,183.60,237.86,39.33"><head>Table 3 .</head><label>3</label><figDesc>Results for GFMed in Task2</figDesc><table coords="11,188.76,202.56,237.86,20.37"><row><cell cols="7">Total Processed Right Partially Recall Precision F-measure</cell></row><row><cell>25</cell><cell>25</cell><cell>24</cell><cell>1</cell><cell>0.99</cell><cell>1</cell><cell>0.99</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0" coords="9,144.72,657.24,251.24,8.97"><p>It can be accessed at http://cs-gw.utcluj.ro/%7Eanca/GFMed</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct coords="12,138.32,382.68,342.14,8.97;12,146.88,393.72,163.19,8.97" xml:id="b0">
	<monogr>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Baader</surname></persName>
		</author>
		<title level="m" coord="12,196.08,382.68,284.38,8.97;12,146.88,393.72,18.34,8.97">The description logic handbook: theory, implementation, and applications</title>
		<imprint>
			<publisher>Cambridge university press</publisher>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.32,403.80,342.23,8.97;12,146.88,414.72,333.52,8.97;12,146.88,425.64,136.13,8.97" xml:id="b1">
	<analytic>
		<title level="a" type="main" coord="12,422.51,403.80,58.04,8.97;12,146.88,414.72,237.75,8.97">Bio2RDF: Towards a mashup to build bioinformatics knowledge systems</title>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Belleau</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><forename type="middle">A</forename><surname>Nolin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">N</forename><surname>Tourigny</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Rigault</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Morissette</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="12,392.03,414.72,88.37,8.97;12,146.88,425.64,45.53,8.97">Journal of Biomedical Informatics</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="706" to="716" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.32,435.72,342.28,8.97;12,146.88,446.64,333.78,8.97;12,146.88,457.68,232.34,8.97" xml:id="b2">
	<monogr>
		<title level="m" type="main" coord="12,342.47,435.72,138.13,8.97;12,146.88,446.64,328.64,8.97">Natural Language Interaction with Semantic Web Knowledge Bases and LOD. Towards the Multilingual Semantic Web</title>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Dannells</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Enache</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Mateva</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Ranta</surname></persName>
		</author>
		<editor>Paul Buitelaar and Philip Cimiano</editor>
		<imprint>
			<date type="published" when="2014">2014</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.32,467.64,342.30,8.97;12,146.88,478.68,333.68,8.97;12,146.88,489.60,292.09,8.97" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="12,189.61,467.64,271.61,8.97">Squall: A controlled natural language as expressive as sparql 1.1</title>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>FerrÃ©</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s" coord="12,431.77,478.68,48.79,8.97;12,146.88,489.60,127.49,8.97">NLDB. Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">E</forename><surname>MÃ©tais</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">F</forename><surname>Meziane</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Saraee</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">V</forename><surname>Sugumaran</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">S</forename><surname>Vadera</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">7934</biblScope>
			<biblScope unit="page" from="114" to="125" />
			<date type="published" when="2013">2013</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.32,499.68,342.12,8.97;12,146.88,510.60,333.53,8.97;12,146.88,521.64,125.66,8.97" xml:id="b4">
	<analytic>
		<title level="a" type="main" coord="12,263.65,499.68,216.80,8.97;12,146.88,510.60,79.04,8.97">A three-dimensional paradigm for conceptually scoped language technology</title>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Van Grondelle</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Unger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="12,378.96,510.60,101.45,8.97;12,146.88,521.64,55.15,8.97">Towards the Multilingual Semantic Web</title>
		<editor>
			<persName><forename type="first">P</forename><surname>Buitelaar</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>Cimiano</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.32,531.60,342.24,8.97;12,146.88,542.64,333.79,8.97;12,146.88,553.56,333.81,8.97;12,146.88,564.48,174.36,8.97" xml:id="b5">
	<analytic>
		<title level="a" type="main" coord="12,358.06,531.60,122.50,8.97;12,146.88,542.64,315.19,8.97">Romanian2SPARQL: A Grammatical Framework approach for querying Linked Data in Romanian language</title>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Marginean</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Groza</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><forename type="middle">R</forename><surname>Slavescu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">I</forename><forename type="middle">A</forename><surname>Letia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="12,146.88,553.56,333.81,8.97;12,146.88,564.48,17.21,8.97">Proceedings of 12th International Conference on Development and Application Systems</title>
		<meeting>12th International Conference on Development and Application Systems<address><addrLine>Suceava, Romania</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014">May 15-17 (2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.32,574.56,342.07,8.97;12,146.88,585.60,142.59,8.97" xml:id="b6">
	<monogr>
		<title level="m" type="main" coord="12,193.68,574.56,281.70,8.97">Grammatical Framework: Programming with Multilingual Grammars</title>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Ranta</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>CSLI Publications</publisher>
			<pubPlace>Stanford</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.32,595.56,342.15,8.97;12,146.88,606.60,333.64,8.97;12,146.88,617.52,142.59,8.97" xml:id="b7">
	<analytic>
		<title level="a" type="main" coord="12,387.21,595.56,93.25,8.97;12,146.88,606.60,295.03,8.97">Aqualog: An ontologydriven question answering system for organizational semantic intranets</title>
		<author>
			<persName coords=""><forename type="first">G</forename><surname>Zenz</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">X</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">E</forename><surname>Minack</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W</forename><surname>Siberski</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W</forename><surname>Nejdl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="12,450.25,606.60,30.28,8.97;12,146.88,617.52,61.24,8.97">Journal Web Semantics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="72" to="105" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.32,627.60,342.17,8.97;12,146.88,638.52,333.73,8.97;12,146.88,649.44,82.84,8.97" xml:id="b8">
	<analytic>
		<title level="a" type="main" coord="12,371.73,627.60,108.76,8.97;12,146.88,638.52,238.02,8.97">From keywords to semantic queries -incremental query construction on the semantic web</title>
		<author>
			<persName coords=""><forename type="first">G</forename><surname>Zenz</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">X</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">E</forename><surname>Minack</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W</forename><surname>Siberski</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W</forename><surname>Nejdl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="12,391.55,638.52,89.06,8.97">Journal Web Semantic</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="166" to="176" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
