<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,161.94,142.76,298.76,11.84;1,292.74,159.20,26.41,11.84">RACAI&apos;s Question Answering System at QA@CLEF 2007</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName coords="1,203.64,195.54,36.57,8.22"><forename type="first">Dan</forename><surname>Tufiş</surname></persName>
							<email>tufis@racai.ro</email>
						</author>
						<author>
							<persName coords="1,246.19,195.54,57.28,8.22"><forename type="first">Dan</forename><surname>Ştefănescu</surname></persName>
						</author>
						<author>
							<persName coords="1,309.74,195.54,33.40,8.22"><forename type="first">Radu</forename><surname>Ion</surname></persName>
						</author>
						<author>
							<persName coords="1,349.18,195.54,69.78,8.22"><forename type="first">Alexandru</forename><surname>Ceauşu</surname></persName>
							<email>aceausu@racai.ro</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Institute for Artificial Intelligence</orgName>
								<orgName type="institution">Romanian Academy</orgName>
								<address>
									<addrLine>13, &quot;13 Septembrie&quot;</addrLine>
									<postCode>050711</postCode>
									<settlement>Bucharest</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<address>
									<country key="RO">Romania</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,161.94,142.76,298.76,11.84;1,292.74,159.20,26.41,11.84">RACAI&apos;s Question Answering System at QA@CLEF 2007</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">F336DA6B5C8B9730436D74A03E453BC2</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-06-26T15:15+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>question answering</term>
					<term>QA</term>
					<term>text preprocessing</term>
					<term>tokenization</term>
					<term>POS tagging</term>
					<term>document indexing</term>
					<term>document retrieval</term>
					<term>Lucene</term>
					<term>answer extraction</term>
					<term>query formulation</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper presents a pattern-based question answering system for the Romanian-Romanian task of the Multiple Language Question Answering (QA@CLEF) track of the CLEF 2007 campaign. We show that working with a good Boolean searching engine and using question type driven answer extraction heuristics, one can achieve acceptable results (30% overall accuracy) using simple, pattern-based techniques. Furthermore, we will present an answer extraction algorithm that aims at finding the correct answer irrespective of the question and answer type.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="9" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="10" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="11" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="12" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="13" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="14" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="15" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Question Answering (QA) is a long-standing goal of Natural Language Processing (NLP) field of Artificial Intelligence. Currently it is viewed as an almost indispensable tool of Information Extraction (IE) with which one can seek the exact answers to the natural language questions that potentially need immediate attention using a large collection of documents. QA shifted the focus from Information Retrieval (IR), which gathers user's documents of interest in response to a specific query to IE and answer searching and extraction. This way, users are relieved of formulating complex queries to retrieve the documents in which they will have to look the answer for themselves. This last operation can be time consuming and because of it, most of the time, users of simple IR engines easily give up the search if they cannot find the answer in the first few passages of the top (at most 10) document hits of the engine.</p><p>In this context, QA engines offer the much expected way out for the users: formulate the queries in natural language and offer an answer or a list of answers from the retrieved list of candidate documents. To do this, the typical QA system implements the following components:</p><p>• a question analysis component which usually identifies the type of the question (factoid, definition, enumeration, etc.) and the type of the expected answer (specifically for factoid questions: person, location, date, organization, etc.);</p><p>• a paragraph extraction and ranking component which is responsible for selection of those paragraphs that may contain the sought answer to the user's query extracted from the documents that were returned by the text searching engine; • an answer extraction module which scans the list of best ranked paragraphs in order to retrieve the complete, minimal and syntactically well-formed string(s) that constitute(s) the answer(s) to the user's natural language query. All of the three components above are by no means easy to implement nor have they already been successfully implemented by the hard to meet standards of the human evaluation. To solve the QA problem, one has a multitude of natural language "problems" to deal with. Some of these such as part of speech tagging or syntactic analysis received satisfactory algorithmic solutions but others, ranging mainly in the semantic realm of natural language, may still receive better solutions to meet human level acceptance. Out of the latter problems, meaning equivalence and textual entailment between different natural language expressions is of outmost importance to QA. Consider for instance the question "When did Elvis Presley die?" and the text snippet "The King of Rock &amp; Roll died on August 16, 1977". If only the QA algorithm could "know" that the "King of Rock &amp; Roll" is a denomination of Elvis Presley, it could answer the question.</p><p>Current research in QA acknowledges these problems and it is no wonder that modern QA systems are almost incredibly complex comprising modules that deal with different levels of natural language representations. The semantic processing is playing a central role in answer determination. Systems such as FALCON ( <ref type="bibr" coords="2,452.33,380.51,9.79,8.22" target="#b2">[3]</ref>), COGEX ( <ref type="bibr" coords="2,181.86,391.31,9.79,8.22" target="#b6">[7]</ref>), PowerAnswer ( <ref type="bibr" coords="2,260.78,391.31,10.00,8.22" target="#b1">[2,</ref><ref type="bibr" coords="2,270.78,391.31,6.66,8.22" target="#b5">6]</ref>), LaSIE ( <ref type="bibr" coords="2,317.48,391.31,10.34,8.22" target="#b0">[1]</ref>) and QUARK ( <ref type="bibr" coords="2,390.88,391.31,14.66,8.22" target="#b10">[11]</ref>) use some form of logical representation of both question and candidate answers so as to be able to logically prove that the selected answers can be justified in terms of the question premises. The most recently published results on the QA track from the Text REtrieval Conference (TREC) <ref type="foot" coords="2,259.44,434.24,2.82,4.92" target="#foot_0">1</ref> , and also the results published in the previous years, show that QA systems using abduction as a form of validating answers are the best. For instance, PowerAnswer 3 achieved an accuracy of 0.578 for factoid questions at TREC 2006 ( <ref type="bibr" coords="2,194.55,467.04,10.33,8.22" target="#b5">[6]</ref>) and PowerAnswer 2 scored 0.713 at TREC 2005 ( <ref type="bibr" coords="2,401.24,467.04,14.69,8.22" target="#b9">[10]</ref>) for the same type of questions.</p><p>Although semantic processing is the next logical step in improving QA systems (and indeed any NLP system), occasionally QA may get away without it. For instance, LASSO ( <ref type="bibr" coords="2,216.01,510.36,10.37,8.22" target="#b7">[8]</ref>) is the QA system that preceded FALCON and PowerAnswer and the answer was extracted using the parse tree of the candidate sentence and different heuristics to match keywords from the questions with those of the sentence. We call these types of QA systems, pattern or template-based QA systems.</p><p>In this paper we will describe a pattern-based QA system, which is a combination of two separate QA systems that use the same text search engine and different question analysis and answer extraction modules. Our system (denoted with the "ICIA" indicative in the runs we have submitted), participated in the Romanian QA task at the QA@CLEF 2007 where it obtained a 30% global accuracy. In what follows, we will give a description of each QA system along with their combination and we will also describe our text searching engine that is a Boolean query engine based on the open source Apache Lucene<ref type="foot" coords="3,298.92,151.58,2.82,4.92" target="#foot_1">2</ref> full text searching engine.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">The Document Collection</head><p>The document collection was composed of 43486 Romanian language documents from Wikipedia <ref type="foot" coords="3,203.04,223.88,2.82,4.92" target="#foot_2">3</ref> . The files provided for the competition were available both in HTML and XML formats (http://ilps.science.uva.nl/WikiXML/). We chose to use the XML files due to their well-formed and valid properties. As the original XML contained a lot of pictures, tables and other elements which were not relevant for the QA task, we transformed the files, using a XSLT schema, into XMLs preserving only the relevant information needed for IR and IE, organized and structured in such a way so as to be easily exploited both by Lucene and the IE tools we developed. The new files obtained have the following structure: Under the clinks tag we put the articles related to the current one. The titles and contents from each document in the collection were preprocessed so as to obtain sentence and word splitting, part of speech tagging (POS tagging) and lemmatisation using the Tokenizing, Tagging and Lemmatizing free running text module (TTL 4 , <ref type="bibr" coords="3,143.22,469.62,9.84,8.22" target="#b3">[4]</ref>). TTL also incorporates a regular expression based named entity recognizer but due to its inceptive status, it has not been used. Thus, we rely on the output of the part of speech tagger for rough entity recognition: numeral (integer or real) and proper names, which are likely candidates for factoid questions.</p><p>After the TTL run, we parsed the entire document collection using our link analyser LexPar ( <ref type="bibr" coords="3,210.05,523.73,9.85,8.22" target="#b4">[5]</ref>). The link analyser, or linker, does a dependency-like analysis of every sentence of every document in the collection. This dependency-like analysis is called a linkage and it is produced with a link filter adaptation (LexPar) of the Lexical Attraction Models (LAM) of Deniz <ref type="bibr" coords="3,282.50,556.19,41.87,8.22">Yuret ([12]</ref>). In principle, a LAM tries to assign the most likely undirected, acyclic, planar and connected graph to one sentence given that the vertexes of this graph are the words of the sentence and its edges are the dependency relations that hold between the matched words pairs. To exemplify the output of LexPar, the linkage of the sentence "The King of Rock &amp; Roll died on August 16, 1977" is depicted in Figure <ref type="figure" coords="4,290.63,151.92,4.71,8.22" target="#fig_0">1</ref> (punctuation is not included in the linkage): In this figure, we can see that the linker does not follow the usual dependency rules in that this analysis makes its own assumptions about the structure of the dependency graph. For instance, we can see that the preposition "on" is not linked to the verb "died" as it should be but instead, the head of the noun phrase "August" is the one directly linked to the verb. This is because the linker computes the scores for the content words links using association scores so as to be able to detect correct pairings and uses rules of pairing for links involving functional words so that these kinds of links are consistent over all analyses <ref type="foot" coords="4,290.70,315.14,2.82,4.92" target="#foot_4">5</ref> . For example, a determiner will always be attached to a noun subject to agreement rules, other attachments being forbidden (for a detailed explanation of a LAM the reader is referred to <ref type="bibr" coords="4,358.08,337.08,14.96,8.22" target="#b11">[12,</ref><ref type="bibr" coords="4,375.38,337.08,6.65,8.22" target="#b3">4]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Document Indexing and Searching</head><p>The RACAI QA system uses a C# port of the Apache Lucene full-text searching engine. Lucene is a Java-based open source toolkit for text indexing and searching. It is one of the projects of Apache Jakarta and is licensed under the Apache License.</p><p>In Lucene, everything is a document. A Lucene document resembles to a row in a relational database and it supports several fields (rows). The type of index used in Lucene and other full-text searching engines is an "inverted index" -every term in the index is associated with a frequency and is mapped to the documents in which it occurred. The index allows Lucene to quickly locate every document associated with a given set of search terms. An important feature of Lucene is the flexibility of the query syntax. We used only a subset of the types of queries supported by Lucene: term, phrase, field-specific and Boolean queries. Field-specific queries can be used to target specific fields in the document index and Boolean queries are used to group the results of the individual queries.</p><p>The score of query Q for document D is based on the document term frequency and inverse document frequency expression:</p><formula xml:id="formula_0" coords="4,148.68,556.31,319.94,25.19">∑ ∩ ∈ ⋅ ⋅ ⋅ ⋅ = D Q t D t norm t idf t tf Q qnorm D Q coord D Q score ) , ( ) ( ) ( ) ( ) ,<label>( ) , ( 2 (1)</label></formula><p>coord(Q,D) is a factor based on how many of the query terms are found in the specified document (a ratio between the terms found in the document and the number of terms in the query)</p><p>qnorm(q) is a normalizing factor used to make scores between different queries comparable (it is the sum of the squared weights of each of the query terms and it does not affect document ranking since all document weights are multiplied by the same factor); tf(t in d) is the term frequency in a given document; idf(t) is the inverse document frequency; norm(t,d) is a normalization factor associated to a specific document (it is a value computed at index time using the length of the document and the weight given to each field).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Indexing</head><p>Although the Lucene toolkit comes with several already-made tokenizers, stemmers and stop word filters, we preferred to deploy a custom indexing scheme using our own annotated resources. There were considerable improvements when we used the Romanian tokenizer instead of Lucene's default tokenizer because most of the words with hyphen and the abbreviations were handled in a consistent manner. Usually stemming improves the recall to an IR system. We used lemmatization backed by POS-tagging -in most of the cases lemma disambiguates the part of the speech of a word (in Romanian). Instead of filtering the index terms using a stop words list we used the information from POS-tagging to keep only the content words (nouns, main verbs, adjectives, adverbs and numerals). We used the sentence and chunk annotation to insert phrase boundaries into our term index; a phrase query cannot match across different chunks or sentences.</p><p>In our implementation every document has different fields for the surface form of the words and their corresponding lemmas. This kind of distinction applies to titles and document text resulting in four different index fields: title word form (title), title lemma (ltitle), document word form (text) and document lemma (ltext). . PERIOD</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Searching</head><p>To acquire better precision in ranking the documents and their content we used two indexes: (i) one for the documents (43486 documents, 694467 terms) and (ii) one for the sections of the documents (90819 sections, 700651 terms).</p><p>Given a Boolean query with several conjunctive clauses, the system will first try to match all of the query clauses against the document index. If the search does not have a result, the system will recursively try to match n -1 of the conjunctive clauses until the query returns at least one result from the document index. The returned documents from the conjunctive Boolean query are used to select the corresponding sections in which the query terms occur. The sections are ranked using a query with clauses of the maximal conjunctive Boolean. The clauses from this new query are joined with the disjunctive operator. The ranking is made against the sections index. For instance, for the query in Figure <ref type="figure" coords="6,235.00,286.43,3.54,8.22" target="#fig_2">2</ref>, in the first step the system tries to match all the 26 query clauses, but after a few recursive iterations, the maximal query has only 15 matches. The sections from the matched documents are ranked using the maximal query, this time using the operation of disjunction. In the IR phase, this system generates queries for every question given which are used to interrogate Lucene. As previously described, for each question the search engine returns a list of snippets in a descent order according to their relevance regarding the provided query. In the IE stage, we first identify the type of the answer required by each question using a Maximum Entropy approach. Based on the answer types and the document and paragraph scores provided by Lucene, the most probable answers are then extracted in a manner that will be described below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Query Generation</head><p>As previously mentioned, in order to interrogate the search engine for relevant snippets we need to construct a query for each question. The query directly influences the precision and the recall of the engine. Although we primarily aim for a high recall, a good precision will decisively influence the IE phase, as the top outputs are those with highest matching scores. For the current problem, we considered the recall to be the percentage of the questions for which the engine returns good snippets (snippets that contain correct answers), from the total number of questions that can be answered, and the precision to be the proportion of good snippets from those that have been returned as first ranked.</p><p>For generating the queries, the A System uses the content words found in the questions, the noun phrases formed by them and all the subparts of the noun phrases that start with a content word. All these are searched in lemma and word forms both in the title and the text fields of the indexed documents. The query is finally obtained by concatenated all the terms with the logical operator AND (the whitespace separator between terms has AND semantics). As an example, for the question "Cu ce identifică panteismul divinitatea?" ("What does Pantheism identify divinity with?"), the generated query is: As mentioned in section 3, the search engine was programmed to return the snippets that contain the majority of the terms. One should know that in the process of query generation we did not take into account those verbs which can be auxiliaries (ex.: fi -be, avea -have). Also, we have to mention that all questions had been previously tokenized, tagged and chunked. The following picture shows the output of Lucene for the previously generated query. The queries should have been enriched with synonyms extracted from the WordNet lexical ontology, but our tests revealed that, for the given questions, this did not improve the results. This seemed very strange, but we discovered that the reason for this lies in the fact that the answers contained almost all the content words found in the questions. So, expanding the queries with synonyms led to poorer results as a consequence of the noise introduced in this way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Question Type Classification</head><p>For each question, it is necessary to identify the type of the answer one should search for, meaning that a question needs to be classified with respect to its answer type. In order to recognize the type of the answer, we used a Maximum Entropy approach. Extensively used in NLP for different problems like sentence boundary detection, tagging or text categorization <ref type="bibr" coords="8,295.80,431.09,10.05,8.22" target="#b8">[9]</ref>, the Maximum Entropy framework is well suited for our task since it can combine diverse forms of contextual information in a principled manner. It is a machine learning technique, originally developed for statistical physics, used for the analysis of the available information in order to determine a unique probability distribution. Similar to any statistical modeling method, it relies on empirical data sample that gives, for some known sets of input, a certain output. The sample is analyzed and a model is created, containing all the rules that could be inferred from the data. The model is then used to predict the output, when supplied with new sets of input that are not in the sample data. The maximum entropy method constructs a model that takes into account all the facts available in the sample data but otherwise preserves as much uncertainty as possible.</p><p>Our problem may be formulated as any classification problem: finding the distribution probability p, such that p(a|b) is the probability of class a given the context b. In our case, the context b is formed by certain features extracted for every question. We took into account features like: the first WH word (cine -who, undewhere, când -when, care -which, ce -what, cum -how, cât -how many), the existence of other words before the WH word, the existence of certain verbs at the start of the sentence (like numi -name), the existence of a word denoting measurement units, the existence of a word denoting temporal units, the number of the first noun, the part of speech of the first content word (noun, verb or numeral), the existence of the verb "to be" as the first verb, the existence of at least two nonauxiliary verbs, the existence of a proper noun as the first noun or not, the punctuation mark at the end of the question if different from question mark. For the question given as an example above, the features extracted are: "ce", "firstVerbNonDef" and "n" while for a question like "Numiţi trei autori americani ai căror opere au fost influenţate de filozofia existenţială." ("Name three American writers whose work was influenced by the existential philosophy."), the features would be: "firstIsVerb", "numi", "Number", "firstNounIsPlural", "firstVerbNonDef", "multiVerb" and ".".</p><p>We manually identified the type of answers for 500 questions, and each of the answer type, along with the features extracted, was used for training. It is clear that we did not had enough examples in order to reliably specify p(a|b) for all (a, b) pairs and we needed a method which makes use of the partial evidence to find the best estimation for the distribution p. We took into consideration 8 classes meaning that we might identify 8 types of possible answers: temporal (TMP), time interval (ITMP), definition (DEF), measure (MES), list (LST), location (LOC), names (N) and explanation (WHY). As Ratnaparki showed in <ref type="bibr" coords="9,267.35,304.08,9.98,8.22" target="#b8">[9]</ref>, this is the typical situation when a ME approach can be employed. The literature describes in detail the mathematical and statistical principles behind this method and we will not further detail them here.</p><p>The classifier was tested only on the training data and the questions given for the competition, and, for latter data, its precision was 99.5%, which means that 199 questions from 200 were correctly classified with respect to their type answer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Answering the Questions</head><p>The determination of the right type of the answer is very helpful in adopting a correct strategy for finding it in the set of snippets returned by the search engine. Among the types we took into account, we identified two as the most problematic: the definitions and the lists. Due to the small amount of time, the A System focused on finding the answers only for those questions that were categorized as requiring definitions as answers. Usually the answer of a question is only several words length but in the case of a definition, a whole sentence may be what we are looking for. The document and section scores provided by Lucene are very important as they provide the strongest evidence regarding the existence of possible answers in the returned snippets. Another important role in finding the answer, no matter the type of the questions, is played by the focus of the question. For the DEF questions in Romanian, we noticed that, usually, the focus of the question is the first NP found in the question starting with a common noun, a proper noun, or an adjective. This is the reason for which we chose the first NP that has those properties as the focus of the question. We discriminated between cases in which the NP has one or more words.</p><p>We searched the word form or the lemma form of the focus in every sentence of the sections of the documents returned by Lucene and we looked for several positive or negative clues:</p><p>-the existence of "to be" verb (together with a possible auxiliary) immediately following the focus and the existence or not of indefinite articles or demonstrative pronouns or articles (cel in cel care -the one who or cel maithe most) after the verb; (positive) -the existence of an opened left bracket immediately after the focus, followed or not by a noun; (positive) -the existence of a comma in front or after the focus; (positive) -the existence of certain prepositions before the focus (la -at, pentru -for );</p><p>(negative) -the existence of a definite oblique article in front of the focus; (negative) Usually in a document the definitions are given in the beginning so we expect that the first sentences of the documents contain them. This is why we penalize the candidates as we find them farther and farther in the document (the length in sentences counts) (sentence_score = 1.0 -current_sentence_index * 1.0 / number_of_sentences * 2). The rank of a candidate is taken into account, no matter the document, or the section (last_added_score = 1.0 -rank_of_candidate * 0.015). The formula also includes, as previously stated, the document and section scores for the snippets in which the candidates were found (total_score_for_a_candidate = doc_score * section_score * sentence_score * last_added_score). Finding the focus only in lemma form or finding only parts of the focus will penalize the newly added candidates (the candidate score is weighted with 0.75, respectively 0.6). Different combinations of the positive clues led to the weighting of the total score with values between 0.6 and 1.5. All the weights were empirically set by tuning the system from the previous CLEF competition.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">QA System B</head><p>This QA system is the second of the two QA systems that were combined in order to obtain the final result. This system uses the linkage of the question to determine the question focus and topic and their dependants and also to generate the formal query to the text searching engine. In what follows, we will describe how the question is analyzed (i.e. focus/topic identification, query expansion) and how the answer is extracted from the text passages returned by the text searching engine.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Question Analysis</head><p>The input question is first preprocessed with TTL to obtain word tokenization, part of speech tagging and lemmatization and then, it is analyzed using LexPar. The linkage of the sentence is used to extract the focus-topic articulation of the question along a pattern, which is a sequence of parts of speech belonging to words that are directly linked in the question. Here are the most important patterns for Romanian (considered from the beginning of the question):</p><p>1 "Unde(Where)/WH adverb se află(is)/main verb lacul(the lake)/noun Baikal?"; 4 {main verb}, {noun(FOCUS)} i.e. "Numiţi(Name)/main verb culorile(the colors)/noun steagului României.". After the focus and topic are extracted, the query to the Lucene full-text searching engine is created by following the links in the linkage of the question so as to extract all the links that are formed between content words (nouns, main verbs, adjectives and adverbs). With this list of links at hand, the query is computed as a logical disjunction of terms in which each term corresponds to a content word to content word link and it is equal to a logical conjunction of the lemmas at the end points of the link. For instance, for the question "În/prep ce/wh-det an/noun s-/refl-pron a/v-aux născut/v-part Mihai/noun Eminescu/noun?" with the linkage {&lt;În, an&gt;, &lt;ce, an&gt;, &lt;an, născut&gt;, &lt;s-, născut&gt;, &lt;a, născut&gt;, &lt;născut. Mihai&gt;, &lt;Mihai, Eminescu&gt;}, the list of the links between content words is {&lt;an, născut&gt;, &lt;născut. Mihai&gt;, &lt;Mihai, Eminescu&gt;} and the resulting query is: As previously explained, our text searching engine does not use this query directly but it heuristically tries to replace the OR operators with AND operators until it gets one or more hits (in other words, it tries to refine the initial query until it finds one or more documents that satisfy the refined query). If replacing doesn't help, the initial query is tried and the results are returned to the QA application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Answer Extraction</head><p>Answer extraction is basically the best structural match between the linkage of the question and the linkages of the sentences in the paragraphs that have been returned by the text searching engine in response to the automatically formulated query (see previous section).</p><p>Because the linkage is not a full dependency parse, we do not know which word in the sentence is the root word of the dependency tree. We solve this problem by choosing the first main verb in the sentence/question to be the root of the linkage. To better explain how structural scoring is made between the linkage of the question and the linkage of one document sentence, is best to see an example (see Figure <ref type="figure" coords="11,429.68,568.61,3.41,8.22" target="#fig_4">3</ref>). Otherwise, the value of S increases by the inverse absolute difference of depths at which matching nodes are found. For the two trees in Figure <ref type="figure" coords="12,379.42,449.82,3.54,8.22" target="#fig_4">3</ref>, S = 3 (see the dotted arrows which mark 3 matching nodes at the same depths).</p><p>After the structural match score S is computed, we extract all the subtrees from the candidate sentence tree such that: a) subtrees do not contain already matched nodes and b) they are at the same depth as the focus node of the question (marked with the "?" in Figure <ref type="figure" coords="12,198.07,503.87,3.38,8.22" target="#fig_4">3</ref>). For our example, we have two such subtrees: "Botoşani" and "15 ianuarie 1850", which, in the absence of a proper named entity recognition ("Botoşani" is the city of birth of Mihai Eminescu and "15 ianuarie 1850" is his full date of birth), are equal answer candidates. To solve this problem and remembering that the POS tags are the only indications as to the type of entities we are dealing with, we have assigned to each focus-topic extraction pattern a POS indicating the type of answer we are searching. In our example, this question pattern has a numeral POS attached, so we choose the answer that contains numeral(s), namely "15 ianuarie 1850" which is a bit longer than the exact answer: 1850.</p><p>Structural match occurs between the linkage of the question the linkage of each sentence of each paragraph that was returned by the text searching engine. We want to order the candidate sentences by the S score but also by the score of the paragraph in which the sentence occurred (we want to also give credit to the text searching engine). This way, the final candidate sentence score is A = αS + (1 -α)P where P is the score of the paragraph containing the candidate sentence <ref type="foot" coords="13,340.62,152.30,2.82,4.92" target="#foot_5">6</ref> . Answers are thus extracted (as explained above) from the top candidate sentences ordered by the A score.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Results and Conclusions</head><p>The results obtained should be analyzed considering both Information Retrieval and Information Extraction phases. As in the IE stage we used the output of the IR when looking for the correct and exact answers, it is clear that the two systems (A and B) could not answer a number of questions greater than that for which the search engine returned good snippets. Besides the manner the documents were indexed and the engine's parameters tweaked, its results depend on the way the queries are constructed. Although the queries were built in two different ways, as described in the sections about the two systems, it turns out that the outputs obtained were very similar. The experiments showed that we got somehow improved results with the query generated by the A System. In most of the cases, using these queries meant finding the right snippet higher in the search engine's list of the returned snippets. This lead to an increased precision, the difference between the precisions of the two systems being around 4%. However, in very few cases, when the right snippet was hard to find and the queries obtained using the A Systems' method did not get it at all, the queries produced with the B Systems' technique made the search engine return it, but only in the end of the findings list. So, we got a 2% higher recall for the B System. The actual figures for the two systems were manually computed as described in 4.1 section and they are shown in the table below. We should mention that some of the questions given to be answered were related. These questions were arranged into groups, for most of the questions, to retrieve relevant results we had to take into account information found in the previous questions. We managed to handle this situation by adding the query generated for a new question to the query of the first question of the group.</p><p>Due to the small amount of time, in the IE phase we used the strategy of splitting the tasks between the two systems. The A System focused on answering the DEF type questions, while the B System concentrated on answering the other questions. However, the B System did not use the information provided by the classifier described in the 4.2 section in searching for the correct answers.</p><p>From the total of 200 questions, 31 were identified as requiring a DEF type answer but only 30 were in fact of this nature. The A System answered correctly with the first returned output in 25 cases although in 3 situations the answers were considered inexact (possibly because of their length). However, for another 4 questions one could have found the correct answer among the first three replies.</p><p>For the question "Ce este Selena?" / "What is Selene?", the top 3 answers returned by the system were:</p><p>1. "o actriţă şi cântăreaţă americană , născută pe 24 iulie 1969 , în cartierul Bronx din New York ." / "an American actress and singer, born on July 24, 1969 in Bronx, New York .";</p><p>2. "satelitul natural al Pãmântului ." / "the natural satellite of the Earth"; 3. "cauza mareelor şi a modificat continuu durata mişcării de rotaţie ." / "the cause of the tidal and continually modified the length of the rotational motion".</p><p>The second answer was considered the correct one, although we believe that the first one is also good enough. Obviously, the third answer is wrong since it's not even sufficiently coherent.</p><p>The answers extracted by the B System for the non-DEF type questions, were handled in two ways, which correspond to the two runs we sent to the organizers. First we considered the first answer as the good one. The second approach was to construct the good answer by concatenating the majority of the answers coming from the same snippet. In this way we managed to transform 4 wrong answers into inexact ones, as shown in the table below. However, the total score remained unchanged.  We should notice that we did not answer correctly to any of the Lists questions because there was no separated strategy in this direction. The improvements can definitely come from using the question classifier and from adopting specific strategies in searching for different types of answers.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="4,234.96,223.78,152.53,7.62;4,187.08,160.32,248.81,55.92"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The result of LexPar on one sentence.</figDesc><graphic coords="4,187.08,160.32,248.81,55.92" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="6,259.38,636.76,93.14,7.62;6,181.14,444.78,268.56,181.20"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Example of a query.</figDesc><graphic coords="6,181.14,444.78,268.56,181.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="8,235.38,265.06,151.85,7.62;8,143.52,138.72,324.84,118.80"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Lucene output for the example query.</figDesc><graphic coords="8,143.52,138.72,324.84,118.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3" coords="11,153.90,355.72,279.97,5.29;11,153.90,363.28,144.48,5.29"><head>(</head><label></label><figDesc>ltext:an AND ltext:na•te) OR (ltext:na•te AND ltext:Mihai) OR (ltext:Mihai AND ltext:Eminescu)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4" coords="12,174.30,292.48,273.91,8.48;12,231.90,303.48,148.13,8.22;12,143.22,319.98,325.46,8.22;12,143.22,330.84,325.58,8.22;12,143.22,341.64,325.56,8.22;12,143.22,352.44,325.59,8.22;12,143.22,363.30,325.57,8.22;12,143.22,374.04,325.56,8.22;12,143.22,384.90,325.54,8.22;12,143.22,395.76,325.60,8.22;12,143.22,406.50,325.50,8.22;12,143.22,417.36,325.45,8.22;12,143.22,428.22,325.49,8.22;12,143.22,438.96,325.48,8.22;12,143.22,449.82,325.54,8.22;12,143.22,460.61,218.50,8.22;12,153.90,471.41,314.85,8.22;12,143.22,482.27,325.59,8.22;12,143.22,493.07,325.61,8.22;12,143.22,503.87,325.53,8.22;12,143.21,514.73,325.48,8.22;12,143.21,525.53,325.43,8.22;12,143.21,536.33,325.56,8.22;12,143.21,547.19,325.53,8.22;12,143.21,557.99,325.60,8.22;12,143.21,568.79,325.54,8.22;12,143.21,579.65,325.53,8.22;12,143.21,590.45,211.94,8.22;12,153.90,601.25,314.84,8.22;12,143.22,612.11,325.42,8.22;12,143.22,622.91,325.53,8.22;12,143.22,633.71,325.47,8.22;12,143.22,138.72,324.56,145.86"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Structural match between the question "În ce an s-a născut MihaiEminescu" and one candidate sentence.To follow the same example, for the question "În ce an s-a născut Mihai Eminescu?", the text searching engine returns among other paragraphs, one which begins with the sentence "Mihai Eminescu s-a născut la Botoşani la 15 ianuarie 1850." (the keywords from the question are bolded). In Figure3, on the left side we have the linkage of the question (functional words removed) and on the right, we have the linkage of the candidate sentence (functional words also removed). Structural match means going depth-first through the question tree one node at the time and for each such node (let it be Nq), going depth-first through the sentence tree searching from the current node in the question tree (let Ns be the matching node). When such a node is found, a matching score S is increased by 1/(1 + |depth(Nq) -depth(Ns)|) such that if the nodes are at the same depth in the two trees, the value of S increases by 1.Otherwise, the value of S increases by the inverse absolute difference of depths at which matching nodes are found. For the two trees in Figure3, S = 3 (see the dotted arrows which mark 3 matching nodes at the same depths).After the structural match score S is computed, we extract all the subtrees from the candidate sentence tree such that: a) subtrees do not contain already matched nodes and b) they are at the same depth as the focus node of the question (marked with the "?" in Figure3). For our example, we have two such subtrees: "Botoşani" and "15 ianuarie 1850", which, in the absence of a proper named entity recognition ("Botoşani" is the city of birth of Mihai Eminescu and "15 ianuarie 1850" is his full date of birth), are equal answer candidates. To solve this problem and remembering that the POS tags are the only indications as to the type of entities we are dealing with, we have assigned to each focus-topic extraction pattern a POS indicating the type of answer we are searching. In our example, this question pattern has a numeral POS attached, so we choose the answer that contains numeral(s), namely "15 ianuarie 1850" which is a bit longer than the exact answer: 1850.Structural match occurs between the linkage of the question the linkage of each sentence of each paragraph that was returned by the text searching engine. We want to order the candidate sentences by the S score but also by the score of the paragraph in which the sentence occurred (we want to also give credit to the text searching engine).</figDesc><graphic coords="12,143.22,138.72,324.56,145.86" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" coords="5,143.22,471.22,323.57,160.52"><head>Table 1 .</head><label>1</label><figDesc>Example of indexed terms for the sentence "Din originea lingvistică se poate observa caracterul istoric al ideii de logică" ("From the linguistic origin one can notice a historical feature for the concept of logic.").</figDesc><table coords="5,143.22,506.49,323.57,125.25"><row><cell>Word</cell><cell>Lemma</cell><cell>POS</cell><cell>Chunk</cell><cell>Word form field</cell><cell>Lemma field</cell></row><row><cell>Din</cell><cell>Din</cell><cell>Spsa</cell><cell>Pp#1</cell><cell></cell><cell></cell></row><row><cell>originea</cell><cell>origine</cell><cell>Ncfsry</cell><cell>Pp#1,Np#1</cell><cell>din originea</cell><cell>origine</cell></row><row><cell cols="3">lingvistică lingvistic Afpfsrn</cell><cell>Pp#1,Np#1,Ap#1</cell><cell>lingvistică</cell><cell>lingvistic</cell></row><row><cell>se</cell><cell>Sine</cell><cell>Px3--a--------w</cell><cell>Vp#1</cell><cell></cell><cell></cell></row><row><cell>poate</cell><cell>Putea</cell><cell>Vmip3s</cell><cell>Vp#1</cell><cell></cell><cell></cell></row><row><cell>observa</cell><cell>observa</cell><cell>Vmnp</cell><cell>Vp#1</cell><cell>se poate observa</cell><cell>putea observa</cell></row><row><cell>caracterul</cell><cell>caracter</cell><cell>Ncmsry</cell><cell>Np#2</cell><cell></cell><cell></cell></row><row><cell>istoric</cell><cell>Istoric</cell><cell>Afpms-n</cell><cell>Np#2,Ap#2</cell><cell></cell><cell></cell></row><row><cell>al</cell><cell>Al</cell><cell>Tsms</cell><cell>Np#2</cell><cell>caracterul istoric al</cell><cell>caracter istoric</cell></row><row><cell>ideii</cell><cell>Idée</cell><cell>Ncfsoy</cell><cell>Np#2</cell><cell>ideii</cell><cell>idee</cell></row><row><cell>de</cell><cell>De</cell><cell>Spsa</cell><cell>Pp#2</cell><cell></cell><cell></cell></row><row><cell>logică</cell><cell>Logică</cell><cell>Ncfsrn</cell><cell>Pp#2,Np#3</cell><cell>de logică</cell><cell>logică</cell></row><row><cell>.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" coords="7,143.22,478.70,325.50,40.04"><head>ltitle:"panteism divinitate" ltext:"panteism divinitate" ltext:identifica ltitle:divinitate ltext:divinitate ltitle:panteism ltext:panteism title:"panteismul divinitatea" text:"panteismul divinitatea" text:identifică title:divinitatea text:divinitatea title:panteismul text:panteismul</head><label></label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" coords="13,163.50,424.78,296.62,47.25"><head>Table 2 .</head><label>2</label><figDesc>The evaluation of the IR phase for both of the systems.</figDesc><table coords="13,163.50,440.98,296.62,31.04"><row><cell></cell><cell>Precision</cell><cell>Recall</cell><cell>F-measure</cell></row><row><cell>A System</cell><cell>68% (136 questions)</cell><cell>77.72% (150 qs)</cell><cell>72.53%</cell></row><row><cell>B System</cell><cell>64% (128 qs)</cell><cell>79.79% (154 qs)</cell><cell>71.02%</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" coords="14,262.62,362.62,97.34,7.62"><head>Table 3 .</head><label>3</label><figDesc>The official results.</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0" coords="2,148.14,645.63,179.91,7.38"><p>http://trec.nist.gov/pubs/trec15/t15_proceedings.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1" coords="3,148.14,625.71,83.81,7.38"><p>http://lucene.apache.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2" coords="3,148.14,635.67,78.59,7.38"><p>http://ro.wikipedia.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3" coords="3,148.14,645.63,236.81,7.38"><p>Also available online at http://nlp.racai.ro/ for English and Romanian.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4" coords="4,148.44,635.85,320.23,7.38;4,151.26,645.63,146.17,7.38"><p>When more than one rule is applicable at one given time, association scores are used as in the case of content words to select one pairing.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5" coords="13,148.26,632.23,320.48,10.36;13,151.26,642.19,192.26,10.95"><p>Actually, because 0 &lt; P ≤ 1 and S &gt; 1, we replaced P by 10×P to get P in the same range as S.With this setting, the best experimental value of α is 0.4.</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct coords="15,146.40,166.95,322.21,7.38;15,153.90,176.67,314.94,7.38;15,153.90,186.45,215.40,7.38" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="15,270.62,166.95,197.98,7.38;15,153.90,176.67,111.66,7.38">A Combined IR/NLP Approach to Question Answering Against Large Text Collections</title>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Gaizauskas</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">K</forename><surname>Humphreys</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="15,286.77,176.67,182.07,7.38;15,153.90,186.45,85.39,7.38">6th Content-Based Multimedia Information Access Conference (RIAO-2000)</title>
		<meeting><address><addrLine>Paris, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="1288" to="1304" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="15,146.40,196.17,322.22,7.38;15,153.90,205.88,314.89,7.38;15,153.90,215.60,106.00,7.38" xml:id="b1">
	<analytic>
		<title level="a" type="main" coord="15,412.89,196.17,55.73,7.38;15,153.90,205.88,156.47,7.38">Employing Two Question Answering Systems in TREC-2005</title>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Harabagiu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Moldovan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Bowden</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Hickl</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="15,331.43,205.88,133.29,7.38">Text Retrieval Conference (TREC-14)</title>
		<meeting><address><addrLine>Gaithersburg, Maryland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="15,146.41,225.38,322.23,7.38;15,153.90,235.10,314.79,7.38;15,153.90,244.88,269.71,7.38" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="15,243.47,235.10,188.38,7.38">FALCON: Boosting Knowledge for Answer Engines</title>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Harabagiu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Moldovan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Paşca</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Mihalcea</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Surdeanu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Bunescu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Gîrju</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">V</forename><surname>Rus</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Morărescu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="15,453.17,235.10,15.52,7.38;15,153.90,244.88,106.84,7.38">Text Retrieval Conference (TREC-9)</title>
		<meeting><address><addrLine>Gaithersburg, Maryland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="479" to="489" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="15,146.41,254.54,262.20,7.38;15,453.75,254.54,14.99,7.38;15,153.90,264.32,155.59,7.38" xml:id="b3">
	<monogr>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Ion</surname></persName>
		</author>
		<title level="m" coord="15,185.30,254.54,223.30,7.38;15,453.75,254.54,14.99,7.38;15,153.90,264.32,18.34,7.38">Word Sense Disambiguation Methods Applied to English and PhD thesis</title>
		<meeting><address><addrLine>Bucharest</addrLine></address></meeting>
		<imprint>
			<publisher>Romanian Academy</publisher>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="15,146.39,274.04,322.15,7.38;15,153.90,283.82,314.84,7.38;15,153.90,293.54,154.20,7.38" xml:id="b4">
	<analytic>
		<title level="a" type="main" coord="15,266.52,274.04,140.70,7.38">Constrained Lexical Attraction Models</title>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Ion</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">V</forename><surname>Barbu Mititelu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="15,431.55,274.04,37.00,7.38;15,153.90,283.82,259.76,7.38">Nineteenth International Florida Artificial Intelligence Research Society Conference</title>
		<meeting><address><addrLine>Menlo Park, Calif., USA</addrLine></address></meeting>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="297" to="302" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="15,146.41,303.26,322.21,7.38;15,153.90,312.98,273.45,7.38" xml:id="b5">
	<analytic>
		<title level="a" type="main" coord="15,295.35,303.26,173.27,7.38;15,153.90,312.98,15.21,7.38">A Temporally-Enhanced PowerAnswer in TREC 2006</title>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Moldovan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Bowden</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Tatu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="15,186.59,312.98,128.57,7.38">Text Retrieval Conference (TREC-15)</title>
		<meeting><address><addrLine>Gaithersburg, Maryland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="15,146.40,322.76,322.26,7.38;15,153.90,332.48,314.73,7.38;15,153.90,342.26,22.56,7.38" xml:id="b6">
	<analytic>
		<title level="a" type="main" coord="15,363.85,322.76,104.82,7.38;15,153.90,332.48,203.92,7.38">COGEX: A semantically and contextually enriched logic prover for question answering</title>
		<author>
			<persName coords=""><forename type="first">D</forename><forename type="middle">I</forename><surname>Moldovan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><forename type="middle">M</forename><surname>Harabagiu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Hodges</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="15,365.17,332.48,59.90,7.38">J. Applied Logic</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="49" to="69" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="15,146.41,351.92,322.31,7.38;15,153.90,361.70,314.78,7.38;15,153.90,371.42,144.10,7.38" xml:id="b7">
	<analytic>
		<title level="a" type="main" coord="15,153.90,361.70,149.64,7.38">Lasso: A Tool for Surfing the Answer Net</title>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Moldovan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Harabagiu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Paşca</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Mihalcea</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Goodrum</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Gîrju</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">V</forename><surname>Rus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="15,323.07,361.70,127.73,7.38">Text Retrieval Conference (TREC-8)</title>
		<meeting><address><addrLine>Gaithersburg, Maryland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="175" to="184" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="15,146.41,381.20,322.26,7.38;15,153.90,390.92,219.63,7.38" xml:id="b8">
	<monogr>
		<title level="m" type="main" coord="15,213.44,381.20,251.69,7.38">Maximum Entropy Models for Natural Language Ambiguity Resolution</title>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Ratnaparkhi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<pubPlace>Philadelphia, PA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Pennsylvania</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct coords="15,150.26,400.64,318.40,7.38;15,153.90,410.42,223.10,7.38" xml:id="b9">
	<analytic>
		<title level="a" type="main" coord="15,221.90,400.64,208.74,7.38">Overview of the TREC 2005 Question Answering Track</title>
		<author>
			<persName coords=""><forename type="first">E</forename><forename type="middle">M</forename><surname>Voorhees</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="15,453.18,400.64,15.48,7.38;15,153.90,410.42,110.92,7.38">Text Retrieval Conference (TREC-14)</title>
		<meeting><address><addrLine>Gaithersburg, Maryland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="15,150.27,420.14,318.30,7.38;15,153.90,429.92,314.82,7.38;15,153.90,439.58,312.41,7.38" xml:id="b10">
	<analytic>
		<title level="a" type="main" coord="15,341.28,429.92,127.44,7.38;15,153.90,439.58,64.53,7.38">Deductive Question Answering from Multiple Resources</title>
		<author>
			<persName coords=""><forename type="first">R</forename><forename type="middle">J</forename><surname>Waldinger</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><forename type="middle">E</forename><surname>Appelt</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><forename type="middle">L</forename><surname>Dungan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Fry</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><forename type="middle">R</forename><surname>Hobbs</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><forename type="middle">J</forename><surname>Israel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Jarvis</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Riehemann</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><forename type="middle">E</forename><surname>Stickel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Tyson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="15,235.70,439.58,133.97,7.38">New Directions in Question Answering</title>
		<imprint>
			<date type="published" when="2004">2004. 2004</date>
			<biblScope unit="page" from="253" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="15,150.26,449.36,318.36,7.38;15,153.90,459.08,115.51,7.38" xml:id="b11">
	<monogr>
		<title level="m" type="main" coord="15,198.63,449.36,200.01,7.38">Discovery of linguistic relations using lexical attraction</title>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Yuret</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<pubPlace>Cambridge, Massachusetts</pubPlace>
		</imprint>
		<respStmt>
			<orgName>MIT</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
