<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,137.53,115.90,340.31,12.90;1,266.55,133.83,82.15,12.90">Development of a News Recommender System based on Apache Flink</title>
				<funder ref="#_fJ5VtNg">
					<orgName type="full">unknown</orgName>
				</funder>
				<funder ref="#_pujQaBM">
					<orgName type="full">European Union</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName coords="1,210.79,172.11,78.16,8.64"><forename type="first">Alexandru</forename><surname>Ciobanu</surname></persName>
							<email>alexandru.ciobanu@campus.tu-berlin.de</email>
							<affiliation key="aff0">
								<orgName type="institution">Technische Universität Berlin</orgName>
								<address>
									<addrLine>Straße des 17. Juni</addrLine>
									<postCode>D-10625</postCode>
									<settlement>Berlin</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName coords="1,312.78,172.11,87.15,8.64"><forename type="first">Andreas</forename><surname>Lommatzsch</surname></persName>
							<email>andreas@dai-lab.de</email>
							<affiliation key="aff1">
								<orgName type="department">DAI-Labor</orgName>
								<orgName type="institution">Technische Universität Berlin</orgName>
								<address>
									<addrLine>Ernst-Reuter-Platz 7</addrLine>
									<postCode>D-10587</postCode>
									<settlement>Berlin</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,137.53,115.90,340.31,12.90;1,266.55,133.83,82.15,12.90">Development of a News Recommender System based on Apache Flink</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">5A56EAB5F1CB6B39C9D0314B9CBCD511</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-06-26T15:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Apache Flink</term>
					<term>stream analysis</term>
					<term>recommender system</term>
					<term>scalibility</term>
					<term>news recommender</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The amount of data on the web is constantly growing. The separation of relevant from less important information is a challenging task. Due to the huge amount of data available in the World Wide Web, the processing cannot be done manually. Software components are needed that learn the user preferences and support users in finding the relevant information. In this work we present our recommender system tailored for recommending news articles. The developed recommender system continuously analyzes a data-stream using the APACHE FLINK framework, computes recommender models and provides real-time recommendations. The recommendations are optimized on specific news portals and consider the user session. The recommender system analyzes the user-item interactions in real-time and continuously updates the recommender models ensuring that only fresh articles are recommended. We explain the developed architecture of the system and discuss the specific challenges of processing continuous streams. The scalability and the methods for optimizing the parameter configuration are explained. The evaluation in the NEWSREEL Living Lab scenario as well as in the offline evaluation shows that our recommender fulfills the requirements and reaches a good recommendation performance.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="9" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="10" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="11" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="12" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The demand for always being up to date with current events and developments is addressed by the media offering instant publications of the most recent news. The amount of published news articles has steadily grown making it almost impossible for users to read all the published news. Furthermore readers are often interested in a limited set topics or categories. Finding the relevant items in the huge mass of existing items is an issue addressed by recommender systems <ref type="bibr" coords="1,327.73,596.66,10.79,8.64" target="#b5">[6]</ref>. Recommending news articles is a challenging task due to the specific properties of news items: News articles tend to be short-living and expire after few days or weeks. The cost for creating and consuming news is relatively low leading to a high volume of items and a big diversity in consuming news <ref type="bibr" coords="1,158.07,644.48,10.79,8.64" target="#b6">[7]</ref>. Compared to movies or online shops, most news web sites do not require a login, making the exact identification of users almost impossible. The diversity of topics, the variety of usage scenarios, the limited user tracking capabilities and short life cycle of news item are the major challenges that must be addressed when developing powerful algorithms for recommending news.</p><p>News recommender components must be able to handle a huge amount of messages describing the creation and deletion of news articles as well as the interaction between users and items. The amount of data is often represented as a continuous data streams. Due to the steady changes in the user preferences and in the item set, models relying on static sets cannot cover the dynamics of the scenario. Thus recommending suitable articles and analyzing streams are tightly coupled tasks.</p><p>Requirements for News Recommenders A news recommender is a piece of software that helps users finding relevant news articles in the huge amount of available news. Recommender algorithms predict what articles (potentially unknown to a user) match the individual user preferences. The user interests are derived from user ratings and the user behavior, e.g. the interactions of users with items. The decision whether an article is relevant or not is made by an algorithm that suggests the most interesting items to the user.</p><p>Highlighting the most relevant news articles helps users coping with the huge amount of available items. The recommender component computes the potentially most relevant articles. Based on the analysis of the user behavior the recommender adapts to the user preferences and supports users in selecting the relevant items.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Our Contribution</head><p>In this paper, we present a recommender system focusing on the efficient handling of data streams. The APACHE FLINK framework is applied for observes the NewsREEL stream and for creating statistics in real-time. The data is aggregated in a model used for the fast provisioning of recommendations (based on a most-popularalgorithm). The paper researches the influences of parameter configurations on the recommendation quality. Variables (such as considered time frame length) are optimized in the offline evaluation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Structure of the Work</head><p>The remaining work is structured as follows. Section 2 describes the analyzed scenario and the NEWSREEL Challenge in detail. In the third Section, we discuss related work and already existing solutions. Section 4 explains our approach and explains the design of the developed recommender system. The implementation of the system and the influence of different parameter settings on the system's performance are presented in Section 5. Finally, a conclusion and an outlook on future work are given in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Problem Description</head><p>The NEWSREEL <ref type="bibr" coords="2,209.17,608.62,11.85,8.64" target="#b3">[4]</ref> challenge gives researches the possibility to evaluate developed news recommender systems based on real-life data. In the Living Lab scenario (Task 1) recommendations for news articles must be computed for different news portals. In the Offline Scenario (Task 2) the participating teams must provide recommendations for a simulated stream of messages. The structure of the contest is shown in Figure <ref type="figure" coords="2,446.09,656.44,3.74,8.64" target="#fig_0">1</ref>.  The communication between news portals and participants of the competition is coordinated by company PLISTA. PLISTA hosts the API ("ORP") that provides all relevant data and assigns the recommendation requests to the participating teams. Furthermore, PLISTA creates statistics, aggregates the log data, and computes the performance of the team in the Living Lab scenario. In the challenge the participating teams receive information about freshly published news articles and the user-item interactions. In addition, teams receive recommendation requests that must be completed within a tight time limit. The quality of the recommendations is measured based on the Click-Through-Rate (CTR). The CTR describes how many of the provided recommendations have been clicked by users (cf. Figure <ref type="figure" coords="3,245.89,441.00,4.15,8.64" target="#fig_1">2</ref>) <ref type="bibr" coords="3,256.68,441.00,10.58,8.64" target="#b4">[5]</ref>. The developed recommender components must be able handle high request volumes. An answer is expected within 100ms which is characteristic for NEWSREEL as stated by Brodt et al. These requirements introduce limitations that need to be considered in the design of recommender systems. Special attention must be put on efficiency and scalability in order to assure high quality recommendation and to fulfill the technical requirements. Due to the data available in the scenario not all types of recommender algorithms can be applied.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Online News Portal</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>News Article Headline</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Portals / Newspapers</head><note type="other">Users</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Related Work</head><p>We review existing recommender approaches and discuss how these strategies could be used in the analyzed news recommendation scenario.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">News Recommender Algorithms</head><p>Recommender algorithms are software components supporting the users to find items matching the user preferences. Recommender algorithm became popular with growing relevance of e-commerce shops as they help finding interesting products in the long-tail. These recommendation systems can be also applied to news portals. Predicting what news item is interesting for which user is a complex task. Different types of algorithm algorithms have been created to fit the specific characteristics of different scenarios.</p><p>News item rated as interesting by a huge number of users are potentially also relevant to new users. Algorithms focusing on recommending the most popular items have a low computational complexity. This enables the fast and efficient processing of a large number of requests. The weakness of the most popular approach is that the recommendations are not personalized. Since the visitors of news websites might are interested in a wide spectrum of topics, most popular recommender may perform poorly since individual preferences are not taken into account. In many analyzed scenarios, personalized recommender algorithms provide more relevant suggestions optimized to the individual user preferences <ref type="bibr" coords="4,204.87,511.29,10.79,8.64" target="#b2">[3]</ref>. The weakness of personalized recommender algorithms is that they require comprehensive training data. Furthermore, these algorithms usually have a high computational complexity. This can be problematic in web-based scenarios in that the exact identification of users is impossible and strict response time limits for the recommender services exist.</p><p>Recommending news articles requires an approach optimized to the specific requirements of the scenario. The news recommendation scenario differs from scenarios focusing on recommending movies, books or general shopping products regarding the dynamics of the set of items and users and the technical constraints. Said et al. state that characteristic properties of news articles are short relevance period, low consuming costs and wide range of used devices <ref type="bibr" coords="4,291.37,632.53,10.79,8.64" target="#b6">[7]</ref>. Most news websites do not require a user authentication which limits the precision of tracking and creation of preferences for users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">CF-Based Approaches</head><p>Collaborative filtering (CF) is the most frequently used approach for providing personalized recommendations. The idea of CF is that users, who showed a similar taste in the past, will like the same items in the future. The similarity between users is computed based on the user behavior and on ratings. In order to recommend an item to a user A, the system determines the most similar users to A and suggests items the similar users liked. These CF-based algorithms perform well on websites with a big amount of different visitors and many interactions. Big companies such asNETFLIX or AMAZON successfully run CF-based recommender systems.</p><p>Collaborative filtering is usually applied in scenarios characterized by a static set of items. In the analyzed news recommendation scenario the set of items changes continuously requiring frequent model updates. In addition, the computation of one or more entities (neighborhood) with equal preferences is a time consuming task that requires optimized parameter configuration for the similarity function and the size of the analyzed neighborhood. Lommatzsch and Werner <ref type="bibr" coords="5,332.54,294.48,11.44,8.64" target="#b8">[9]</ref> have presented an implementation of item-based collaborative filtering for the NEWSREEL challenge. Their evaluation has shown significant performance differences that depend on news portal and context.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Stream processing Frameworks</head><p>Data on the web is created continuously. In order to capture the most recent events and trends, the data must be processed in real-time. This task can be accomplished by using stream processing frameworks. These libraries provide scalable, distributed architecture and can be accessed using an API. A level of abstraction helps integrating stream analysis into existing applications. APACHE STORM is a common open source framework which brings the MapReduce paradigm to streams. STORM has been developed since 2011 and has reached a mature stage providing several components and extensions. The technical documentation and the tutorials help new users to integrate the framework in new applications.</p><p>APACHE SPARK provides a higher-level API and can be used for both stream and batch-based analysis. The stream component is optional; internally a micro-batching approach is used.</p><p>APACHE FLINK provides functions of both worlds regarding to <ref type="bibr" coords="5,401.11,511.33,10.43,8.64" target="#b7">[8]</ref>. This new framework is optimized for real-time applications. It combines a high-level API for JAVA, SCALA and PYTHON with highly expressive syntax and can be run in cluster or in local mode.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Discussion</head><p>In our scenario the use of APACHE FLINK seems to be most promising since the features of APACHE FLINK match our requirements best. The framework is used to handle the large NEWSREEL message streams to create a model for our recommender system. Most-popular algorithms have been implemented successfully by other participants. These algorithms can be used for efficiently computing predictions relevant to most users. In our work we combine APACHE FLINK and Most-popular algorithms. We study how a FLINK-based recommender system applying most-popular algorithms performs in the NEWSREEL scenario.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Approach</head><p>We develop a recommender system tailored to the specific requirements of the NEWS-REEL challenge. Our system architecture is optimized for the efficient handling of huge message streams and the continuous adaptation of recommender models. The continuous model updates ensure that only fresh news articles, requested most in the last minutes are recommended. We implement a most popular algorithm; the implementation is build based on APACHE FLINK in order to ensure that huge message streams are efficiently processed. The use of FLINK ensures the scalability and simplifies the distribution of the system over several machines. We use a highly modular system architecture (Figure <ref type="figure" coords="6,471.54,265.79,3.60,8.64">3</ref>). The system consists of four components: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Endpoint</head><p>The http endpoint receives the NEWSREEL messages from PLISTA. Messages describe user-item interactions and provide data about freshly published news. The messages are formatted in JSON; the data is sent via HTTP post messages <ref type="bibr" coords="7,370.97,119.31,10.37,8.64" target="#b1">[2]</ref>. A Java-based webserver handles the incoming messages. Based on the message type the received data is either forwarded to the FLINK-based component (that keeps the models up-to-date) or to the component that computes the recommendation results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Flink Processing</head><p>This component is responsible for reading and analyzing the data stream. It is designed to be efficient and scalable through load distribution on multiple cores or machines. FLINK observes the stream and aggregates the information applying a window-based approach. The model only incorporates the most recent items; old items are discarded and treated as outdated. This ensures that the models always describe the most recent items and interactions on the relevant news websites. APACHE FLINK is used to aggregate the data of every domain ("publisher") and category, which are then transformed into descriptive models (used by the component that provides the results). The stream processing runs completely decoupled from all other processes. This design pattern allows us running time consuming operations without violating the 100ms response time constraint for requests. The separate handling of requests and the real-time analysis of the impression processing ensures the scalability as well as continuous updates of the recommender models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Recommender Models</head><p>The separation of recommender algorithms and model creation requires communication between the two components. We implement the data exchange based on a data pool used for storing the commonly needed data. Our model stores the statistics as well-structured tuples optimized for relational databases. The database is connected to the FLINK output stream and stores all the aggregated information. For our recommendation algorithms, the portals, the categories, the articles as well as the number of views within the current time frame are stored. This model can be used to answer the following question: "What are the most popular articles within the last minutes in a specific category of a given website?".</p><p>For the recommender system, we decided to use a MYSQL database. MYSQL is an open source database server, supporting indexing and the concurrent access (which is required due to concurrency in the system). MYSQL has a big potential of horizontal scaling using master-slave replication. It is widely integrated in most common programming languages such as JAVA <ref type="bibr" coords="7,255.92,549.13,10.72,8.64" target="#b0">[1]</ref>. It runs on a big variety of platforms and answers all required queries within a small time frame. The recommender can also benefit from the transparent query cache. Since we do not provide personalized recommendations, the cache speeds up the query handling a lot; most requests can be answered based on cached results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Result Creation</head><p>The recommendations are computed by a separate component. This component communicates with the database and loads batches of statistics. Due to the distributed writes of APACHE FLINK the upper and lower bounds of a time window need to be detected. A system-wide identifier for every period cannot be set since no system-wide clock is available. The detection of the intervals can be done by comparing timestamps of two successive rows. Due to the fact that writes are very fast, the differences are a few seconds in maximum. Whenever a bigger gap is detected, a new time window is assumed. The decoupling of stream processing and the creation of recommendation results raises another problem: It is impossible to determine whether the currently running write operations have been finished and whether the statistics in the database are complete. We solve this issue by using the previously mentioned interval detection. The implemented strategy ensures that always the most recent, completely written model is used. This solution introduces a delay which is acceptable in our scenario.</p><p>The central step for computing the recommendations is the computation of the most popular news items based on the statistics (created by the FLINK-based component). The required sorting and filtering of the data is efficiently done by the database, since databases are optimized for these operations. SQL queries allow us to write compact, human readable code that is fast and reliably execute by the database server.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Evaluation</head><p>The implemented recommender has been evaluated in Task 2 (offline evaluation) of the NEWSREEL challenge. Our analysis focuses on the recommendation accuracy as well as on technical aspects, such as response time and scalability. We study how different parameter configurations influence the evaluation results as well as discuss strengths and weaknesses of our approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Efficient, Reproducible CTR Optimization</head><p>We optimize the parameter configuration of our recommender the NEWSREEL offline evaluation scenario. The offline evaluation environment allows us to analyze different parameter settings concurrently in a reproducible way. In contrast to the online evaluation environment characterized by a high variance in the number of messages, the offline scenario offers a reliably, high volume message stream. The offline evaluation components allow us re-playing the data stream previously recorded in the online scenario. The re-played streams contain exactly the same messages (as the stream at the recorded day); the order of messages is preserved; but the stream is re-played faster in order to speed-up the evaluation. In our evaluation, we use the data collected at May 12th, 2016. Several of the system's configurations have been additionally tested using the data collected at May 15th. In the evaluation we consider only messages from the sport1 domain due to the very small number of requests for the other publishers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Impact of Time Window Size</head><p>We analyze the influence of the window size used by APACHE FLINK for building the recommendation model. We evaluate the recommendation performance for the following window sizes t = 600s, 300s, 180s and 60s. In the evaluation we simulate a load level of 1,000 concurrent requests. In the online scenario the amount of information is lower because the NEWSREEL participants receive only a small fraction of the traffic. However, this setup represents the productive system load better. The measured CTR dependent from the window size (used by APACHE FLINK) is shown in Figure <ref type="figure" coords="9,202.84,412.87,3.66,8.64" target="#fig_3">4</ref>). The Figure shows, that no direct correlation exists. This indicates that the impact of window size on the prediction quality is low. The system reaches an offline CTR of 1.3% using a window size as short as 30 seconds.</p><p>Impact of the Re-calculation Interval A challenge in the NEWSREEL scenario is the continuous changes in the user preferences and in the set news items. Thus, the recommender must continuously discard outdated items and compute the relevance of freshly added items. In order to address this challenge, we periodically re-compute our recommender model using APACHE FLINK. We study the impact of the re-calculating interval on the model. Short re-calculation intervals allow the recommender to following trends quickly keeping the model very close to the most recent data in the stream. The disadvantage of short re-calculation intervals consists in a big number write operations (in the database) resulting in a high load on the database. Long re-calculation intervals cause a smaller database load due to smaller number of write operations and smaller updates in the database caches.</p><p>We evaluate the influence of different model update intervals p on the recommender performance.</p><p>The evaluation (cf. Figure <ref type="figure" coords="9,253.31,620.57,4.88,8.64" target="#fig_4">5</ref> shows that refreshing the model every couple of minutes works well for ensuring a good recommendation quality (in high load scenarios). Shorter re-calculation periods reduce the recommendation precision and increase the system load. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Evaluation of Technical Aspects</head><p>In the offline evaluation we analyzed the handling of 1,000 concurrent requests. The number of concurrent requests is much higher than the typical number of concurrent requests in the Living Lab ("online") scenario but the high load allows us to maximize the throughput of the recommender. Due to the high number of concurrent requests in the offline evaluation, only a small fraction of requests is handled within the 100ms limit as shown in Figure <ref type="figure" coords="10,212.55,429.07,3.74,8.64" target="#fig_5">6</ref>. The architecture of our system decouples the computation of recommendations and the building of recommender models. This has several advantages. In extreme load peaks, we can apply sub-sampling in order to reduce the effort for building the model. Since the number of requests is small compared with the number of impression messages, a sub-sampling based on the stream of impression data allows us to use the available resources for handling the recommendation requests. Recommendation requests are typically processed very fast since the results have been pre-computed in the model.</p><p>Based on our experiences, the bottlenecks in the systems seem to be the used webserver and the database server. In the online evaluation our recommender reached a low error rate. This shows that our recommender reliably handles the number of messages in the online evaluation scenario. In extensive tests we observed on several days that APACHE FLINK stopped writing to the output stream. In order to handle this case, we implemented an observer component that restarts the component in the case of an error.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Discussion</head><p>The evaluation results show that our system reaches the best prediction performance when it updates the recommendation model every few minutes (in the offline scenario). Using time windows of less than half of a minute does not result in a significant CTR improvement. The architecture of our recommender systems ensures that huge message streams can be efficiently handled. This is shown by a low error rate in the online evaluation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion and Future Work</head><p>In this work we presented a recommender system implemented based on APACHE FLINK tailored to the news recommendation scenario. The evaluation results show that our system performs well in the contest. The implemented system continuously updating the recommender models is a suitable approach for the efficient processing of message streams. The APACHE FLINK API provides a good abstraction and simplifies the development and adaptation of the recommender algorithms. The decoupling of the model building and the provisioning of recommendations ensures that sophisticated data analysis algorithms can be implemented ensuring that the tight response time constraints are reliably fulfilled.</p><p>Our recommender system uses a most popular item model. The model is robust against noisy userIDs and fast changes in the set of news items. The evaluation shows that the recommender reaches a competitive CTR. Our system computes the popularity separately for every domain. The approach can be refined by calculating the most popular models for every category (using the categorization provided in the message meta-data). Further optimization can be reached by adapting the size of the window used for re-calculating the model and by learning the best fitting interval for retraining.</p><p>The evaluation with respect to technical aspects showed that our system is highly scalable. The use of APACHE FLINK allows us to distribute the system over multiple machines. The integration of additional machines enables us to concurrently compute the model on several different machines ensuring the scalability of the system.</p><p>As future work, we plan to analyze trend extrapolation approaches. Based on the most recent most popular items and the trends, we want to predict the items most popular in the near future. We plan to examine the influence of context parameters for evolution of trending items. In addition we plan to investigate approaches for dynamically identifying topics and analyze recommender algorithms based on trending topics.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="3,143.55,283.53,328.25,7.77"><head>Fig. 1 :</head><label>1</label><figDesc>Fig. 1: The figure visualizes the placement of recommendations on the online news portals.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="3,134.77,609.96,345.83,7.77;3,134.44,620.92,347.72,7.77;3,134.49,631.88,347.23,7.77;3,134.77,642.84,345.83,7.77;3,134.77,653.80,113.31,7.77"><head>Fig. 2 :</head><label>2</label><figDesc>Fig. 2: The figure visualizes the architecture of the NEWSREEL challenge. When a user visits a web portal participating in the challenge, an recommendation request is sent to a registered team. The recommendations are embedded into the web page. If the user clicks on the recommendation, the team is rewarded. In addition to the online evaluation NEWSREEL offers an offline task based on a simulated message stream.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="6,214.29,575.65,186.77,7.77"><head>1 .Fig. 3 :</head><label>13</label><figDesc>Fig. 3: The figure visualizes the system architecture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3" coords="9,134.77,352.93,345.82,7.77;9,134.77,363.89,204.96,7.77"><head>Fig. 4 :</head><label>4</label><figDesc>Fig. 4: The figure visualizes the offline CTR dependent on the window size. The graph shows that there is clear relation between the window size and CTR.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4" coords="10,134.77,304.90,345.82,7.77;10,134.77,315.86,57.78,7.77"><head>Fig. 5 :</head><label>5</label><figDesc>Fig. 5: The figure visualizes the impact of different recalculation intervals. Higher intervals lead to a better CTR.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5" coords="11,152.39,320.07,310.58,7.77"><head>Fig. 6 :</head><label>6</label><figDesc>Fig. 6: The chart shows the processing time for different recommender configurations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" coords="3,231.99,192.89,141.66,67.76"><head>magnis dis Recommendation #1 Recommended Article Headline Recommendation #2 Recommended Article Headline Recommendation #3 Recommended Article Headline Recommendation #4 Recommended Article Headline</head><label></label><figDesc>Article text Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, Actract Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et</figDesc><table /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div><head>Acknowledgments</head><p>The research leading to these results was performed in the CrowdRec project, which has received funding from the <rs type="funder">European Union</rs> <rs type="programName">Seventh Framework Programme</rs> <rs type="grantNumber">FP7/2007-2013</rs> under grant agreement No. <rs type="grantNumber">610594</rs>.</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_pujQaBM">
					<idno type="grant-number">FP7/2007-2013</idno>
					<orgName type="program" subtype="full">Seventh Framework Programme</orgName>
				</org>
				<org type="funding" xml:id="_fJ5VtNg">
					<idno type="grant-number">610594</idno>
				</org>
			</listOrg>
			<div type="references">

				<listBibl>

<biblStruct coords="12,138.13,334.53,336.17,7.93" xml:id="b0">
	<monogr>
		<title level="m" type="main" coord="12,255.60,334.53,93.21,7.73">High Performance MySQL</title>
		<author>
			<persName coords=""><forename type="first">D</forename><forename type="middle">J</forename><surname>Balling</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Zawodny</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>Safari Tech Books Online</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.13,345.65,342.46,7.77;12,146.47,356.45,334.12,7.93;12,146.25,367.41,148.57,7.93" xml:id="b1">
	<analytic>
		<title level="a" type="main" coord="12,256.54,345.65,224.05,7.77;12,146.47,356.61,94.80,7.77">Shedding light on a living lab: the CLEF NEWSREEL open recommendation platform</title>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Brodt</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Hopfgartner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="12,262.58,356.45,218.02,7.73;12,146.25,367.41,38.77,7.73">Proceedings of the 5th Information Interaction in Context Symposium</title>
		<meeting>the 5th Information Interaction in Context Symposium</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="223" to="226" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.13,378.53,342.62,7.77;12,146.47,389.32,284.89,7.93" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="12,271.27,378.53,209.47,7.77;12,146.47,389.49,81.13,7.77">Empfehlungssysteme aus informationswissenschaftlicher Sicht -State of the Art</title>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Hohfeld</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Kwiatkowski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="12,234.38,389.32,131.08,7.73">Information Wissenschaft und Praxis</title>
		<imprint>
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page">265</biblScope>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.13,400.44,342.46,7.77;12,146.15,411.24,334.44,7.93;12,145.92,422.20,122.34,7.93" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="12,186.57,411.40,264.60,7.77">Benchmarking News Recommendations: The CLEF NewsREEL Use Case</title>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Hopfgartner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Brodt</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Seiler</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Kille</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Lommatzsch</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Larson</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Turrin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Serény</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="12,458.32,411.24,22.27,7.73;12,145.92,422.20,21.42,7.73">SIGIR Forum</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="129" to="136" />
			<date type="published" when="2016-01">Jan. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.13,433.32,342.90,7.77;12,146.47,444.12,334.12,7.93;12,146.18,455.08,217.32,7.93" xml:id="b4">
	<analytic>
		<title level="a" type="main" coord="12,432.26,433.32,48.77,7.77;12,146.47,444.28,210.43,7.77">NEWSREEL 2014: Summary of the news recommendation evaluation lab</title>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Kille</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Brodt</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Heintz</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Hopfgartner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Lommatzsch</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Seiler</surname></persName>
		</author>
		<idno>nbn:de:0074-1180-0</idno>
	</analytic>
	<monogr>
		<title level="m" coord="12,372.85,444.12,107.74,7.73;12,146.18,455.08,39.31,7.73">Working Notes for CLEF 2014 Conference</title>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="790" to="801" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.13,466.04,343.59,7.93;12,145.80,477.16,20.17,7.77" xml:id="b5">
	<analytic>
		<title level="a" type="main" coord="12,246.23,466.20,79.28,7.77">Recommender systems</title>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Resnick</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><forename type="middle">R</forename><surname>Varian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="12,331.44,466.04,97.76,7.73">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="56" to="58" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.13,488.12,343.96,7.77;12,146.47,498.91,334.12,7.93;12,146.47,509.87,330.50,7.93" xml:id="b6">
	<analytic>
		<title level="a" type="main" coord="12,310.46,488.12,171.62,7.77;12,146.47,499.07,61.40,7.77">Do recommendations matter?: news recommendation in real life</title>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Said</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Bellogín</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>De Vries</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="12,223.73,498.91,256.86,7.73;12,146.47,509.87,221.00,7.73">Proceedings of the companion publication of the 17th ACM conference on Computer supported cooperative work &amp; social computing</title>
		<meeting>the companion publication of the 17th ACM conference on Computer supported cooperative work &amp; social computing</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="237" to="240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.13,520.99,342.62,7.77;12,146.47,531.95,220.45,7.77" xml:id="b7">
	<monogr>
		<title level="m" type="main" coord="12,363.56,520.99,117.18,7.77;12,146.47,531.95,193.37,7.77">Die Apache Flink Plattform zur parallelen Analyse von Datenströmen und Stapeldaten</title>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Traub</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Rabl</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Hueske</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Rohrmann</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">V</forename><surname>Markl</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="12,138.13,542.91,343.95,7.77;12,146.47,553.71,335.69,7.93;12,146.47,564.83,89.91,7.77" xml:id="b8">
	<analytic>
		<title level="a" type="main" coord="12,263.39,542.91,218.68,7.77;12,146.47,553.87,66.04,7.77">Optimizing and Evaluating Stream-based News Recommendation Algorithms</title>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Werner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Lommatzsch</surname></persName>
		</author>
		<idno>nbn:de:0074-1180-0</idno>
	</analytic>
	<monogr>
		<title level="m" coord="12,233.72,553.71,159.05,7.73">Working Notes for CLEF 2014 Conference</title>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="813" to="824" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
