<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,180.30,74.83,234.73,12.19">A Trainable Multi-factored QA System</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName coords="1,102.54,101.13,35.52,8.74"><forename type="first">Radu</forename><surname>Ion</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Research Institute for Artificial Intelligence Academy</orgName>
								<address>
									<addrLine>Romanian, 13, Calea 13 Septembrie</addrLine>
									<postCode>050711</postCode>
									<settlement>Bucharest</settlement>
									<country key="RO">Romania</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName coords="1,144.46,101.13,60.82,8.74"><forename type="first">Dan</forename><surname>Ştefănescu</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Research Institute for Artificial Intelligence Academy</orgName>
								<address>
									<addrLine>Romanian, 13, Calea 13 Septembrie</addrLine>
									<postCode>050711</postCode>
									<settlement>Bucharest</settlement>
									<country key="RO">Romania</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName coords="1,211.96,101.13,72.11,8.74"><forename type="first">Alexandru</forename><surname>Ceauşu</surname></persName>
							<email>aceausu@racai.ro</email>
							<affiliation key="aff0">
								<orgName type="institution">Research Institute for Artificial Intelligence Academy</orgName>
								<address>
									<addrLine>Romanian, 13, Calea 13 Septembrie</addrLine>
									<postCode>050711</postCode>
									<settlement>Bucharest</settlement>
									<country key="RO">Romania</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName coords="1,291.12,101.13,38.83,8.74"><forename type="first">Dan</forename><surname>Tufiş</surname></persName>
							<email>tufis@racai.ro</email>
							<affiliation key="aff0">
								<orgName type="institution">Research Institute for Artificial Intelligence Academy</orgName>
								<address>
									<addrLine>Romanian, 13, Calea 13 Septembrie</addrLine>
									<postCode>050711</postCode>
									<settlement>Bucharest</settlement>
									<country key="RO">Romania</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName coords="1,336.39,101.13,48.30,8.74"><forename type="first">Elena</forename><surname>Irimia</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Research Institute for Artificial Intelligence Academy</orgName>
								<address>
									<addrLine>Romanian, 13, Calea 13 Septembrie</addrLine>
									<postCode>050711</postCode>
									<settlement>Bucharest</settlement>
									<country key="RO">Romania</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName coords="1,391.03,101.13,101.99,8.74"><forename type="first">Verginica</forename><surname>Barbu-Mititelu</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Research Institute for Artificial Intelligence Academy</orgName>
								<address>
									<addrLine>Romanian, 13, Calea 13 Septembrie</addrLine>
									<postCode>050711</postCode>
									<settlement>Bucharest</settlement>
									<country key="RO">Romania</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,180.30,74.83,234.73,12.19">A Trainable Multi-factored QA System</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">4262F3E46BDAAF56C553BC006C93EBEF</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-06-26T15:22+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>ACM Categories and Subject Descriptors: H.3.1 Content Analysis and Indexing -Indexing Methods</term>
					<term>H.3.1 Content Analysis and Indexing -Linguistic Processing</term>
					<term>H.3.3 Information Search and Retrieval -Query formulation</term>
					<term>H.3.3 Information Search and Retrieval -Search process</term>
					<term>H.3.3 Information Search and Retrieval -Selection process</term>
					<term>H.3.5 On-line Information Services -Web-based services</term>
					<term>I.2.7 Natural Language Processing - Question Answering</term>
					<term>question analysis</term>
					<term>query formulation</term>
					<term>search engine</term>
					<term>paragraph selection</term>
					<term>paragraph ranking</term>
					<term>lexical chains</term>
					<term>MERT</term>
					<term>web services</term>
					<term>workflow</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper reports on the construction and testing of a new Question Answering (QA) system, implemented as an workflow which builds on several web services developed at the Research Institute for Artificial Intelligence (RACAI).The evaluation of the system has been independently done by the organizers of the Romanian-Romanian task of the ResPubliQA 2009 exercise. We further describe a principled way of combining different relevance factors used for computing a general score, based on which are returned the paragraphs which are most likely to contain the correct answers to the asked questions. The system was trained on a specific parallel corpus, but its functionality is independent on the linguistic register of the training data. The trained QA system which participated in the ResPubliQA shared task is available as a new web service on the RACAI's web-services page.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="9" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="10" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="11" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="12" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="13" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="14" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>This year's ResPubliQA (a subtask of QA@CLEF, website at http://celct.isti.cnr.it/ResPubliQA/) challenge mounted a fresh start up compared to past editions. Instead of searching Wikipedia for the exact minimal answers to the questions, this time the organizers decided on an easier evaluation task, namely that of finding a paragraph of text that contains the answer to a question relevant for the underlying corpus. The corpus of choice is the body of EU legislation, namely a subset of JRC-Acquis (http://wt.jrc.it/lt/Acquis/) that has parallel translations aligned at the paragraph level in Bulgarian, Dutch, English, French, German, Italian, Portuguese, Romanian and Spanish. The organizers went to great lengths to prepare a test bed in which all the participating systems can be objectively evaluated and, very important, compared to each other.</p><p>Research Institute for Artificial Intelligence (RACAI) participated in this year's Romanian-Romanian ResPubliQA exercise following a methodology that we developed for the last year's system <ref type="bibr" coords="1,452.30,517.35,67.99,8.74" target="#b1">(Ion et al., 2008)</ref>. Given the requirement specifications for the ResPubliQA exercise we focused on the further development of the last year's snippet<ref type="foot" coords="1,143.22,538.21,3.24,5.65" target="#foot_0">1</ref> selection and ranking module. The most important design decision that we made this year is a MERT-inspired 2 optimization <ref type="bibr" coords="1,193.24,551.85,48.46,8.74" target="#b6">(Och, 2003)</ref> of the snippet ranking using a linear combination of snippet relevance (to the user's question) scores.</p><p>The philosophy of our QA system has not changed: it's a collection of (classical) operations most of which are implemented as Semantic Web services distributed across our internal network. Each operation in the QA module just performs some sort of data formatting between the various input formats the web services support. More specifically, the system is composed of the following web services:</p><p>• question preprocessing which is achieved by the TTL web service whose WSDL file is located at http://ws.racai.ro/ttlws.wsdl. In this phase we also classify the input question by calling another web service located at http://shadow.racai.ro/JRCACQCWebService/Service.asmx?WSDL; • query generation from the preprocessed question; there are two different algorithms for generating queries one of which is located at http://shadow.racai.ro/QADWebService/Service.asmx?WSDL and the other one is embedded into the system (with the near-term plan to externalize it);</p><p>• search engine querying which is another web service with its description file at http://www.racai.ro/webservices/search.asmx?WSDL; • paragraph ranking that collects the results from the search engine in the form of a list of relevant paragraphs, computes additional paragraph relevance scores for each paragraph in this list and then linearly combines these scores using a set of MERT-derived weights for each score. The highest scored paragraph will be returned to the user. Looking back the at the QA track of the Text Analysis Conference in 2008 <ref type="bibr" coords="2,425.34,143.91,46.61,8.74">(TAC 2008</ref>, website at http://www.nist.gov/tac/) we see that the statistical component of both document scoring and answer extraction is back in business as in IBM's statistical QA systems in TREC-9 <ref type="bibr" coords="2,346.36,166.95,99.48,8.74" target="#b3">(Ittycheriah et al., 2000)</ref> and onwards. This means that, although the QA systems are still very complicated (being basically complex architectures of IR and NLP modules), there are efforts of reducing this complexity in the favor of developing trainable and principled QA systems. For instance, <ref type="bibr" coords="2,180.58,201.45,71.47,8.74" target="#b0">Heie et al. (2008)</ref> use a language model based approach to sentence retrieval for QA in which every sentence is scored according to the probability P(Q|S) of generating a specific query Q (a set of terms) for the respective answer sentence S (also a set of terms). It also is the case that using a linear combination of different relevance measures (probabilities or simply scores) to provide a unique relevance measure of the sentence or paragraph is the de facto choice in recent QA systems <ref type="bibr" coords="2,341.40,247.41,95.96,8.74">(Heie et al., 2008 eq. 3;</ref><ref type="bibr" coords="2,440.23,247.41,84.39,8.74;2,70.92,258.93,22.20,8.74">Wiegand et al., 2008 eq. 2)</ref>. In what follows, we will present our QA system that makes use of a MERT-like optimization of a linear combination or paragraph relevance scores in order to obtain the paragraph containing the correct answer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Corpus Preprocessing</head><p>The corpus to be indexed is a subset of the JRC-Acquis comprising of 10714 documents conforming to the TEI format specifications (http://www.tei-c.org/Guidelines/). That is, roughly, every document has a preamble describing the source of the text along with some other administrative information and a body formed of title, body and annexes<ref type="foot" coords="2,144.66,351.07,3.24,5.65" target="#foot_1">3</ref> . We only took the body of the document into consideration when extracting the text to be indexed. The body part of one JRC-Acquis document is divided into paragraphs, the unit of text that is required by the ResPubliQA task to be returned as the answer to the user's question.</p><p>The text has been preprocessed by TTL and LexPar <ref type="bibr" coords="2,305.18,387.69,78.31,8.74" target="#b8">(Tufiş et al., 2008)</ref> to achieve the XML format from Figure <ref type="figure" coords="2,103.47,399.21,3.77,8.74" target="#fig_0">1</ref>. We performed word segmentation with EUROVOC terminology identification (see the next subsection), POS tagging, lemmatization and dependency linking (although we did not use it in the end). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Paragraph classification</head><p>The specifications for the ResPubliQA task defines five possible types of questions: "factoid", "definition", "procedure", "reason" and "purpose". One of the requirements of the QA task is that the answers are to be found in a single paragraph. This requirement and the weak assumption that a paragraph can only answer to one type of question made possible the classification of the paragraphs based on the expected answer type. By labeling the paragraphs with the type of the expected answer we reduced the complexity of the IR problem: given a query, if the query type is correctly identified, the answer is searched through only a portion of the full corpus.</p><p>Our approach to paragraph classification is similar to the classification task of sentence selection for summary generation <ref type="bibr" coords="3,158.20,188.49,86.19,8.74" target="#b4">(Kupiec et al., 1995;</ref><ref type="bibr" coords="3,248.27,188.49,49.08,8.74" target="#b5">Luhn, 1959)</ref>. The classification problem in summary generation is reduced to a function that estimates the probability for a given sentence in a document to be part of the document extract. The features used for summary sentence selection are mainly based on keyword frequencies, sentence length and location.</p><p>There are two main differences between the task of paragraph classification and the task of sentence selection for summary generation. The differences are the numbers of classes required for classification and the entities subject to classification. We have five classes and use paragraphs as entities to be classified. The entities considered for the summarization task are the sentences and the classification has only two classes: the sentence is included in the abstract or not. Should the extracted candidates be labeled with classes denoting their role in the rhetorical structure of the document, the summarization task, certainly, will not have only two classes.</p><p>The classes used by our paragraph classifier slightly differ from the query types prescribed by the ResPubliQA task specifications. The classes "reason" and "purpose" were merged into a single one because we found that it is very difficult to automatically disambiguate between them for paragraph classification. To improve the precision of paragraph retrieval we added another class: "delete". This class was used to identify the paragraphs that should not be returned as answer candidates. Among these paragraphs are the titles (for example, "Article 5"), signatures, parts of tables, etc.</p><p>To train the paragraph classifier we prepared a collection of around 800 labeled paragraphs. The paragraphs were extracted from the Romanian part of the ResPubliQA corpus. Each paragraph is labeled with one of the classes: "factoid", "definition", "procedure", "reason-purpose" and "delete". We used 89 labeled paragraphs (unseen during the training phase) to test the precision of the classifier. The paragraphs in the training and test set are not equally distributed among the five classes and their distribution is not the same as in the corpus: we added more paragraphs in the training data for the classes that were more difficult to classify.</p><p>We used maximum entropy for paragraph classification. For feature selection we differentiated between clue words, morpho-syntactical, punctuation, orthographical and sentence length related features.</p><p>The features are generated for each sentence in the paragraph. To detect the clue words, the classifier takes the first five tokens as features. As morpho-syntactical features, the classifier takes into consideration the morpho-syntactical description of the main verb and whether the sentence has a proper noun or not. As punctuation features are the number of commas, the number of quotes and the final punctuation mark. Another important feature is the number of initial upper cased words. For length related features the classifier uses the length of each sentence and the length of the paragraph (in sentences).</p><p>In the classification task of sentence selection for summary generation there is a location feature that accounts for the position of the sentence in the document. For example, if the sentence is in the introduction or in the conclusion it has a high probability of being included in the extract. We did not use the location feature because we it is very difficult to detect the structure of the documents in the ResPubliQA corpus.</p><p>The raw evaluation of the classifier precision for each class is presented in Table <ref type="table" coords="3,420.74,579.44,3.75,8.74" target="#tab_0">1</ref>. Although the precision evaluation of the classifier on a test set of only 89 examples has limited statistical confidence, we noticed a considerable increase in search engine precision if the paragraph candidates are filtered using their assigned label. One reasonable explanation is that even when the classification is wrong, both the relevant paragraph and the question have a good chance to be identically labeled. Without filtering the paragraphs by their label it is possible for the answering paragraph not to be among the first 50 search engine hits (this is the number we retain for the further processing </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Terminology Identification</head><p>The JRC-Acquis documents are manually classified using the EUROVOC thesaurus (http://europa.eu/eurovoc/) that has more than 6000 terms hierarchically organized. The version EUROVOC version 4.3 is available for the official 22 UE languages plus Croatian. The EUROVOC thesaurus terms fall into two categories: descriptors and non-descriptors mutually related by means of semantic relationships:</p><p>• descriptors, i.e. words or expressions which denote in unambiguous fashion the constituent concepts of the field covered by the thesaurus (e.g. implementation of the law); • non-descriptors, i.e. words or expressions which in natural language denote the same concept as a descriptor (e.g. application of the law) or equivalent concepts (e.g. enforcement of the law, validity of a law) or concepts regarded as equivalent in the language of the thesaurus (e.g. banana, tropical fruit); • semantic relationships, i.e. relationships based on meaning, firstly between descriptors and non-descriptors and secondly between descriptors.</p><p>The descriptors are organized in 21 top domains (from politics and international relations to ecology, industry or geography) that are represented by micro-thesauri. There are 519 micro-thesauri in which the descriptors are hierarchically organized. The domains and the descriptors have unique identifiers, language independent, through which the multilingual inter-relations can be derived. The English version has 6645 descriptors and the Romanian one has only 4625 descriptors (roughly 70% of the English EUROVOC).</p><p>Considering the fact that the technical terms occurring in the JRC-Acquis were supposed to be translated using the EUROVOC terms, the term list of our tokenizer was extended so that these terms be later recognized. If a term is identified it would count as a single lexical token, As prerequisites for EUROVOC terms identification we had the corpus tokenized, morpho-syntactically annotated, and lemmatized. There were five steps for terminology identification and updating of the language resources backing up our processing tools: 1. The occurrences of the EUROVOC terms were selected from the corpus. In this step only the terms that had the exact occurrence form as the listed EUROVOC term were selected. 2. An inventory of lemma sequence was extracted for each occurrence form. 3. All the occurrences of the lemma sequences were extracted from the corpus. 4. The terms were normalized to their original orthography (mainly case and hyphenation normalization). 5. For each term occurrence was selected a single morpho-syntactical description. Given the fact that most of the terms are noun phrases, the morpho-syntactical description of the head noun was chosen. 6. Each occurrence of the terms received as lemma the EUROVOC descriptor. For example, the term "adunare parlamentară" ("parliamentary assembly") occurred under the inflected forms "adunarea parlamentară" ("the parliamentary assembly"), "adunările parlamentare" ("the parliamentary assemblies"), "adunărilor parlamentare" ("of/to the parliamentary assemblies"). For these occurrences we used as lemma the listed form of the EUROVOC term that is "adunare parlamentară" ("parliamentary assembly") and used the morpho-syntactical description of the head noun "adunare" ("assembly") as the morpho-syntactical description for the occurrence of the term.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">The QA system</head><p>As already stated, the RACAI's QA system is practically a workflow built on top of our NLP web services, retaining as non web service code parts only those sections that have been newly added. It's a trainable system that uses a linear combination of paragraph relevance scores S(p) to obtain a global relevance (to the question) measure which will be used as the sort key:</p><formula xml:id="formula_0" coords="4,238.86,629.97,285.73,28.30">1 , ) ( = = ∑ ∑ i i i i i s p S λ λ (1)</formula><p>where i s is one of the following measures (</p><formula xml:id="formula_1" coords="4,249.42,654.79,46.14,21.00">[ ] 1 , 0 ∈ i s ):</formula><p>1. an indicator function that is 1 if the question classification is the same as the paragraph classification (let's call this score 1 s ). We have developed a question classifier that assigns one of the 8 classes (see Section 5)</p><p>to the input question. Since the paragraph and question classifier have been developed independently, each with its own particularities dictated by the types of text to be classified (questions vs. paragraphs) and performance considerations, we needed a way to map the class of the question onto the class of the paragraph. Table <ref type="table" coords="5,160.14,76.35,5.01,8.74" target="#tab_1">2</ref> contains the mapping from question classes to paragraph classes. Thus, 1 s is simply 1 if the guessed class of the question is identical (via the map in Table <ref type="table" coords="5,359.25,90.51,4.16,8.74" target="#tab_1">2</ref>) to that of the candidate paragraph or 0 otherwise; 2. a lexical chains based score computed between lemmas of the candidate paragraph and lemmas of the question ( 2 s ).</p><p>3. a BLEU-like <ref type="bibr" coords="5,146.86,141.99,94.57,8.74" target="#b7">(Papineni et al., 2002)</ref>  When the QA system receives an input question, it first calls the TTL web service to obtain POS tagging, lemmatization and chunking (see Figure <ref type="figure" coords="5,239.79,360.99,5.01,8.74" target="#fig_0">1</ref> for a depiction of the annotation detail). Then, it calls the question classifier (Section 5) to learn the question class after which two types of queries are computed. Both queries may contain the question class as a search term to be matched with the class of candidate paragraphs. The search engine will return two lists L 1 and L 2 of at most 50 paragraphs that will be sorted according to the eq. 1. The answer is a paragraph p from both L 1 and L 2 for which 50</p><formula xml:id="formula_2" coords="5,70.92,416.82,453.70,42.55">, ) ( , ) ( , ) ( ) ( min arg 2 1 2 1 ≤ ≤ ≤ - K K p rank K p rank p rank p rank p (2) where ) ( 1 p rank is the rank of paragraph p in L 1 and ) ( 2 p rank</formula><p>is the rank of paragraph p in L 2 and |x| is the absolute value function. Experimenting with different values for K on our 200 questions test set, we determined that the best value for K is 3. When such a common paragraph does not exist, the system returns the NOA string.</p><p>Our QA system is trainable in the sense that the weights ( i λ ) that we use to combine our paragraph relevance scores are obtained through a MERT-like optimization technique. Since the development question set comprised of only 20 questions, we proceeded to the enlargement of this test set (having the 20 questions as examples). We produced another 180 questions to obtain a new development set of 200 questions simply by randomly selecting documents from the JRC-Acquis corpus and reading them. For each question we provided the paragraph ID of the paragraph that contained the right answer and the question class (one of the classes described in Section 5).</p><p>The training procedure consisted of: 1. running the QA system on these 200 questions and retaining the first 50 paragraphs for each question according to the paragraph score given by the search engine ( 4 s );</p><p>2. obtaining for each paragraph the set of 5 relevance scores, Our systems (each one corresponding to specific algorithm of query generation, see Sections 5 and 7) were individually optimized with no regard to NOA strings. However, since the new ResPubliQA performance measure rewards "I don't know" (NOA) answers over the wrong ones, we added the combination function (eq.</p><p>2) in order to estimate the confidence in the chosen answer. At submission time we used a set of λ parameters as resulted from MERT training on the un-discriminated set of questions. We will show that training different sets of parameters for each question class, yields improved results (Section 7).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Document and Paragraph Retrieval</head><p>For document and paragraph retrieval we used the Lucene search engine (http://lucene.apache.org). Lucene is a Java-based open source toolkit for full-text searching. It has a rich query syntax (http://lucene.apache.org/java/2_3_2/queryparsersyntax.html) allowing to search using Boolean queries, phrase search, term boosting (the importance of the query term is increased) and field-specific term designation (the query term can have as prefix the field name to constrain the search to), etc. Prior to searching, the Lucene search engine requires an index to be build from the document collection. A Lucene index functions like a relational database with only one table. The records of this table are the indexed documents and the document terms are stored into fields. A document field can have two index specific features: indexed and/or stored. The fields can be indexed and/or stored depending on how the data in the field will be used. For example, if we want to retrieve the document unique identification string and the field is only used for display then the terms in the field should only be stored. If we want to retrieve the modified date of the document and search using this date as a query term, the field for the date should be both indexed and stored.</p><p>The terms were filtered based on their morpho-syntactic description so that only the content words were indexed. Prior to indexing, the content words were normalized to their lemmatized form. We provide an example of the terms that were indexed for a given sentence in Table <ref type="table" coords="6,321.14,294.27,3.76,8.74" target="#tab_3">3</ref>. There were a few special cases were we had to account for tagging and lemmatization errors. For tokens tagged as proper nouns, foreign words or numerals and for the initial upper-cased tokens or for tokens having a punctuation mark in the middle we indexed the word form on the same position with the lemma. In this way, the term can match if searched both by lemma and word form.  We built two different indexes for the same collection of documents: one where the paragraphs are the index records and one where the documents are the index records. Given a query, the search engine returns a list of paragraphs that best match the query. There are two scores for each paragraph. One is the paragraph score and one is the document score. The two scores represent the score of the paragraph in the paragraph index and the score of the paragraph's document in the document index.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Question Preprocessing and Classification. Query Generation</head><p>Our QA system's ability to deliver NOA strings is achieved by combining the results of two queries, both of which are automatically derived from the natural language question. In order to do this, the user's question is first preprocessed to obtain an annotation similar to the one in Figure <ref type="figure" coords="7,391.40,121.83,3.75,8.74" target="#fig_0">1</ref>. This includes POS tagging, lemmatization and chunking. After that, the question class is derived that will optionally serve as an additional query term that will match the class of the paragraph (see Section 3).</p><p>Most QA systems identify the type of the natural language questions inputted by the users. This is called Question Classification (QC) and it is now a standard procedure for labeling the questions according to what they require as answers. It can be achieved in several ways, using rules or automatic classifiers. RACAI experience accumulated during the previous CLEF competitions made us choose the Maximum Entropy (ME) automatic classifier for our QC module. The ME framework proved to be well suited for this task since it can combine diverse forms of contextual information in a principled manner. It is a machine learning technique, originally developed for statistical physics, used for the analysis of the available information in order to determine a unique probability distribution. Similar to any statistical modeling method, it relies on empirical data sample that gives, for some known sets of input, a certain output. The sample is analyzed and a model is created, containing all the rules that could be inferred from the data. The model is then used to predict the output, when supplied with new sets of input that are not in the sample data. The maximum entropy method constructs a model that takes into account all the facts available in the sample data but otherwise preserves as much uncertainty as possible.</p><p>In terms of QC, the ResPubliQA task is completely different from the Wikipedia one. The different nature of the two corpora reflects into different type of questions that can be asked. This means we have different question classes for the two corpora and that explains why we couldn't use the QC module built for the competition of the previous year. Therefore, we had to train the ME classifier for the new type of questions. We had 8 classes, namely:</p><p>REASON-PURPOSE -usually for Why questions; PROCEDURE -for questions asking about juridical procedures; DEFINITION -for questions asking for definitions; LOCATION -for questions asking about locations; NAME -for questions asking about named entities: persons, organizations, etc. NUMERIC -for questions asking for numbers (i.e. how many…?); TEMPORAL -for questions asking about dates; FACTOID -for factoid questions other than the previous four.</p><p>Our problem may be formulated as any classification problem: given a set of training data, one has to find the distribution probability P, such that P(a|b) is the probability of class a given the context b and then apply this probability distribution on unseen data. In our case, the context b is formed by certain features extracted for every question. This year we used the following features extracted after the questions have been preprocessed: the first wh-word in the question, the first main verb, the first noun, the pos-tags for all the nouns, main verbs, adjectives, adverbs and numerals that appear in the question and the first-noun first-verb order. The preprocessing implied POS-tagging and lemmatization of the questions using the existing RACAI tools.</p><p>For training, we used the 200 questions test set that we developed starting with the examples of the competition organizers. The model had 100% accuracy on the training data but the figure dropped to 97.2% for the 500 questions in the test data. This means that the classifier assigned the wrong class only for 14 questions out of 500. Most often, the module couldn't disambiguate between FACTOID and PROCEDURE classes. The high score obtained is not a surprise due to the big differences between the features which are characteristic to the chosen classes. This was not an accident. We deliberately chose the classes so that the classifier would not have problems in predicting the correct class. Initially, we had 5 classes, with REASON and PURPOSE being separate classes and LOCATION, NAME, NUMERIC and TEMPORAL being part of the FACTOID class. Due to poor results obtained by the classifier we decided to combine REASON and PURPOSE classes and gradually split FACTOID into those classes enumerated above. We further tried to disambiguate between names of persons and names of organizations but the results were not satisfactory and so we backed off to the presented list of classes.</p><p>The first algorithm of query generation (the TFIDF query algorithm) considers all the content words of the question (nouns, verbs, adjectives and adverbs) out of which it constructs a disjunction of terms (which are lemmas of the content words) with the condition that the TFIDF of the given term is above a certain threshold. The TFIDF of each term t of the query has been pre-computed from the entire indexed corpus as</p><formula xml:id="formula_3" coords="8,225.48,72.35,299.07,32.24">( ) ⎟ ⎟ ⎠ ⎞ ⎜ ⎜ ⎝ ⎛ ⋅ + = df D tf t TFIDF ln ) ln( 1 ) ( (3)</formula><p>in which ln is the natural logarithm, tf is the term frequency in the entire corpus, df is the number of documents in which the term appears and D is the number of documents in our corpus, namely 10714 (if tf is 0, df is also 0 and the whole measure is 0 by definition). The rationale behind this decision is that there are certain terms that are very frequent and also very uninformative. As such, they must not be included in the query. Table <ref type="table" coords="8,483.57,143.01,5.01,8.74">4</ref> contains 10 of the most important/unimportant terms with their TFIDF scores. We experimentally set the TFIDF threshold to 9 for Romanian.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 4: Most uninformative and most informative Romanian terms according to the globally computed TFIDF measure</head><p>The second algorithm of query generation (QG, the chunk-based query algorithm) also uses the preprocessing of the question. The previous QG module <ref type="bibr" coords="8,302.83,361.47,68.76,8.74" target="#b1">(Ion et al., 2008)</ref> we developed for Wikipedia was not working as expected for the new data and so, we had to adapt it to cope with it. As in the previous version, the algorithm takes into account the NP chunks and the main verbs of the question. Now, for each NP chunk, two (instead of one) query terms are constructed: (i) one term is a query expression obtained by concatenating the lemmas of the words in the chunk and having a boost equal to the number of those words, and (ii) the other one is a Boolean query in which all the different lemmas of the words in the chunk are searched in conjunction. For example an "a b c" chunk generates the following two queries: "l(a) l(b) l(c)"^3 and (l(a) AND l(b) AND l(c)) where l(w) is the lemma for the w word. For each chunk of length n, we generate all the sub-chunks of n-1length (i.e. "a b" and "b c"), and for each such sub-chunk<ref type="foot" coords="8,341.16,452.35,3.24,5.65" target="#foot_2">4</ref> we construct two terms in the fashion just described (for the example above we get "l(a) l(b)"^2, (l(a) AND l(b)) for the first sub-chunk, and "l(b) l(c)"^2, (l(b) AND l(c)) for the second one). We then continue the procedure until the length of the sub-chunks is 1. Like in the previous version, for each main verb we generate a query term for its lemma but only if it is different from light or generic verbs: fi (be), avea (have), însemna (mean), înţelege (understand), întâmpla (happen), referi (refer to), reprezenta (represent), desemna (designate), numi (name), define (define), considera (consider), semnifica (signify), denota (denote), da (give).</p><p>The final query is formed as a disjunction of the generated query terms. For example, the question: "Care este scopul modificării deciziei 77/270/Euratom în ceea ce priveşte energia nucleară?" is preprocessed into: &lt;seg lang="ro"&gt; &lt;s id="rom.1"&gt; &lt;w lemma="care" ana="Pw3--r"&gt;Care&lt;/w&gt; &lt;w lemma="fi" ana="Vmip3s" chunk="Vp#1"&gt;este&lt;/w&gt; &lt;w lemma="scop" ana="Ncmsry" chunk="Np#1"&gt;scopul&lt;/w&gt; &lt;w lemma="modificare" ana="Ncfsoy" chunk="Np#1"&gt;modificării&lt;/w&gt; &lt;w lemma="decizie" ana="Ncfsoy" chunk="Np#1"&gt;deciziei&lt;/w&gt; &lt;w lemma="77/270" ana="Mc" chunk="Np#1"&gt;77/270&lt;/w&gt; &lt;c&gt;/&lt;/c&gt; &lt;w lemma="Euratom" ana="Np" chunk="Np#2"&gt;Euratom&lt;/w&gt; &lt;w lemma="în_ceea_ce_privește" ana="Spca" chunk="Pp#1"&gt;în_ceea_ce_privește&lt;/w&gt; &lt;w lemma="energie_nucleară" ana="Ncfsry" chunk="Pp#1,Np#3"&gt;energia_nucleară&lt;/w&gt; &lt;c&gt;?&lt;/c&gt; &lt;/s&gt; &lt;/seg&gt;</p><p>The NP chunks, as recognized by our chunker, are: "scopul modificării deciziei 77/270", "Euratom" and "energia nucleară". The two words in the last chunk have been identified by the preprocessing tool as making a We set the default Boolean operator between query terms to be OR and so, the previous query is a disjunction. The generation of the query terms aims at maximization of the chances to find the expressions from the questions received as input. The longer the expression, the higher the score of the paragraph that contains it (due to the boost factors). On the other hand, there may be cases when there is no paragraph that contains a certain sequence of words as it appears in the question. In this case, the generated conjunctional queries are supposed to help the engine to find those paragraphs containing as many question keywords as possible. We consider that the top returned paragraphs are those which are the most probable to contain the answers we are looking for.</p><p>One frequently used method for enhancing the performance of the QA systems is to enrich the mono-word query terms with synonyms extracted from a lexicon or a lexical ontology like Princeton WordNet. With almost 60,000 synsets, the Romanian WordNet is clearly an excellent resource for such a method. However, due to the fact that the corpus is a specialized one, containing much more technical terms than an ordinary corpus, we chose not to make use of synonyms at the query level but in a subsequent step of computing similarity scores between question and the paragraphs returned as most likely to contain a correct answer. Figure <ref type="figure" coords="9,474.37,291.33,5.01,8.74" target="#fig_2">2</ref> contains a depiction of a C# application that was specially conceived to help us test the performance of the queries. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Paragraph Relevance Measures</head><p>As already stated (in Section 3) our QA system uses a linear combination of paragraph relevance measures (eq. 1) to score a given candidate paragraph as to the possibility of containing the answer to the question. 1 s is a simple score that is 1 if the paragraph has the same class as the question and 0 otherwise. Scores 4 s and 5 s are</p><p>given by Lucene and measure the relevance of the paragraph to the query (automatically derived from the question). The remaining measures are explained below.</p><p>The BLUE-like similarity measure ( 3 s ) between the question and one candidate paragraph stems from the fact that there are questions that are formulated using a percent of words from one paragraph in the order that they appear in the paragraph. For instance, for the question "Care sunt mărfurile pentru care reimportul în aceeaşi stare nu se limitează la mărfurile importate direct din străinătate?" and the paragraph that contains the correct answer "Reimportul în aceeaşi stare nu se limitează la mărfurile importate direct din străinătate, ci se aprobă şi pentru mărfurile care au fost plasate sub un alt regim vamal." the underlined text is identical, a strong clue that the paragraph contains the correct answer. BLEU <ref type="bibr" coords="10,476.04,278.31,48.56,8.74;10,70.92,289.77,38.45,8.74" target="#b7">(Papineni et al., 2002)</ref> is a measure that counts n-grams from one candidate translation in one or more reference translations. We use the same principle and count n-grams from the question in the candidate paragraph but here is where the similarity to BLEU ends. Our n-gram processing: 1. counts only content word n-grams (content words are not necessarily adjacent); actually, an n-gram is a sliding window of question content word lemmas of a maximum length equal with the length of the question (measured in content words) and a minimum length of 2; 2. each n-gram receives a score equal to the sum of TFIDF weights (see Section 5) of its members; 3. the final similarity score is a sum of the scores of question n-grams found in a candidate paragraph which is itself reduced to an array of adjacent content words lemmas. 4. to bring this score in the range of 0 … 1, we normalized it in the set of candidate paragraphs returned for one question. To clarify the method of computing this similarity score, in the example above the question will be transformed into an array of content word lemmas such as {reimport, stare, limita, marfă, importa, direct, străinătate}. The candidate paragraph will have the same representation {reimport, stare, limita, marfă, importa, direct, străinătate, aproba, marfă, plasa, regim, vamal}. Now, the longest matching n-gram is (reimport, stare, limita, marfă, importa, direct, străinătate) and its score is</p><formula xml:id="formula_4" coords="10,254.94,468.86,84.88,30.31">{ } ∑ ∈ K , , ) ( stare reimport t t TFIDF</formula><p>The second longest n-grams that match are <ref type="bibr" coords="10,253.06,501.81,271.56,8.74;10,70.92,513.27,141.22,8.74">(reimport, stare, limita, marfă, importa, direct) and (stare, limita, marfă, importa, direct, străinătate)</ref> with their scores computed in a similar way. The final score will be a sum of all scores of matching n-grams.</p><p>The Question-Paragraph Similarity measure (QPS measure, 2 s ) is intended to measure, as the name suggests, the similarity between the question and the paragraphs returned by the search engine as possible answers. It is computed as follows: for a question Q and a candidate paragraph P, we build two lists containing the lemmas corresponding to the content words in the question and to those in the paragraph: LQ and LP. This is a trivial step as both question and paragraph are already preprocessed. We will consider the lemmas in the LQ list as keywords on the basis of which we have to find the most probable paragraph that is related to the question. The QPS score is the product of two other scores: (i) a lexical similarity score (LSS), (ii) a cohesion score (CS) and (iii) a verb-possible argument pair score (VAS).</p><p>(i) The lexical similarity score is computed as follows: each keyword in LQ is compared with those in the LP list, and between every keyword kq in LQ and every keyword kp in LP lexical similarity score (SLS) is computed. If the two keywords are identical, the score is 1. If not, we search for the shortest lexical paths between the two keywords on the semantic relations in the Romanian WordNet. We used the following relations <ref type="bibr" coords="10,521.00,668.25,3.73,8.74;10,70.92,679.77,453.70,8.74;10,70.92,691.29,453.58,8.74;10,70.91,702.75,48.65,8.74">: synonym, hypernym, hyponym, holo_member, derived, derivative, subevent, category_domain, holo_portion, causes, region_domain, near_antonym, also_see, similar_to, particle, holo_part, usage_domain, verb_group, be_in_state.</ref> We assigned numerical values to every semantic relation in order to be able to compute scores for the lexical paths we found. The strongest relations have the highest values: synonym -1, hypernym and hyponym -0.9 while the opposing relation of near_antonymy has received the lowest value: 0.4. These values were manually set by linguists on empirical grounds.</p><p>The lexical paths resemble very much to what is known in the literature as lexical chains and they can be used in diverse NLP technologies or applications. For example, we also use them for Word Sense Disambiguation (WSD) and in our experiments on this subject, subsequent to the CLEF competition, we automatically computed the values for the semantic relations in the WordNet using the word sense disambiguated corpus SemCor. The new values were completely different from those manually assigned by the linguists. A detailed analysis will be presented in a future paper <ref type="bibr" coords="11,327.57,131.01,107.76,8.74" target="#b2">(Ion and Ştefănescu, 2009)</ref>  <ref type="foot" coords="11,435.30,128.83,3.24,5.65" target="#foot_3">5</ref> .</p><p>The score for a lexical path is computed using the formula:</p><formula xml:id="formula_5" coords="11,243.84,151.70,280.72,36.53">l r v S l i i lp 4 1 ) ( 3 1 ∑ = + = (4)</formula><p>where l is the length of the lexical path, r i is the i th relation in the lexical path, and v(r i ) is the value assigned to r i .</p><p>We considered that only for S lp scores equal or above 0.8 the lexical similarity between kq and kp is strong enough to be taken into consideration (and set SLS = S lp ), otherwise S lp remains 0. If S lp is 0, we should not discard the possibility that we've found some named entities or words that don't appear in the WordNet and so, we compute a surface similarity between them in terms of the Levenshtein Distance (LD), to cover for these cases. The lower the LD score, the grater the surface similarity and therefore, in order to make this score consistent with the lexical similarity measure we used the following formula: where ld <ref type="bibr" coords="11,105.60,304.47,30.64,8.74">(kq, kp)</ref> is the LD score between the two terms, and length(k) is the character length of the string k.</p><p>One should notice that the score is now in the [0, 1] interval and, when the two terms are identical the new score is 1.</p><p>If S ld is equal or higher than a threshold of 0.5 (the character strings of the two terms are the same for more than the half of their length), then we set SLS = S ld . Now, the lexical similarity score for a question-paragraph pair is computed as:</p><formula xml:id="formula_6" coords="11,223.98,368.36,300.58,38.45">T SLS LSS i kp kq kp kq ∑ = , ,<label>) ( (6)</label></formula><p>where T is the total number of situation when SLS kq,kp ≠ 0.</p><p>(ii) The cohesion score is intended to measure the closeness of the question keywords in the paragraphs, irrespective of their order. First all the question keywords are identified in the paragraph and then, the score is computed as the average distance between consecutive indexes. In order to have values in the [0, 1] interval and have the highest score for consecutive keywords, we compute the score like this:</p><formula xml:id="formula_7" coords="11,223.98,467.98,300.58,48.57">∑ ∑ = = n i i n i i d n n d CS ii 1 ) ( (7)</formula><p>where d i is the difference between the index positions in the paragraph of the words corresponding to consecutive keywords in the query and n is the total number of such distances. n d n i i ∑ is the average distance between consecutive indexes, mentioned earlier. We have to say that a distance cannot be 0 because between two consecutive words we have a distance of 1.</p><p>(iii) For computing verb-possible argument pair score (VAS) we consider the pair formed by the main verb of the question and the following noun (or the previous if there is no following one). We consider that there is a high probability to get a verb-argument pair like this. We look for this pair in the paragraph candidate and if we find it, the score is computed as 1 divided by the distance d v-a between the two elements forming the pair (d v-a cannot be 0 for no distance can be 0, as explained above). If the pair cannot be found or there is another main verb between the two elements, the score becomes 0.</p><p>The final score is computed as a product between the 3 scores: QPS = LSS * CS * VAS only for those paragraphs ending with "." or ";". Otherwise, the QPS score is 0. The rationale resides in the observation that because of the way the corpus was segmented at the paragraph level, section titles or table fragments were regularly considered paragraphs. However, they are not of any use for our endeavor, and thus, we disregard them.</p><p>We have to mention that we reached QPS score formula, after a long series of experiments. In many of them we used different values for the S lp score weights and different thresholds. One variant of LSS score formula had, as denominator, the total number of content words in the paragraph instead of T. All the combinations were tested on the 200 questions data test bed. In the end, we were mostly satisfied with the one described above.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Evaluations</head><p>As in every year, QA@CLEF allowed two runs to be submitted for evaluation. Our two runs that have been submitted to ResPubliQA Romanian-Romanian QA contained NOA strings as the accuracy measure proposed by the organizers rewarded systems that instead of giving a wrong answer, gave a "I don't know/I'm not sure" answer:</p><formula xml:id="formula_8" coords="12,247.02,200.75,277.54,32.52">⎟ ⎠ ⎞ ⎜ ⎝ ⎛ + = n n n n n A AC U AC 1 (8)</formula><p>where n is the total number of questions (500), AC n is the number of correctly answered questions and U n is the number of unanswered questions. The assumption is that the system would give the same proportion of correct answers ( n n AC ) in "a second try" if it were to be run only on the unanswered questions. Since our runs did not contain candidate answers in the case of unanswered questions, thus denying the organizers the possibility to verify this hypothesis, we will provide candidate answers for unanswered questions here and compute the proportion of interest ourselves.</p><p>In Section 5 we presented two query formulation algorithms. Each query produces a different set of paragraphs when posed to the search engine thus allowing us to speak of two QA systems. We applied the training procedure described in Section 3 on our 200 questions test set that we developed on each system and ended up with the following values for the λ parameters:</p><formula xml:id="formula_9" coords="12,237.24,391.71,265.20,9.47">λ 1 λ 2 λ 3 λ 4 λ 5</formula><p>The TFIDF query algorithm 0.22 0.1 0.1 0.19 0.39 The chunk query algorithm 0.32 0.14 0.17 0.25 0.12 Table <ref type="table" coords="12,222.18,427.71,4.19,8.74">5</ref>: Parameters for paragraph score weighting With these parameters, each system was presented with the official ResPubliQA 500 questions test set. For each question, each system returned 50 paragraphs that were sorted according to eq. 1 using parameters from Table <ref type="table" coords="12,517.16,462.21,3.76,8.74">5</ref>. Table <ref type="table" coords="12,97.60,473.73,5.01,8.74" target="#tab_5">6</ref> contains the official evaluations<ref type="foot" coords="12,237.84,471.55,3.24,5.65" target="#foot_4">6</ref> of our two runs, ICIA091RORO and ICIA092RORO. The first run corresponds to running the two QA systems with queries exactly as described in Section 5. The second run however, was based on queries that contained the class of the question based on the fact that when we constructed the index of paragraphs (see Sections 2 and 4) we added a field that kept the paragraph class. This tweak brought about a significant improvement in both accuracy and c@1 measure as In order to estimate how many correct answers would have been returned instead of the NOA strings, we ran our QA systems on the 500 questions test set with the exact same settings as per Table <ref type="table" coords="12,455.25,709.71,5.01,8.74" target="#tab_5">6</ref> obtaining runs ICIA091RORO-NO-NOA and ICIA092RORO-NO-NOA that were combinations resulting from setting K to the maximum allowed value of 50 in eq. 2 (this way, eq. 2 always returned a paragraph thus eliminating the presence of the NOA string). Then, for the two pairs of runs (ICIA091RORO, ICIA091RORO-NO-NOA) and (ICIA092RORO, ICIA092RORO-NO-NOA) we checked the status of every NOA string by seeing if the corresponding answer was correct or not (using the official Gold Standard of Answers of the Romanian-Romanian ResPubliQA task that we got from the organizers). It shows that the assumption that the organizers made does not hold in our case. For ICIA091RORO there is a 4% difference between the c@1 measure and the reevaluated overall accuracy and 12% difference between the same measures in the case of ICIA092RORO. This observation supports the idea that QA systems should be evaluated by the exhibited ability of finding the right information on the spot and possibly in real time.</p><p>We ended Section 3 with the hypothesis that training different sets of λ parameters for each class would result in better performance (overall accuracy). We experimented with our 200 questions test set and trained different sets of parameters (with the increment step of 0.05 to reduce the time complexity) for each paragraph class since the class identity (between question and paragraph) is made at the paragraph level. Running our QA systems onto the 500 questions test set, sorting the returned paragraphs for each question using the set of parameters trained onto the question's class and combining the results with K = 50 to remove the NOA strings, we obtained an overall accuracy of 0.5774, with almost 2% better than our best result. This confirmed our hypothesis that class-trained parameters would improve the performance of the system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Conclusions</head><p>The CLEF campaign has gone long way into the realm of Information Retrieval and Extraction. Each year, the competition showed its participants how to test and then, how to improve their systems. The competitive framework has motivated systems' designers to adopt daring solutions and to experiment in order to obtain the best result. However, we should not forget that we are building these IR and QA systems primarily to help people to search for the information they need. In this regard, it would be very helpful that future competitions would require that, for instance the QA systems to be available on the Internet. Or, to impose a very strict time limit (one day for instance). Another dimension in which we can extend the usefulness of the competition is the scoring formulas. The requirement that only the first answer is to be evaluated is a little harsh given the willingness of the average user to inspect, say at least 5 top returned results.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="2,79.02,701.49,437.49,8.74;2,207.36,713.01,180.78,8.74;2,79.98,419.58,435.48,279.30"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Format of the to-be-indexed JRC-Acquis corpus. The sentence ID contains the CELEX code of the document along with the paragraph identifier</figDesc><graphic coords="2,79.98,419.58,435.48,279.30" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="5,352.44,608.81,3.48,6.08;5,330.30,608.81,3.48,6.08;5,347.64,602.51,4.67,10.46;5,326.04,600.80,34.83,15.58;5,70.92,629.79,119.95,8.74;5,196.98,623.69,6.54,15.43;5,210.90,629.79,66.14,8.74;5,283.32,620.99,12.85,22.08;5,287.70,640.77,3.84,8.59;5,310.98,624.21,6.59,14.72;5,287.94,619.52,3.51,6.12;5,291.00,643.22,3.51,6.12;5,319.38,628.41,6.01,10.49;5,285.30,643.22,1.95,6.12;5,304.32,634.70,1.95,6.12;5,297.78,623.52,6.59,15.56;5,326.58,629.79,107.09,8.74;5,433.68,627.61,5.40,5.65;5,439.08,629.79,85.47,8.74;5,88.92,652.95,435.65,8.74;5,88.92,664.47,117.57,8.74;5,70.92,677.73,92.71,8.74;5,167.76,671.57,6.57,15.50;5,179.58,677.73,235.84,8.74"><head></head><label></label><figDesc>of 10 -2 , compute the Mean Reciprocal Rank (MRR) of the 200 question test set by sorting the list of returned paragraphs for each question according to eq. (1); 4. retaining the set of λ parameters for which we obtain the maximum MRR value.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="9,188.46,730.65,218.63,8.74;9,71.52,323.16,452.40,398.88"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: C# application developed for testing queries</figDesc><graphic coords="9,71.52,323.16,452.40,398.88" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" coords="3,135.66,648.44,324.20,104.74"><head>Table 1 :</head><label>1</label><figDesc>Paragraph classification precision (computed on 89 labeled paragraphs)</figDesc><table coords="3,170.06,648.44,202.92,92.86"><row><cell>).</cell><cell></cell><cell></cell></row><row><cell>Label</cell><cell>Precision</cell><cell>Instances</cell></row><row><cell>Reason</cell><cell>1</cell><cell>16/16</cell></row><row><cell>Definition</cell><cell>0.88</cell><cell>24/27</cell></row><row><cell>Procedure</cell><cell>0.83</cell><cell>5/6</cell></row><row><cell>Factoid</cell><cell>0.97</cell><cell>33/34</cell></row><row><cell>Delete</cell><cell>1</cell><cell>6/6</cell></row><row><cell>Total</cell><cell>0.94</cell><cell>84/89</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" coords="5,70.92,141.99,453.71,193.24"><head>Table 2 :</head><label>2</label><figDesc>score that will reward paragraphs that contain keywords from the question much in the same order as they appear in the question ( 3 Mapping from question classes to paragraph classes.</figDesc><table coords="5,348.18,155.03,16.14,10.46"><row><cell>s );</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" coords="6,210.66,638.79,174.25,8.74"><head>Table 3 :</head><label>3</label><figDesc>Terms that are indexed by Lucene</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" coords="8,120.36,189.69,354.79,116.62"><head></head><label></label><figDesc>they are joined as one lexical token: "energia_nucleară". The main verb is "este", which is in the list of excluded verbs previously described. The query generated starting from these elements is:</figDesc><table coords="8,120.36,189.69,354.79,116.62"><row><cell cols="4">EUROVOC term and "scop modificare decizie 77/270"^4 (scop AND modificare AND decizie AND 77/270) Euratom</cell></row><row><cell cols="4">energie_nucleară "scop modificare decizie"^3 (scop AND modificare AND decizie)</cell></row><row><cell cols="4">"modificare decizie 77/270"^3 (modificare AND decizie AND 77/270) "scop modificare"^2</cell></row><row><cell cols="4">(scop AND modificare) "modificare decizie"^2 (modificare AND decizie) "decizie 77/270"^2</cell></row><row><cell cols="3">(decizie AND 77/270) scop modificare decizie 77/270</cell><cell></cell></row><row><cell>Uninformative Term</cell><cell>TFIDF</cell><cell>Informative Term</cell><cell>TFIDF</cell></row><row><cell>articol</cell><cell cols="2">0.096 emolient</cell><cell>66.890</cell></row><row><cell>adopta</cell><cell cols="2">0.145 antistatic</cell><cell>56.660</cell></row><row><cell>în_special</cell><cell cols="2">0.340 emulgator</cell><cell>54.532</cell></row><row><cell>consiliu</cell><cell cols="2">0.404 biodestructiv</cell><cell>53.967</cell></row><row><cell>tratat</cell><cell cols="2">0.716 calmant</cell><cell>52.579</cell></row><row><cell>comisie</cell><cell cols="2">0.719 subsistem</cell><cell>51.952</cell></row><row><cell>comunitatea_europeană</cell><cell cols="2">0.860 deputat</cell><cell>51.059</cell></row><row><cell>stat_membru</cell><cell cols="2">1.380 microdischetă</cell><cell>47.868</cell></row><row><cell>prevedea</cell><cell></cell><cell>2 opacimetru</cell><cell>46.746</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" coords="12,111.12,519.75,367.24,164.20"><head>Table 6 :</head><label>6</label><figDesc>Table 6 shows. RACAI's official ResPubliQA evaluations on the Romanian-Romanian task.</figDesc><table coords="12,327.12,543.33,151.25,8.74"><row><cell>ICIA091RORO</cell><cell>ICIA092RORO</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" coords="13,82.20,119.49,417.16,176.26"><head>Table 7 :</head><label>7</label><figDesc>Table 7 contains the results. RACAI's reevaluated results when NOA strings have been replaced by actual answers</figDesc><table coords="13,325.26,143.13,174.10,8.74"><row><cell>ICIA091RORO</cell><cell>ICIA092RORO</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" coords="13,70.92,392.91,453.70,157.78"><head>Table 8 :</head><label>8</label><figDesc>Table 8 presents the trained values for the parameters. Different parameters trained for different classes</figDesc><table coords="13,88.20,427.89,411.50,109.78"><row><cell></cell><cell></cell><cell>λ 1</cell><cell>λ 2</cell><cell>λ 3</cell><cell>λ 4</cell><cell>λ 5</cell></row><row><cell></cell><cell>Factoid</cell><cell>0.1</cell><cell>0</cell><cell>0.2</cell><cell>0.4</cell><cell>0.3</cell></row><row><cell>The TFIDF query algorithm</cell><cell>Definition Reason</cell><cell>0.2 0.1</cell><cell>0.15 0</cell><cell>0.05 0.15</cell><cell>0.15 0.3</cell><cell>0.45 0.45</cell></row><row><cell></cell><cell>Procedure</cell><cell>0.1</cell><cell>0</cell><cell>0.15</cell><cell>0.15</cell><cell>0.6</cell></row><row><cell></cell><cell>Factoid</cell><cell>0.15</cell><cell>0</cell><cell>0.3</cell><cell>0.3</cell><cell>0.25</cell></row><row><cell>The chunk query algorithm</cell><cell>Definition Reason</cell><cell>0.05 0.2</cell><cell>0.5 0</cell><cell>0.15 0.4</cell><cell>0.1 0.2</cell><cell>0.2 0.2</cell></row><row><cell></cell><cell>Procedure</cell><cell>0.15</cell><cell>0.1</cell><cell>0.25</cell><cell>0.2</cell><cell>0.3</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0" coords="1,76.32,717.52,448.36,7.85;1,70.92,727.84,453.69,7.85;1,70.92,738.22,79.96,7.85"><p>Last year's QA system had to select appropriate snippets from the Wikipedia documents returned by the search engine. The JRC-Acquis document collection provides the snippet, or paragraph, segmentation thus relieving the system of the task of paragraph composing.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_1" coords="2,76.80,738.22,447.94,7.85;2,70.92,748.54,216.37,7.85"><p>This document structure was not always in place. There were cases in which the annex was incorporated into the body or the title was missing or was also incorporated into the body.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_2" coords="8,76.32,738.22,448.25,7.85;8,70.92,748.54,111.55,7.85"><p>By sub-chunk of a chunk of length n we mean a sub-string of it containing m words, with m &lt; n. The sub-string cannot start or end in the middle of a word.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_3" coords="11,76.20,748.54,294.32,7.85"><p>Our QA system uses now the new obtained values to compute lexical similarities.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_4" coords="12,76.20,748.54,174.71,7.85"><p>From http://celct.isti.cnr.it/ResPubliQA/ website</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div><p>We want to extend the present QA system so that it can cross-lingually answer question form English or Romanian in either English or Romanian. We have already processed the English side of the JRC-Acquis and, given that we have several functional Example-Based and Statistical Machine Translation Systems, we may begin by automatically translating either the natural language question or the generated query. Then the combination method expressed by equation 2 would probably yield better results if applied on English and Romanian paragraph lists since a common paragraph means the same information found via two different languages.</p><p>The principal advantage of this approach to QA is that one has an easily extensible and trainable QA system. If there is another way to asses the relevance of a paragraph to a given question, simply add another parameter that will account for the importance of that measure and retrain. We believe that in the interest of usability, understandability, adaptability to other languages and, ultimately progress, such principled methods are to be preferred over the probably more accurate but otherwise almost impossible to reproduce methods.</p></div>
			</div>			<div type="references">

				<listBibl>

<biblStruct coords="14,70.92,248.31,453.60,8.74;14,70.92,259.77,453.67,8.74;14,70.92,271.29,416.17,8.74" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="14,398.34,248.31,126.18,8.74;14,70.92,259.77,187.21,8.74">TAC2008 Question Answering Experiments at Tokyo Institute of Technology</title>
		<author>
			<persName coords=""><forename type="first">M</forename><forename type="middle">H</forename><surname>Heie</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">E</forename><forename type="middle">W D</forename><surname>Whittaker</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><forename type="middle">R</forename><surname>Novak</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Mrozinski</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Furu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="14,278.76,259.77,241.52,8.74">Proceedings of the Text Analysis Conference (TAC 2008)</title>
		<meeting>the Text Analysis Conference (TAC 2008)<address><addrLine>Gaithersburg, Maryland, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-11-17">2008. November 17-19, 2008</date>
		</imprint>
		<respStmt>
			<orgName>National Institute of Standards and Technology</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct coords="14,70.92,294.27,453.67,8.74;14,70.92,305.79,453.69,8.74;14,70.92,317.31,385.13,8.74" xml:id="b1">
	<analytic>
		<title level="a" type="main" coord="14,292.08,294.27,232.51,8.74;14,70.92,305.79,270.34,8.74">RACAI&apos;s QA System at the Romanian-Romanian Multiple Language Question Answering (QA@CLEF2008) Main Task</title>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Ion</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Ştefănescu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Al</forename><surname>Ceauşu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Tufiş</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="14,98.31,317.31,181.48,8.74">Working Notes for the CLEF 2008 Workshop</title>
		<editor>
			<persName><forename type="first">Alessandro</forename><surname>Nardi</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Carol</forename><surname>Peters</surname></persName>
		</editor>
		<meeting><address><addrLine>Aarhus, Denmark</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-09">2008. September 2008</date>
			<biblScope unit="page">10</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="14,70.92,340.29,453.57,8.74;14,70.92,351.81,453.82,8.74;14,70.92,363.27,426.63,8.74" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="14,209.34,340.29,315.15,8.74;14,70.92,351.81,121.78,8.74">Unsupervised Word Sense Disambiguation with Lexical Chains and Graphbased Context Formalization</title>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Ion</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Ştefănescu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="14,327.72,351.81,197.01,8.74;14,70.92,363.27,267.40,8.74">&amp; Technology Conference: Human Language Technologies as a Challenge for Computer Science and Linguistics</title>
		<meeting><address><addrLine>Poznań, Poland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009-11-06">2009. November 6-8, 2009</date>
		</imprint>
	</monogr>
	<note>Submitted to 4th Language</note>
</biblStruct>

<biblStruct coords="14,70.92,386.31,453.62,8.74;14,70.92,397.77,173.84,8.74;14,244.80,395.59,5.04,5.65;14,252.78,397.77,271.87,8.74;14,70.92,409.29,139.49,8.74" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="14,414.72,386.31,109.82,8.74;14,70.92,397.77,71.74,8.74">IBM&apos;s Statistical Question Answering System</title>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Ittycheriah</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Franz</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W-J</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Ratnaparkhi</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><forename type="middle">J</forename><surname>Mammone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="14,161.33,397.77,83.42,8.74;14,244.80,395.59,5.04,5.65;14,252.78,397.77,148.44,8.74">Proceedings of the 9 th Text Retrieval Conference (TREC-9)</title>
		<meeting>the 9 th Text Retrieval Conference (TREC-9)<address><addrLine>Gaithersburg, Maryland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-11-13">2000. November 13-16, 2000</date>
			<biblScope unit="page" from="229" to="235" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="14,70.92,432.27,416.51,8.74;14,487.38,430.09,5.04,5.65;14,495.06,432.27,29.55,8.74;14,70.92,443.79,403.92,8.74" xml:id="b4">
	<analytic>
		<title level="a" type="main" coord="14,241.02,432.27,140.74,8.74">A Trainable Document Summarizer</title>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Kupiec</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Pedersen</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="14,399.97,432.27,87.46,8.74;14,487.38,430.09,5.04,5.65;14,495.06,432.27,29.55,8.74;14,70.92,443.79,260.85,8.74">Proceedings of the 18 th Annual Int. ACM/SIGIR Conference of Research and Development in IR</title>
		<meeting>the 18 th Annual Int. ACM/SIGIR Conference of Research and Development in IR<address><addrLine>Seattle, WA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-07">1995. July 1995</date>
			<biblScope unit="page" from="68" to="73" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="14,70.92,466.77,415.82,8.74" xml:id="b5">
	<analytic>
		<title level="a" type="main" coord="14,142.34,466.77,177.79,8.74">The automatic creation of literature abstracts</title>
		<author>
			<persName coords=""><forename type="first">H</forename><forename type="middle">P</forename><surname>Luhn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="14,326.37,466.77,84.91,8.74">IBM J. Res. Develop</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="159" to="165" />
			<date type="published" when="1959">1959. 1959</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="14,70.92,489.75,453.78,8.74;14,70.92,501.27,449.24,8.74" xml:id="b6">
	<analytic>
		<title level="a" type="main" coord="14,139.38,489.75,266.42,8.74">Minimum Error Rate Training in statistical machine translation</title>
		<author>
			<persName coords=""><forename type="first">F</forename><forename type="middle">J</forename><surname>Och</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="14,426.19,489.75,98.52,8.74;14,70.92,501.27,249.01,8.74">Proceedings of the 41st Annual Meeting on Association for Computational Linguistics</title>
		<meeting>the 41st Annual Meeting on Association for Computational Linguistics<address><addrLine>Sapporo, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-07-07">2003. July 07-12, 2003</date>
			<biblScope unit="page" from="160" to="167" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="14,70.92,524.25,453.84,8.74;14,70.92,535.77,453.68,8.74;14,70.92,547.29,201.21,8.74" xml:id="b7">
	<analytic>
		<title level="a" type="main" coord="14,302.04,524.25,222.72,8.74;14,70.92,535.77,42.56,8.74">BLEU: a method for automatic evaluation of machine translation</title>
		<author>
			<persName coords=""><forename type="first">K</forename><surname>Papineni</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Roukos</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W</forename><forename type="middle">J</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="14,133.38,535.77,391.22,8.74;14,70.92,547.29,43.08,8.74">Proceedings of the ACL-2002: 40th Annual meeting of the Association for Computational Linguistics</title>
		<meeting>the ACL-2002: 40th Annual meeting of the Association for Computational Linguistics<address><addrLine>Philadelphia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-07">2002. July 2002</date>
			<biblScope unit="page" from="311" to="318" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="14,70.92,570.27,451.15,8.74;14,70.92,581.79,453.66,8.74;14,70.92,593.25,350.64,8.74" xml:id="b8">
	<analytic>
		<title level="a" type="main" coord="14,362.70,570.27,155.38,8.74">RACAI&apos;s Linguistic Web Services</title>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Tufiş</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Ion</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Al</forename><surname>Ceauşu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Ştefănescu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="14,81.77,581.79,347.63,8.74">Proceedings of the 6th Language Resources and Evaluation Conference -LREC 2008</title>
		<meeting>the 6th Language Resources and Evaluation Conference -LREC 2008<address><addrLine>Marrakech, Morocco</addrLine></address></meeting>
		<imprint>
			<publisher>ELRA -European Language Ressources Association</publisher>
			<date type="published" when="2008-05">2008. May 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="14,70.92,616.29,453.72,8.74;14,70.92,627.75,453.65,8.74;14,70.92,639.27,274.47,8.74" xml:id="b9">
	<analytic>
		<title level="a" type="main" coord="14,402.30,616.29,122.34,8.74;14,70.92,627.75,18.04,8.74">The Alyssa System at TAC QA 2008</title>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Wiegand</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Momtazi</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Kazalski</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">G</forename><surname>Chrupała</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Klakow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="14,112.50,627.75,251.39,8.74">Proceedings of the Text Analysis Conference (TAC 2008)</title>
		<meeting>the Text Analysis Conference (TAC 2008)<address><addrLine>Gaithersburg, Maryland, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-11-17">2008. November 17-19, 2008</date>
		</imprint>
		<respStmt>
			<orgName>National Institute of Standards and Technology</orgName>
		</respStmt>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
