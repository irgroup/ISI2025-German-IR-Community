<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,137.22,148.86,328.55,15.15">The LogAnswer Project at CLEF 2009</title>
				<funder ref="#_gnnaxPs">
					<orgName type="full">DFG (Deutsche Forschungsgemeinschaft)</orgName>
				</funder>
				<funder ref="#_6wvzV5D">
					<orgName type="full">unknown</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName coords="1,227.91,182.75,61.26,8.74"><forename type="first">Ingo</forename><surname>Glöckner</surname></persName>
							<email>ingo.gloeckner@fernuni-hagen.de</email>
							<affiliation key="aff0">
								<orgName type="department">Intelligent Information and Communication Systems Group (IICS)</orgName>
								<orgName type="institution">University of Hagen</orgName>
								<address>
									<postCode>59084</postCode>
									<settlement>Hagen</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName coords="1,316.32,182.75,54.30,8.74"><forename type="first">Björn</forename><surname>Pelzer</surname></persName>
							<email>bpelzer@uni-koblenz.de</email>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Artificial Intelligence Research Group</orgName>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">University of Koblenz-Landau</orgName>
								<address>
									<addrLine>Universitätsstr. 1</addrLine>
									<postCode>56070</postCode>
									<settlement>Koblenz</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,137.22,148.86,328.55,15.15">The LogAnswer Project at CLEF 2009</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">E4EE5A9D7E657ED438D7BA6E1765ECB9</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-06-26T15:22+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval-Search Process, Selection process</term>
					<term>I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Predicate Logic, Semantic networks</term>
					<term>I.2.7 [Artificial Intelligence]: Natural Language Processing Experimentation, Measurement, Verification Logical Question Answering, Questions beyond Factoids, Passage Reranking, Robust Inference</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The LogAnswer system, a research prototype of a question answering (QA) system for German, participates in QA@CLEF for the second time. The ResPubliQA task was chosen for evaluating the results of the general consolidation of the system and improvements concerning robustness and processing of administrative language. LogAnswer uses a machine learning (ML) approach based on rank-optimizing decision trees for integrating logic-based and shallow (lexical) validation features. The paragraph with the highest rank is then chosen as the answer to the question. For ResPubliQA, Log-Answer was adjusted to specifics of administrative documents, as found in the JRC Acquis corpus. In order to account for the low parsing rate for administrative texts, indexing, answer type recognition, and all validation features were extended to sentences with a failed parse. Moreover, support for questions that ask for a purpose, reason, or procedure was added. Compared to the first prototype of LogAnswer that participated in QA@CLEF 2008, there were no major changes in the resources employed. We have utilized the Eurovoc thesaurus for extracting definitions of abbreviations and acronyms but this knowledge was not activated by the questions in the ResPubliQA test set. Two runs were submitted to ResPubliQA: The first run was obtained from the standard configuration of LogAnswer with full logic-based processing of results, while the second run was run with the prover switched off. It simulates the performance of the system when all retrieved passages have a failed parse. The results obtained for the two runs were almost identical. Given that our parser for German has generated a useful logical representation for less than 30% of the sentences in the JRC Acquis corpus, it is not surprising that logical processing had a minor effect. A systematic analysis of the results of LogAnswer for the different question categories revealed an unfavorable decision in the processing of definition questions that will now be fixed. Moreover, questions asking for a procedure proved difficult to answer. On the positive side, the results of LogAnswer were particularly convincing for factoid questions and for questions that ask for reasons. With an accuracy of 0.40 and c@1 score of 0.44, LogAnswer also outperformed the two official ResPubliQA baselines for German.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="9" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="10" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="11" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="12" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="13" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The goal of the LogAnswer project 1 is to further research into logic-based question answering. Emphasis is placed on the problem of achieving acceptable response times in the logical QA framework, and on the problem of ensuring stable results despite the brittleness of a deep linguistic analysis and of logical reasoning. An early prototype of the LogAnswer QA system that evolved from this research took part in QA@CLEF 2008. After consolidation and improvement, LogAnswer now attends the CLEF QA systems evaluation for the second time. The ResPubliQA 2 task was chosen for evaluating LogAnswer since GikiCLEF 3 requires special geographic knowledge not available to LogAnswer while the third QA system evaluation, QAST 4 is not available for German. Therefore, only ResPubliQA provided a suitable testbed for evaluating our system. The ResPubliQA question answering task is based on the JRC Acquis 5 corpus of documents related to EU administration. As opposed to earlier QA@CLEF tasks, ResPubliQA does not require the extraction of exact answers from retrieved paragraphs. But ResPubliQA introduces new difficulties that make it a demanding task for the LogAnswer system:</p><p>• The JRC corpus is characterized by administrative language. The texts are syntactically complex and contain special structures (such as references to sections of regulations, and very long enumerations of items) that are difficult to analyze syntactically. Since logical processing of questions in LogAnswer depends crucially on the success of syntactic-semantic analysis, it was important to adjust the parser to the documents found in the JRC Acquis corpus. Moreover, LogAnswer had to be equipped with fallback methods in order to ensure a graceful degradation of results if linguistic analysis or the logic-based processing of the question fails.</p><p>• Compared to earlier QA@CLEF tasks, ResPubliQA also brings significant changes with respect to the considered types of questions. There are three new question categories (PUR-POSE, PROCEDURE, REASON). Moreover, even for the familiar FACTOID category, there is a shift from simple questions asking for entities with a known type (like PERSON, LO-CATION) to more general questions (for example, questions asking for preconditions) with answer type OTHER in earlier QA@CLEF terminology. The LogAnswer system had to be extended to recognize these types of questions in question classification and to find suitable paragraphs in the texts.</p><p>• ResPubliQA now expects a whole paragraph to be returned as the answer to a question. While answer selection in LogAnswer used to be strictly sentence-oriented, the emphasis of ResPubliQA on answer paragraphs made it necessary to consider information from several sentences in a paragraph.</p><p>• ResPubliQA introduces the c@1 score as the primary evaluation criterion. Apart from the number of correct results found by the system, the c@1 score also takes the quality of validation into account. The QA system must thus be able to recognize bad answers, and if in doubt, prefer to show no response. To this end, LogAnswer computes a quality score based on a large number of features (including logical validation). For ResPubliQA, a suitable threshold had to be found such that cutting off answers with a quality score below the threshold results in an increase of the c@1 metric.</p><p>Apart from the general consolidation of the prototype, LogAnswer was extended for ResPubliQA in order to meet these requirements. However, any customization to idiosyncratic aspects of the JRC corpus (like the special style of expressing definitions found in regulations) was deliberately avoided, in favor of developing generic methods that are useful for other corpora as well. The overall goal of our participation in QA@CLEF was that of evaluating the success of the measures taken to improve the LogAnswer system; this includes the refinements of LogAnswer based on our experience from QA@CLEF 2008, and also the extensions specifically developed for ResPubliQA (such as supporting REASON or PURPOSE questions) that enhance the question answering capabilities of the prototype.</p><p>In the paper, we first introduce the LogAnswer system. Since the architecture of LogAnswer and many details of specific solutions are already published elsewhere <ref type="bibr" coords="3,408.14,287.36,10.52,8.74" target="#b0">[1,</ref><ref type="bibr" coords="3,423.12,287.36,7.75,8.74" target="#b1">2,</ref><ref type="bibr" coords="3,435.32,287.36,7.75,8.74" target="#b2">3,</ref><ref type="bibr" coords="3,447.54,287.36,7.75,8.74" target="#b4">5,</ref><ref type="bibr" coords="3,459.74,287.36,7.01,8.74">6]</ref>, we focus on a description of the improvements and extensions that were made for ResPubliQA. We then discuss the results obtained by LogAnswer, including a detailed analysis of the strengths and weaknesses of the system and of typical problems that were encountered. In particular, we assess the effectiveness of the measures taken to prepare LogAnswer for the ResPubliQA task.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">System Description</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Overview of the LogAnswer System</head><p>LogAnswer is a question answering system that uses logical reasoning for validating possible answer passages and for identifying the actual answer in these passages. To this end, the documents in the corpus are translated into logical form. The system then tries to prove the logical representation of the question from the logical representation of the answer passage to be validated and from its general background knowledge. In order to gain robustness against gaps in the background knowledge and other sources of errors, the prover is embedded in a relaxation loop that gradually skips non-provable literals until a proof of the simplified fragment of the query succeeds. If the validation score of the checked text passage is changed accordingly, this mechanism can help to achieve a graceful degradation of result quality in the case of errors. In addition to using a relaxation loop, the logical validation is complemented with so-called 'shallow' linguistic criteria (like the degree of lexical overlap between question and answer passage) in order to gain more robustness. A machine learning (ML) approach integrates the resulting criteria for result quality and generates a local score that judges the quality of the considered support passage (and possibly also the quality of the extracted exact answer string if such extraction takes place). In the event that a given answer is supported by several support passages, the evidence provided by the diverse support passages is aggregated in order to improve the ranking of the answer. This aggregation mechanism, which proved effective in <ref type="bibr" coords="3,258.85,601.61,9.96,8.74" target="#b3">[4]</ref>, was also used in ResPubliQA because we wanted the system to benefit from aggregation. Since ResPubliQA only requires answer paragraphs but no further answer extraction, extracted precise answer strings were dropped after aggregation, and only the best validated paragraph for each question (according to the aggregated evidence) was included into the ResPubliQA result.</p><p>Despite its use of logical knowledge processing, the response times of LogAnswer are in the order of a few seconds. This is possible because the time-consuming linguistic analysis of all documents is performed prior to indexing. Therefore the retrieval module can immediately provide all retrieved answer passages together with their pre-computed semantic analysis (in the form of a MultiNet <ref type="bibr" coords="3,90.00,709.21,10.30,8.74" target="#b7">[8]</ref>). Before logical processing of any retrieved passage starts, LogAnswer computes a set of shallow linguistic features that can be assessed very quickly. These shallow features are utilized by an ML approach for a first ranking of the retrieved passages. Depending on the specified time limit for answering the question, only the best passages according to this ranking are subjected to further The general architecture of LogAnswer was presented in <ref type="bibr" coords="4,361.44,312.05,9.96,8.74" target="#b0">[1]</ref>. Some experiments concerning robustness are described in <ref type="bibr" coords="4,212.50,324.00,10.52,8.74" target="#b2">[3,</ref><ref type="bibr" coords="4,226.66,324.00,7.01,8.74" target="#b4">5]</ref>. Details on the E-KRHyper prover used by LogAnswer can be found in <ref type="bibr" coords="4,130.28,335.96,9.96,8.74" target="#b8">[9]</ref>. The current state of the system, including optimizations of the prover, the current set of features used for ranking candidates, and the ML technique used for learning the ranking, is described in <ref type="bibr" coords="4,155.73,359.87,9.96,8.74" target="#b1">[2]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Improvements of Document Analysis and Indexing</head><p>In the following, we describe the improvements and extension of the LogAnswer prototype that were added for ResPubliQA 2009. We begin by explaining changes related to document analysis and indexing. Following that, we detail the changes that affect question processing.</p><p>Optimization of the WOCADI Parser for Administrative Language LogAnwer uses the WOCADI parser <ref type="bibr" coords="4,185.67,467.91,10.52,8.74" target="#b6">[7]</ref> for a deep syntactic-semantic analysis of documents and questions. As shown by Table <ref type="table" coords="4,165.58,479.86,3.87,8.74" target="#tab_0">1</ref>, the administrative language found in the JRC Acquis corpus poses severe problems to the parser: While more than half of the sentences in the German Wikipedia and in the German news corpora of the earlier CLEF evaluations are assigned a full parse, this number decreases to 26.2% for JRC Acquis. A similar picture arises if we consider all sentences that have at least a partial parse (see 'partial parse' column in Table <ref type="table" coords="4,351.64,527.69,3.87,8.74" target="#tab_0">1</ref>). Several steps were taken in order to increase the parsing rate (and thus obtain logical representations for more sentences). First of all, an umlaut reconstruction technique was added -we noticed that German umlaut characters ä, ö, ü and also the character ß were often expanded into ae, oe, ue and ss in the texts, which resulted in parsing errors. Another observation was that many sentences in the corpus are fully capitalized. In order to improve the parsing rate for these sentences, the case sensitivity of the parser was switched off for sentences where the proportion of fully capitalized words exceeds a certain threshold.</p><p>Another problem are the complex names of regulations, resolutions etc. that abound in administrative texts. An example of such a regulation name is "(EWG) Nr. 1408/71 <ref type="bibr" coords="4,442.77,635.28,11.46,8.74" target="#b2">[3]</ref>". References to such legal documents and specific sections thereof (e.g. paragraphs, articles) are highly domain specific and difficult to analyze for a general-purpose parser. In order to improve the quality of parsing results, the texts from the JRC corpus were subjected to a preprocessing step that recognizes complex names of legal documents. <ref type="foot" coords="4,291.44,681.53,3.97,6.12" target="#foot_0">6</ref> To this end, we employed an n-gram-model considering the current token and up to three previous tokens. To account for data sparsity, the total probability of a token belonging to a section or not is estimated by a log-linear model summing up the logarithmic probabilities for unigrams, bigrams, trigrams and four-grams. The semantic representation of the complex name is then filled into the parsing result.</p><p>As shown by the 'adjusted parser' row in Table <ref type="table" coords="5,313.87,135.93,3.87,8.74" target="#tab_0">1</ref>, the various changes and adjustments of the WOCADI parser achieved a relative gain of 12.6% in the rate of full parses, and of 5.6% for partial parses. Even with these improvements, only 29.5% of the sentence in the JRC Acquis corpus are assigned a full parse (and thus a useful logical representation for the prover of LogAnswer to operate on). This made it very clear that the extension of LogAnswer by techniques for handling non-parseable sentences had to be enforced for ResPubliQA.</p><p>Indexing Sentences with a Failed Parse In the first LogAnswer prototype, only sentences with a full parse were indexed. Clearly such an approach is not possible for JRC Acquis since too much content would be lost. We therefore allowed sentences with a failed or poor parse to be indexed as well. This was a non-trivial task since LogAnswer not only indexes the lexical concepts that occur in a sentence. As described in [6], the system also indexes the possible answer types found in the sentences. Since the existing solution for extracting answer types was specialized on sentences with a full parse, it had to be complemented with fallback methods that can recognize expressions of the interesting types in arbitrary sentences. Based on trigger words, regular expressions, and a custom LALR grammar for recognizing numeric expressions, temporal expressions, and measurements, the system can now reliably judge if a sentence from one of the documents contains one of the answer types of interest and index the sentence accordingly. A parse of the sentence is no longer required for answer type extraction.</p><p>We also tried to complement the special treatment of regulation names described above by a method that helps for non-parseable sentences. To this end, the tokenization computed by the WOCADI parser was enriched by the results of two additional tokenizers: the GermanAnalyzer of Lucene, and a special tokenizer for recognizing email addresses and URLs. In those cases where a token found by these special tokenizers is not contained in a token found by WOCADI, it was additionally used for indexing.</p><p>Support for New Question Categories Support for the new question types PROCEDURE, PURPOSE, and REASON has also been added to LogAnswer. For that purpose, trigger words (and sometimes more complex patterns applied to the morpho-lexical analysis of the sentences) were formulated. They are used for recognizing sentences that describe methods, procedures, reasons, purposes, or goals. If the presence of one of the new answer types is detected in a sentence, then the answer type is also indexed for that sentence. Based on the answer type indexing, Log-Answer can systematically retrieve sentences of the intended type, which helps focusing retrieval on the most promising sentences.</p><p>Apart from supporting the new question categories, the treatment of questions of the familiar types has also been improved. For example, we have experimented with the use of the Eurovoc<ref type="foot" coords="5,508.53,556.76,3.97,6.12" target="#foot_1">7</ref> thesaurus, by indexing all sentences that contain a known abbreviation from Eurovoc and its definition with a special ABBREV marker. Including this kind of knowledge had no effect on the ResPubliQA results, however, since there was no question involving an abbreviation from Eurovoc in the test set.</p><p>Beyond Indexing Individual Sentences One novel aspect of ResPubliQA was the requirement to submit answers in the form of full paragraphs. This suggests using retrieval on the paragraph level, or at least including some information beyond the sentence level so that questions can still be answered when the relevant information is scattered over several sentences. While LogAnswer was originally based on sentence-level indexing, we have now added an alternative paragraph-level index and also a document-level index. Moreover a special treatment for anaphoric pronouns has been implemented. The WOCADI parser used by LogAnswer also includes a coreference resolver (CORUDIS, see <ref type="bibr" coords="5,259.66,715.74,10.29,8.74" target="#b6">[7]</ref>). Whenever CORUDIS establishes an antecedent for a pronoun, the description of the antecedent is used for enriching the description of the considered sentence in the index. For example, if the sentence to be indexed contains an occurrence of the pronoun 'sie' that refers to 'Bundesrepublik Deutschland', then 'Bundesrepublik' and 'Deutschland' are also added to the index. Moreover the sentence is tagged as containing an expression that corresponds to the name of a country.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Improvements of Question Processing</head><p>In the following, we describe the changes to LogAnswer that affect the processing of a given question.</p><p>Improved Syntactic-Semantic Parsing of the Question The linguistic analysis of the question obviously profits from the adjustments of the WOCADI parser to administrative texts as well. In particular, references to (sections of) legal documents in a question are treated in a way consistent with the treatment of these constructions in the corresponding answer paragraphs. Similarly, the additional tokenizers used for segmenting the texts are also applied to the question in order to generate a matching retrieval query.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Refinement of Question Classification</head><p>The question classification of LogAnswer was extended to recognize the new question categories PROCEDURE, REASON, PURPOSE introduced by RespubliQA. Rules that cover some special cases of factoid questions (e.g. questions asking for a theme/topic and questions asking for preconditions/modalities) were also added. Moreover, the improvement of the question classification involved the inclusion of new rules for existing question types. For example, LogAnswer now supports additional ways of expressing definition questions. Overall, the number of classification rules increased from 127 to 165. The refinement of the question classification rules was based on a total of 1285 test cases, including translations of all questions from the ResPubliQA 2009 development set.</p><p>Note that there was no time for adapting the background knowledge of LogAnswer to the new question types (for example by adding logical rules that link various ways of expressing reasons or purposes). Thus the only effect of the new classification rules is the recognition of the expected answer type, and the possible elimination of expressions like 'Warum' (why) or 'Was ist der Grund' (What is the reason) that do not contribute anything to the meaning of the question beyond specifying the question category. The resulting core query and the expected answer type then form the basis for retrieving potential answer paragraphs.</p><p>Querying the Enriched Index The retrieval step profits from all improvements described in the subsection on document analysis and indexing. Since many of the validation features used by LogAnswer are still sentence-based, the sentence-level index was queried for each question in order to fetch the logical representation of 100 candidate sentences. <ref type="foot" coords="6,361.52,557.20,3.97,6.12" target="#foot_2">8</ref> For experiments on the effect of paragraph-level and document-level indexing, the 200 best paragraphs and the 200 best documents for each question were also retrieved.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Changes in the Computed Features</head><p>In the experiments, the validation features already described in <ref type="bibr" coords="6,146.90,620.54,10.52,8.74" target="#b1">[2]</ref> were used, with some refinements concerning the way in which the features are computed. In particular, the descriptors and the found answer types provided by the coreference resolution of pronouns are now included in features that depend on the matching of descriptors or of the expected vs. found answer types. Moreover the features have been generalized to retrieved sentences with a failed parse.</p><p>Improved Estimation of Validation Scores One of the main lessons from QA@CLEF08 concerning the first LogAnswer prototype was the inadequacy of the earlier ML approach for determining validation scores. After analysing the problem, we came up with a new solution based on rank-optimizing decision trees; see <ref type="bibr" coords="7,290.18,252.83,10.52,8.74" target="#b1">[2]</ref> for a description of the new method and some experimental results. As observed in [6], switching from the earlier ML approach to the new models yielded a 50% gain in the accuracy of LogAnswer on the QA@CLEF 2008 test set for German. The same models based on kMRR-optimizing decision trees for k = 3 were also used for generating the ResPubliQA runs of LogAnswer. <ref type="foot" coords="7,311.97,299.07,3.97,6.12" target="#foot_3">9</ref> The resulting evaluation scores based on the evidence from individual sentences are then aggregated as described in <ref type="bibr" coords="7,401.66,312.60,9.96,8.74" target="#b3">[4]</ref>.</p><p>Optimization of the c@1 Score The main evaluation metric of ResPubliQA, i.e. the c@1 score<ref type="foot" coords="7,111.67,348.88,7.94,6.12" target="#foot_4">10</ref> , rewards QA systems that validate their answers and prefer not answering over presenting a wrong answer. In order to push the c@1 score of LogAnswer, a threshold was applied to the validation score of the best answer paragraph. The idea is that results with a low validation score should rather be dropped since their probability of being correct is so low that showing these results would reduce the c@1 score of LogAnswer. The threshold for accepting the best answer, or refusing to answer if the aggregated score falls below the threshold, was chosen such as to optimize the c@1 score of LogAnswer on the ResPubliQA development set. To this end, the ResPubliQA 2009 development set was translated into German, and LogAnswer was run on the translated questions. The subsequent determination of the optimum threshold resulted in θ = 0.08 to be chosen, achieving a c@1 score of 0.58 on the training set. <ref type="foot" coords="7,330.23,456.48,7.94,6.12" target="#foot_5">11</ref> Once a retrieved sentence with top rank is evaluated better than the acceptance threshold, the corresponding paragraph that contains the sentence is determined and returned as the final result of LogAnswer for the question of interest.</p><p>Adjustments of Resources and Background knowledge Compared to QA@CLEF 2008, there were few changes to the background knowledge of LogAnswer (see <ref type="bibr" coords="7,415.80,519.81,10.52,8.74" target="#b1">[2,</ref><ref type="bibr" coords="7,430.38,519.81,7.20,8.74">6]</ref>). Only 150 new synonyms were added. Apart from that, the logical rules and lexical-semantic relations that form the background knowledge of LogAnswer were kept stable. We have formalized a system of logical rules for treating idiomatic expressions and support verb constructions, but this extension was not yet integrated at the time of the ResPubliQA evaluation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Results on the ResPubliQA 2009 Test Set for German</head><p>The results of LogAnswer in ResPubliQA 2009 and results of the two official baseline runs are shown in Table <ref type="table" coords="7,160.52,634.35,3.87,8.74" target="#tab_1">2</ref>. The first run, loga091dede, used the standard configuration of LogAnswer as described in the previous section, including the use of the logic prover for computing logic-based features. In the second run, loga092dede, the prover was deliberately switched off and only the The second run thus demonstrates the fallback performance of LogAnswer when no logic-based processing is possible. Both runs are based on the same results of the retrieval module using the sentence-level index. Considering the number of questions with a correct candidate paragraph on top position, the logic-based run loga091dede performed best, followed by the shallow LogAnswer run and then the baseline runs base092dede and base091dede. According to a quick comparison of the runs using McNemar's test, both LogAnswer runs are significantly better than base091dede with respect to #right cand. (p &lt; 0.05), while the difference with respect to base092dede is not significant. On the other hand, LogAnswer clearly outperforms both baselines with respect to the c@1 score of ResPubliQA that also takes validation quality into account.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Error Analysis and Discussion</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Strengths and Weaknesses of LogAnswer</head><p>In order to get a general impression of the strong and weak points of LogAnswer, we have prepared a breakdown of results by question category. As shown in Table <ref type="table" coords="8,354.69,411.11,3.87,8.74" target="#tab_2">3</ref>, LogAnswer performed particularly well for FACTOID and REASON questions, with results clearly better than the average accuracy of 0.40 of both runs. The new type of PURPOSE questions performed only slighlty worse than average. However, for PROCEDURE and DEFINITION questions the results are not satisfactory.</p><p>There are several reasons for the disappointing results of LogAnswer for definition questions. First of all, LogAnswer is known to perform better for factoid questions anyway. This is because the training set used for learning the validation model of LogAnswer contains annotated results of LogAnswer for the QA@CLEF 2007 and QA@CLEF 2008 questions. These question sets include too few definition questions to allow successful application of our machine learning technique. As a result, the model for factoids (that was also used for questions of the new ResPubliQA types) is much better than the validation model used for definition questions.</p><p>Another factor is the discernment between definitions proper and references to definitions. It is quite common in regulations to define a concept by reference to a certain other document where the relevant definition can be found. An example is "Dauergrünland": "Dauergrünland" im Sinne von Artikel 2 Absatz 2 der Verordnung (EG) Nr. 795/2004 der Kommission. ("Permanent pasture" shall mean "permanent pasture" within the meaning of Article 2 point (2) of Commission Regulation (EC) No 795/2004) Since in regulations, ordinary definitions and definitions by reference serve the same purpose, it was not clear to us that definitions by reference would not be accepted as answers to a definition question. LogAnswer did not filter out such references to definitions which resulted in several wrong answers.</p><p>The most important cause of failure with respect to definition questions, however, was the way in which definitions are expressed in the JRC Corpus. A typical definition in a regulation looks like this: This domain-specific style of expressing definitions was not systematically recognized by Log-Answer. This had catastrophic consequences with respect to the results of LogAnswer for definition questions because the retrieval queries for definition questions are expressed in such a way that only sentences containing a recognized definition are returned. Therefore many of the definitions of interest were totally skipped simply because this particular way of defining a concept was not recognized as expressing a definition. The obvious solution is making the requirement that retrieved sentences contain contain a recognized definition an optional rather than obligatory part of the retrieval query. In addition, more ways of expressing definitions should be recognized. The poor performance of LogAnswer for PROCEDURE questions reflects the difficulty of recognizing sentences that express procedures in the documents, as needed for guiding retrieval to the relevant sentences. Compared to the recognition of sentences that express reasons or purposes, we found this task much harder for procedures. It also happened several times that LogAnswer returned a reference to a procedure instead of the description of the procedure itself as an answer. Since we did no anticipate that this kind of result would be judged incorrect, we did not add a filter that eliminates such answers by reference.</p><p>A breakdown of the results for FACTOID questions by their expected answer type is shown in Table <ref type="table" coords="9,117.80,451.53,3.87,8.74" target="#tab_3">4</ref>. Questions for country names were either classified LOCATION or ORG(ANIZATION) depending on the question. Questions of the OTHER and OBJECT types were lumped together since LogAnswer does not internally distinguish these types. Due to the small numbers of questions for some of the answer types, it is hard to interpret the results, but it appears that LogAnswer worked especially well for ORGANIZATION and LOCATION questions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Effectiveness of Individual Improvements</head><p>Success of Linguistic Analysis We have already shown in Table <ref type="table" coords="9,403.24,545.62,4.98,8.74" target="#tab_0">1</ref> how the improvements of WOCADI have affected the parse rate for documents in the JRC corpus. But the number of sentences in the corpus with a full parse (or even a partial parse) is still low, and this has motivated our focus on developing fallback solutions for LogAnswer that will also work for nonparseable sentences. Fortunately, the questions in the ResPubliQA test set for German were much easier to parse than the administrative documents in the JRC corpus: The WOCADI parser was able to generate a full parse for 450 questions, and a chunk parse for 32 questions, so the full parse rate was 90% and the partial parse rate (including chunk parses) was 96.4%. Thus, the success rate of linguistic analysis for the questions in the ResPubliQA test set was very high. This is important since the question classification depends on the availability of a parse of the question. Note that 17 questions in the test set contain typographic or grammatical errors. The full parse rate for these ill-formed questions was only 48% and the partial parse rate was 65%. This demonstrates a clear negative effect of these ill-formed sentences on the success of parsing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Recognition of References to Legal Documents</head><p>The ResPubliQA test set contained 15 questions with references to legal documents that should be found by our n-gram based recognizer for such references. In fact, 13 of these expressions were correctly identified, while two expressions were not recognized due to gaps in the training data. The ResPubliQA test set further contained four questions with sloppy, abbreviated references to regulations, e.g. question 146, 'Warum sollte 821/68 aufgenommen werden?' (Why should 821/68 be adopted?) Obviously the interpretation of 821/68 as a reference to a regulation is highly domain specific. Since LogAnswer is supposed to work in arbitrary domains, it cannot be expected to treat this case correctly. However, apart from such abbreviated references that demand a special solution limited to JRC Acquis, the recognition rate of LogAnswer for references to legal documents was satisfactory. The positive effect of a correctly recognized reference is that the parser has a better chance of analyzing the question, in which case the proper interpretation of the reference to the document is inserted into the generated semantic representation. Moreover, since the recognized document names are indexed, retrieval will be guided to the proper results when the complex name is recognized as a single token.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Use of Additional Tokenizers</head><p>The special treatment of references to legal documents is only effective for parseable sentences. However, some of these references are also covered by the additional tokenizers that have been integrated into LogAnswer. For example, the GermanAnalyzer of Lucene that serves as one of the auxiliary tokenizers correctly analyzes 821/68 as consisting of a single token. When applied to the questions in the ResPubliQA 2009 test set, these tokenizers contributed tokens not found by WOCADI for 21 questions. Specifically, the auxiliary tokenizers produced useful tokens for all questions involving references to legal documents, including the four questions that contain abbreviated references to regulations. The benefit of analyzing 821/68 as a single token is, again, the increased precision of the retrieval step compared to using a conjunction of the two descriptors 821 and 68 in the retrieval query.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Effectiveness of Changes to the Retrieval Module</head><p>The most substantial change to the retrieval subsystem of LogAnswer that we introduced for ResPubliQA was the inclusion of sentences with a failed or poor parse into the index. Considering the 202 correct top-ranked paragraphs that were found in the loga091dede run, we notice that only 49 of these answers was based on the retrieval of a sentence of the paragraph with a full parse, while 106 correct answers were based on a retrieved sentence with a chunk parse (incomplete parse), and 47 correct answers were based on a retrieved sentence with a failed parse. A similar picture arises for loga092dede where 56 correct answers were based on a retrieved sentence with a full parse, 100 answers based on a sentence with a chunk parse, and 43 correct answers were based on the retrieval of a sentence with a failed parse. This clearly demonstrates that extending the index beyond sentences with a full parse was essential for the success of LogAnswer in the ResPubliQA task.</p><p>When we checked the baseline results and Gold standard results<ref type="foot" coords="10,394.48,520.89,7.94,6.12" target="#foot_6">12</ref> for German, we noticed that the subset of JRC Acquis that we used for generating the LogAnswer runs differs from the JRC Acquis subset that can now be downloaded from the ResPubliQA web page, most likely due to a version change that escaped our attention. As a result, 74 documents of the current subset are missing in the index of LogAnswer. This difference in the considered subset of JRC Acquis resulted in the loss of up to four possible correct answers which are present in the Gold standard or the baseline runs but not represented in the index of LogAnswer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Success Rate of Question Classification</head><p>The question classification plays an important part in LogAnswer: it not only decides which phrases in a retrieved snippet can potentially answer the question, but also affects the retrieval process since possible matches with the question categories and expected answer types are also indexed. In order to assess the reliability of the classification rules of LogAnswer and their coverage of the new question categories, we have determined the success rate of the question classification of LogAnswer, as shown in Table <ref type="table" coords="10,439.65,679.87,3.87,8.74" target="#tab_4">5</ref>. Note that the correctness of the recognized question category and (for factoid questions) also the correct recognition of the expected answer type was checked. Results for the subset of questions of a given category that have a full parse are also shown. These results are especially instructive since the The table shows that the question classification works as expected for DEFINITION questions, REASON questions and FACTOIDS. While LogAnswer achieved an acceptable (but average) recognition rate for PURPOSE questions, the recognition rate for PROCEDURE questions was very low. These findings for PURPOSE and PROCEDURE questions can be attributed to a few missing trigger words that control the recognition of these types. For example, 'Zielvorstellung' (objective) was not included in the list of PURPOSE triggers and 'Verfahren' (process) was not included in the list of PROCEDURE triggers. Another problem were nominal compounds of trigger words, such as Arbeitsverfahren (working procedure) or Hauptaufgabe (main task). Both problems are easy to fix. It is sufficient to add the few missing trigger words, and to allow nominal compounds that modify a known trigger word as additional trigger words for the corresponding question category.</p><p>Effect of Correct Question Classification on Results Since ResPubliQA does not require exact answer phrases to be extracted, one may ask if the recognition of question categories and the identification of the expected answer type are still essential for finding correct answers. We have checked this dependency for the loga091dede run. We found that for all question categories except for definition questions, the accuracy of results was better for questions that were classified correctly. However, the observed difference between the accuracy for correctly classified and misclassified questions of a given category never exceeded 6%. A surprising result was obtained for definition questions where the accuracy for the 14 misclassified questions was 0.36, while for the 81 definition questions that were correctly classified, the accuracy was only 0.14. This once again points to a problem in the processing of definition questions. The main difference in the treatment of both cases is the form of the retrieval query: if the question is recognized as a definition question, then an obligatory condition is added to the retrieval query that cuts off all sentences except those known to contain a definition. On the other hand, if a definition question is not recognized as such, then this obligatory requirement is skipped. This suggests that the obligatory condition should be dropped, or turned into an optional part of the retrieval query. Further experiments are needed in order to determine the most suitable approach.</p><p>Selection of Acceptance Threshold When generating the runs for ResPubliQA, a threshold of θ = 0.08 was used for cutting off poor answers with a low validation score. In retrospect, we can say that the optimum threshold for loga091dede would have been θ = 0.11, resulting in a c@1 score of 0.45 instead of 0.44. For loga092dede, the optimum threshold would have been θ = 0.09. This threshold also yields a c@1 score of 0.44 after rounding to two significant digits. These findings confirm that the method for determining thresholds for accepted results (by choosing the threshold that maximizes the c@1 score on the development set) was effective. The threshold θ = 0.08 determined in this way was close to the best choices, and it resulted in c@1 scores that were very close to the theoretical optima. One of the features used for determining the validation score of a retrieved sentence is the original retrieval score of the Lucene-based retrieval module of LogAnswer. In order to assess the potential benefit of paragraph-level and document-level indexing, we have prepared additional experiments based on different choices for the corresponding irScore feature. Suppose that c is a retrieved candidate sentence. Then the following variants have been tried: irScore s (c) (the original retrieval score on the sentence level), irScore p (c) (the retrieval score of the paragraph that contains sentence c), irScore d (c) (the retrieval score of the document that contains c), and also the following combinations based on the arithmetic mean: irScore ps (c) = 1 2 irScore p (c) + 1 2 irScore s (c), irScore ds (c) = 1  2 irScore d (c) + 1 2 irScore s (c), irScore dp (c) = 1 2 irScore d (c) + 1 2 irScore p (c), and finally irScore dps (c) = 1  3 (irScore d (c) + irScore p (c) + irScore s (c)). The corresponding results of LogAnswer are shown in Table <ref type="table" coords="12,178.00,402.17,3.87,8.74" target="#tab_5">6</ref>; note that the irScore s configuration corresponds to loga091dede. As witnessed by the poor results for irScore d compared to the other configurations, the system obviously needs either sentence-level or paragraph-level information in order to be able to select correct answer paragraphs (this was not clear in advance because LogAnswer also uses other sentencelevel features). The results for the remaining configurations are very similar and do not justify a clear preference for a specific choice. In order to better exploit the information available on the paragraph and document level, we will therefore experiment with further changes to LogAnswer. This will involve the incorporation of intersentential information in other validation features, and a retraining of the validation model for the resulting system configurations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>The paper has described the current setup of the LogAnswer QA system and the changes that were made for ResPubliQA 2009. A detailed analysis of the results of LogAnswer in the ResPubliQA task has shown that most improvements were effective, but it has also revealed a problem in the treatment of definition questions and gaps in the classification rules for PURPOSE and PRO-CEDURE questions that will now be fixed. With its accuracy of 0.40 and c@1 metric of 0.44, LogAnswer scored better than the official baseline runs of ResPubliQA for German.</p><p>The LogAnswer prototype is also available online<ref type="foot" coords="12,324.92,622.73,7.94,6.12" target="#foot_7">13</ref> and in actual use, the system generally presents the five top-ranked results for the given question instead of a single result. In order to assess to usefulness of LogAnswer on the ResPubliQA test set under these more realistic conditions, we have annotated the five top ranked paragraphs for each question. We then determined the MRR (mean reciprocal rank), cutting off after the first five answers, and the number of questions for which the system presents at least one correct result in the top-five list of answers shown to the user. For loga091dede an MRR of 0.48 was obtained. 14 Moreover, 60% of the questions are answered by one of the paragraphs in the top-five list. If we ignore the definition questions that</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" coords="4,90.00,118.94,423.00,189.89"><head>Table 1 :</head><label>1</label><figDesc>Parsing rate of WOCADI for JRC-Corpus before and after robustness enhancements and adjustment to administrative German. Results for the German CLEF news corpus and Wikipedia are shown for comparison. The 'partial parse' column includes both full and chunk parses</figDesc><table coords="4,90.00,160.22,423.00,148.61"><row><cell>Corpus</cell><cell cols="2">full parse partial parse</cell></row><row><cell>JRC-Acquis (original parser)</cell><cell>26.2%</cell><cell>54.0%</cell></row><row><cell>JRC-Acquis (adjusted parser)</cell><cell>29.5%</cell><cell>57.0%</cell></row><row><cell>CLEF News</cell><cell>51.8%</cell><cell>84.1%</cell></row><row><cell>Wikipedia (Nov. 2006)</cell><cell>50.2 %</cell><cell>78.6%</cell></row><row><cell cols="3">logical processing and validation. Exact answer strings are extracted from the variable bindings</cell></row><row><cell cols="3">determined by proving the question representation from the representation of the support passage.</cell></row><row><cell cols="3">Therefore every extracted precise answer is already logically validated. Compared to the usual</cell></row><row><cell cols="3">generate-and-test paradigm of extracting a large number of potential answer strings that are then</cell></row><row><cell cols="2">validated, this approach means a great efficiency advantage.</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" coords="7,90.00,118.94,423.00,98.79"><head>Table 2 :</head><label>2</label><figDesc>Results of LogAnswer in ResPubliQA. Note that #right cand. is the number of correct paragraphs on top-1 position before applying the acceptance threshold and accuracy = #right</figDesc><table coords="7,90.00,142.85,324.18,74.88"><row><cell>cand./#questions</cell><cell></cell><cell></cell><cell></cell></row><row><cell>run</cell><cell cols="3">#right cand. accuracy c@1 score</cell></row><row><cell>loga091dede</cell><cell>202</cell><cell>0.40</cell><cell>0.44</cell></row><row><cell>loga092dede</cell><cell>199</cell><cell>0.40</cell><cell>0.44</cell></row><row><cell>base091dede</cell><cell>174</cell><cell>0.35</cell><cell>0.35</cell></row><row><cell>base092dede</cell><cell>189</cell><cell>0.38</cell><cell>0.38</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" coords="8,90.00,118.94,423.00,106.21"><head>Table 3 :</head><label>3</label><figDesc>Accuracy by question category</figDesc><table coords="8,90.00,136.31,423.00,88.84"><row><cell>Run</cell><cell cols="5">DEFINITION FACTOID PROCEDURE PURPOSE REASON</cell></row><row><cell></cell><cell>(95)</cell><cell>(139)</cell><cell>(79)</cell><cell>(94)</cell><cell>(93)</cell></row><row><cell>loga091dede</cell><cell>0.168</cell><cell>0.547</cell><cell>0.291</cell><cell>0.362</cell><cell>0.570</cell></row><row><cell>loga092dede</cell><cell>0.137</cell><cell>0.554</cell><cell>0.291</cell><cell>0.362</cell><cell>0.559</cell></row><row><cell cols="6">'shallow' features that do not depend on the results of logical processing were used for validation.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" coords="9,98.91,118.94,405.19,130.12"><head>Table 4 :</head><label>4</label><figDesc>Accuracy by expected answer types for the FACTOID category Hopfenpulver: Das durch Mahlen des Hopfens gewonnene Erzeugnis, das alle natürlichen Bestandteile des Hopfens enthält. (Hop powder: the product obtained by milling the hops, containing all the natural elements thereof)</figDesc><table coords="9,98.91,136.31,405.19,45.00"><row><cell>Run</cell><cell cols="7">COUNT LOCATION MEASURE ORG OTHER PERSON TIME</cell></row><row><cell></cell><cell>(3)</cell><cell>(8)</cell><cell>(16)</cell><cell>(14)</cell><cell>(80)</cell><cell>(3)</cell><cell>(16)</cell></row><row><cell>loga091dede</cell><cell>0.33</cell><cell>0.75</cell><cell>0.56</cell><cell>0.71</cell><cell>0.51</cell><cell>1.00</cell><cell>0.44</cell></row><row><cell>loga092dede</cell><cell>0.33</cell><cell>1.00</cell><cell>0.56</cell><cell>0.71</cell><cell>0.50</cell><cell>1.00</cell><cell>0.44</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" coords="11,90.00,119.49,423.00,166.54"><head>Table 5 :</head><label>5</label><figDesc>Success rate of question classification (class-all is the classification rate for arbitrary questions and class-fp the classification rate for questions with a full parse) on the parse of a question. Therefore the rules should work reliably on questions with a full parse (but not necessarily for the remaining questions).</figDesc><table coords="11,90.00,149.37,349.22,124.70"><row><cell>Category</cell><cell cols="4">#questions class-all #full parse class-fp</cell></row><row><cell>DEFINITION</cell><cell>95</cell><cell>85.3%</cell><cell>93</cell><cell>87.1%</cell></row><row><cell>REASON</cell><cell>93</cell><cell>73.3%</cell><cell>82</cell><cell>85.4%</cell></row><row><cell>FACTOID</cell><cell>139</cell><cell>70.5%</cell><cell>117</cell><cell>76.9%</cell></row><row><cell>PURPOSE</cell><cell>94</cell><cell>67.0%</cell><cell>86</cell><cell>72.1%</cell></row><row><cell>PROCEDURE</cell><cell>79</cell><cell>20.3%</cell><cell>72</cell><cell>22.2%</cell></row><row><cell>(total)</cell><cell>500</cell><cell>65.6%</cell><cell>450</cell><cell>70.9%</cell></row><row><cell>classification rules operate</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" coords="12,90.00,118.94,418.13,154.41"><head>Table 6 :</head><label>6</label><figDesc>Experimental Results using Paragraph-Level and Document-Level Indexing</figDesc><table coords="12,90.00,136.31,418.13,137.04"><row><cell>run</cell><cell cols="2">#right cand. accuracy</cell></row><row><cell>irScore ps</cell><cell>205</cell><cell>0.41</cell></row><row><cell>irScore s</cell><cell>202</cell><cell>0.40</cell></row><row><cell>irScore dps</cell><cell>198</cell><cell>0.40</cell></row><row><cell>irScore p</cell><cell>196</cell><cell>0.40</cell></row><row><cell>irScore dp</cell><cell>191</cell><cell>0.39</cell></row><row><cell>irScore ds</cell><cell>190</cell><cell>0.38</cell></row><row><cell>irScore d</cell><cell>136</cell><cell>0.28</cell></row><row><cell cols="3">4.3 Experiments with Paragraph-Level and Document-Level Indexing</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_0" coords="4,105.24,725.94,407.76,6.99;4,90.00,735.41,276.47,6.99"><p>Many thanks to Tim vor der Brück for developing and training the recognizer for legal document names, and to Sven Hartrumpf for adjustments and extension of the WOCADI parser.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_1" coords="5,105.24,747.19,105.85,6.64"><p>http://europa.eu/eurovoc/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_2" coords="6,105.24,737.09,407.76,6.99;6,90.00,746.56,97.21,6.99"><p>LogAnswer is normally configured to retrieve 200 candidate sentences but in the ResPubliQA runs, only 100 were retrieved by mistake.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_3" coords="7,105.24,677.19,407.75,6.99;7,90.00,686.66,423.00,6.99;7,90.00,696.12,423.00,6.99;7,90.00,705.59,143.90,6.99"><p>Note that these models were obtained from a training set with annotations for LogAnswer results for the QA@CLEF 2007 and 2008 questions. We did not try and learn special models for ResPubliQA based on the ResPubliQA development set since annotating results from the JRC Acquis corpus seemed too difficult and tedious for a non-expert of EU administration.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_4" coords="7,105.24,715.09,407.76,7.21;7,90.00,725.13,229.64,6.64"><p>see official ResPubliQA guidelines at http://celct.isti.cnr.it/ResPubliQA/resources/guideLinesDoc/ ResPubliQA_09_Final_Track_Guidelines_UPDATED-20-05.pdf</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="11" xml:id="foot_5" coords="7,105.24,734.06,407.75,6.99;7,90.00,743.53,140.83,6.99"><p>This result cannot be directly projected to the ResPubliQA test set, since the development set formed the basis for refining the question classification.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_6" coords="10,105.24,734.66,310.08,7.21"><p>see http://celct.isti.cnr.it/ResPubliQA/index.php?page=Pages/downloads.php</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="13" xml:id="foot_7" coords="12,105.24,726.92,262.02,7.21"><p>see http://www.loganswer.de/, with German Wikipedia as the corpus</p></note>
		</body>
		<back>

			<div type="funding">
<div> <ref type="bibr" coords="2,101.09,698.07,3.65,5.24" target="#b0">1</ref> <p>Funding of this work by the <rs type="funder">DFG (Deutsche Forschungsgemeinschaft)</rs> under contracts <rs type="grantNumber">FU 263/12-1</rs> and <rs type="grantNumber">HE 2847/10-1</rs> (LogAnswer) is gratefully acknowledged. 2 http://celct.isti.cnr.it/ResPubliQA/ 3 Cross-language Geographic Information Retrieval from Wikipedia, see http://www.linguateca.pt/GikiCLEF/ 4 QA on Speech Transcripts, see http://www.lsi.upc.edu/ ~qast/2009/ 5 see http://langtech.jrc.it/JRC-Acquis.html</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_gnnaxPs">
					<idno type="grant-number">FU 263/12-1</idno>
				</org>
				<org type="funding" xml:id="_6wvzV5D">
					<idno type="grant-number">HE 2847/10-1</idno>
				</org>
			</listOrg>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>were not adequately handled by LogAnswer for the moment, then the system presents at least one correct result for two out of three questions. Perhaps a tool with these characteristics will already be useful for searching information in administrative texts.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct coords="13,110.48,190.70,402.52,8.74;13,110.48,202.65,402.52,8.74;13,110.48,214.61,229.83,8.74" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="13,398.76,190.70,114.24,8.74;13,110.48,202.65,150.35,8.74">LogAnswer -A Deduction-Based Question Answering System</title>
		<author>
			<persName coords=""><forename type="first">Ulrich</forename><surname>Furbach</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Ingo</forename><surname>Glöckner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Hermann</forename><surname>Helbig</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Björn</forename><surname>Pelzer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="13,283.85,202.65,159.75,8.74">Automated Reasoning (IJCAR 2008)</title>
		<title level="s" coord="13,451.85,202.65,61.14,8.74;13,110.48,214.61,88.73,8.74">Lecture Notes in Computer Science</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="139" to="146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="13,110.48,234.53,402.52,8.74;13,110.48,246.49,339.36,8.74" xml:id="b1">
	<analytic>
		<title level="a" type="main" coord="13,330.89,234.53,182.11,8.74;13,110.48,246.49,157.21,8.74">An application of automated reasoning in natural language question answering</title>
		<author>
			<persName coords=""><forename type="first">Ulrich</forename><surname>Furbach</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Ingo</forename><surname>Glöckner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Björn</forename><surname>Pelzer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="13,276.68,246.49,85.36,8.74">AI Communications</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct coords="13,110.48,266.41,402.52,8.74;13,110.48,278.37,402.52,8.74;13,110.48,290.32,109.31,8.74" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="13,180.29,266.41,275.60,8.74">Towards logic-based question answering under time constraints</title>
		<author>
			<persName coords=""><forename type="first">Ingo</forename><surname>Glöckner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="13,478.30,266.41,34.70,8.74;13,110.48,278.37,369.07,8.74">Proc. of the 2008 IAENG Int. Conf. on Artificial Intelligence and Applications (ICAIA-08)</title>
		<meeting>of the 2008 IAENG Int. Conf. on Artificial Intelligence and Applications (ICAIA-08)<address><addrLine>Hong Kong</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="13" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="13,110.48,310.25,402.52,8.74;13,110.48,322.20,43.73,8.74" xml:id="b3">
	<monogr>
		<title level="m" type="main" coord="13,176.81,310.25,290.33,8.74">University of Hagen at QA@CLEF 2008: Answer validation exercise</title>
		<author>
			<persName coords=""><forename type="first">Ingo</forename><surname>Glöckner</surname></persName>
		</author>
		<editor>Peters et al.</editor>
		<imprint>
			<biblScope unit="volume">10</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="13,110.48,342.13,402.52,8.74;13,110.48,354.08,402.52,8.74;13,110.48,366.04,271.54,8.74" xml:id="b4">
	<analytic>
		<title level="a" type="main" coord="13,255.59,342.13,257.41,8.74;13,110.48,354.08,32.90,8.74">Exploring robustness enhancements for logic-based passage filtering</title>
		<author>
			<persName coords=""><forename type="first">Ingo</forename><surname>Glöckner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Björn</forename><surname>Pelzer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="13,169.43,354.08,343.57,8.74;13,110.48,366.04,77.05,8.74">Knowledge Based Intelligent Information and Engineering Systems (Proc. of KES2008, Part I)</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">5117</biblScope>
			<biblScope unit="page" from="606" to="614" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="13,110.48,385.96,402.52,8.74;13,110.48,397.92,171.58,8.74" xml:id="b5">
	<monogr>
		<title level="m" type="main" coord="13,257.19,385.96,255.81,8.74;13,110.48,397.92,19.88,8.74">Combining logic and machine learning for answering questions</title>
		<author>
			<persName coords=""><forename type="first">Ingo</forename><surname>Glöckner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Björn</forename><surname>Pelzer</surname></persName>
		</author>
		<editor>Peters et al.</editor>
		<imprint/>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct coords="13,110.48,417.85,402.52,8.74;13,110.48,429.80,120.56,8.74" xml:id="b6">
	<monogr>
		<title level="m" type="main" coord="13,188.21,417.85,231.43,8.74">Hybrid Disambiguation in Natural Language Analysis</title>
		<author>
			<persName coords=""><forename type="first">Sven</forename><surname>Hartrumpf</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>Der Andere Verlag</publisher>
			<pubPlace>Osnabrück, Germany</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="13,110.48,449.73,402.52,8.74;13,110.48,461.68,65.36,8.74" xml:id="b7">
	<monogr>
		<title level="m" type="main" coord="13,201.06,449.73,307.12,8.74">Knowledge Representation and the Semantics of Natural Language</title>
		<author>
			<persName coords=""><forename type="first">Hermann</forename><surname>Helbig</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="13,110.48,481.61,402.52,8.74;13,110.48,493.56,250.12,8.74" xml:id="b8">
	<analytic>
		<title level="a" type="main" coord="13,293.78,481.61,144.94,8.74">System Description: E-KRHyper</title>
		<author>
			<persName coords=""><forename type="first">Björn</forename><surname>Pelzer</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Christoph</forename><surname>Wernhard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="13,466.39,481.61,46.61,8.74;13,110.48,493.56,151.61,8.74">Automated Deduction -CADE-21, Proceedings</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="508" to="513" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="13,110.48,513.49,402.52,8.74;13,110.48,525.44,402.53,8.74;13,110.48,537.40,258.65,8.74" xml:id="b9">
	<monogr>
		<author>
			<persName coords=""><forename type="first">Carol</forename><surname>Peters</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Thomas</forename><surname>Deselaers</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Nicola</forename><surname>Ferro</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Julio</forename><surname>Gonzalo</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><forename type="middle">F</forename><surname>Gareth</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Mikko</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Thomas</forename><surname>Kurimo</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Anselmo</forename><surname>Mandl</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Vivien</forename><surname>Peñas</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Petras</surname></persName>
		</author>
		<title level="m" coord="13,415.46,525.44,97.54,8.74;13,110.48,537.40,94.97,8.74">Working Notes for the CLEF 2008 Workshop</title>
		<meeting><address><addrLine>Aarhus, Denmark</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-09">September 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="13,110.48,557.32,402.52,8.74;13,110.48,569.28,402.52,8.74;13,110.48,581.23,402.52,8.74;13,110.48,593.19,402.52,8.74;13,110.48,605.14,207.24,8.74" xml:id="b10">
	<analytic>
		<title level="a" type="main" coord="13,427.89,569.28,85.11,8.74;13,110.48,581.23,402.52,8.74;13,110.48,593.19,75.40,8.74">Evaluating Systems for Multilingual and Multimodal Information Access: 9th Workshop of the Cross-Language Evaluation Forum</title>
		<author>
			<persName coords=""><forename type="first">Carol</forename><surname>Peters</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Thomas</forename><surname>Deselaers</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Nicola</forename><surname>Ferro</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Julio</forename><surname>Gonzalo</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><forename type="middle">F</forename><surname>Gareth</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Mikko</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Thomas</forename><surname>Kurimo</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Anselmo</forename><surname>Mandl</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Vivien</forename><surname>Peñas</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Petras</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="13,193.94,593.19,47.99,8.74">CLEF 2008</title>
		<meeting><address><addrLine>Aarhus, Denmark; Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009">September 17-19. 2009</date>
		</imprint>
	</monogr>
	<note>Revised Selected Papers. to appear</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
