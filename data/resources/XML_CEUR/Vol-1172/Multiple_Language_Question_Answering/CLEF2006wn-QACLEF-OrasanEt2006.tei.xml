<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,96.96,148.92,409.27,15.20;1,259.20,170.88,84.61,15.20">A High Precision Information Retrieval Method for WiQA</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName coords="1,205.92,204.62,82.59,8.85"><forename type="first">Constantin</forename><surname>Orȃsan</surname></persName>
							<email>c.orasan@wlv.ac.uk</email>
						</author>
						<author>
							<persName coords="1,310.93,202.57,87.51,10.89"><forename type="first">Georgiana</forename><surname>Puşcaşu</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Currently visiting researcher</orgName>
								<orgName type="institution">University of Alicante</orgName>
								<address>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="laboratory">Research Group in Computational Linguistics</orgName>
								<orgName type="institution">University of Wolverhampton</orgName>
								<address>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,96.96,148.92,409.27,15.20;1,259.20,170.88,84.61,15.20">A High Precision Information Retrieval Method for WiQA</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">2EA5329C43C8F7B2AF8ED43E525E7DBF</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-06-26T15:12+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H.3 [Information Storage and Retrieval]: H.3.1 Content Analysis and Indexing</term>
					<term>H.3.3 Information Search and Retrieval</term>
					<term>H.3.4 Systems and Software</term>
					<term>I.2 [Artificial Intelligence]: I.2.7 Natural Language Processing Measurement, Performance, Experimentation Wikipedia, Information Retrieval</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper presents Wolverhampton University's participation in the WiQA competition. The method chosen for this task combines a high precision, but low recall information retrieval approach with a greedy sentence ranking algorithm. The high precision retrieval is ensured by querying the search engine with the exact topic, in this way obtaining only sentences which contain the topic. In one of the runs, the set of retrieved sentences is expanded using conferential relations between sentences. The greedy algorithm used for ranking selects one sentence at a time, always the one which adds most information to the set of sentences without repeating the existing information too much. The evaluation revealed that it achieves a performance similar to other systems participating in the competition and that the run which uses coreference obtains the highest MRR score among all the participants.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="595.0" lry="842.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The WiQA task (Question Answering using Wikipedia <ref type="bibr" coords="1,336.72,646.46,10.83,8.85" target="#b3">[4]</ref>) has been introduced as a pilot task within the Cross Language Evaluation Forum (CLEF) 2006 campaign with aim of investigating systems' abilities to access information spread throughout the Wikipedia collection related to a given topic (name of a person, location or organisation). The WiQA task participants were given the Wikipedia free online encyclopedia in XML format and the possibility of choosing from three languages: English, Dutch and Spanish. They were also provided with a set of 65 topics, and for each of these topics, they were expected to automatically return a set of ranked sentences The Research Group in Computational Linguistics at the University of Wolverhampton has participated in the English task with a system that employs high precision retrieval and shallow rules to rank candidate passages. Given that this was the first time such a task was proposed, our emphasis was less on fine tuning the system, and more on exploring the issues posed by the task and developing a complete system that can participate in the competition. The main goal of a system participating in the WiQA competition is the extraction of sentences from Wikipedia which contain the most relevant and novel information with respect to the content of the Wikipedia page describing the topic. Therefore, many important issues must be taken into consideration for a WiQA system development. First, it is necessary to identify the topic relevant sentences. Then, in the case of our system, the process of selecting and ranking the most important and novel sentences adopts a greedy strategy that adds to the topic document sentences from the retrieved set that bring the highest information gain. The relevant sentences are then presented as the system's output in the order they were selected.</p><p>This paper presents the outline of our system and the results of its evaluation. The structure of the paper is as follows: Section 2 describes the architecture of the system. The three runs submitted in the competition are described in Section 3. The evaluation results are presented and discussed in Section 4. In the last section, conclusions are drawn and future system enhancements are considered.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">System Description</head><p>WiQA, as a newly introduced pilot task, cannot be characterised by typical approaches for system architecture. Still, three perspectives were foreseen for addressing it: based on Information Retrieval (IR), based on Question Answering (QA) or based on multi-document summarisation capabilities. Our WiQA system is based on IR and its architecture is depicted in Figure <ref type="figure" coords="2,478.26,707.30,3.90,8.85" target="#fig_0">1</ref>.</p><p>The core architecture consists of four components:</p><p>1. high accuracy retrieval engine 2. snippet pre-processor 3. snippet ranking module 4. snippet post-processor</p><p>In the remainder of this section each of these components is described in detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">High accuracy retrieval engine</head><p>The role of this component is to retrieve snippets on the selected topic from Wikipedia and to filter out snippets according to some predefined rules. The information retrieval engine used in our system is Lucene <ref type="bibr" coords="3,165.41,243.98,9.98,8.85" target="#b1">[2]</ref>. Given that the topics referred to named entities such as persons, locations or organisations, it was decided not to process the topic in any way and to query the retrieval engine for the exact string identifying the topic, in this way making sure that we have a high precision retrieval (i.e. all the retrieved snippets contain the string identified by the topic). Given that the majority of topics were unambiguous, most of the retrieved snippets were related to the topic. The drawbacks of this method are that for several topics we were unable to obtain any candidates due to the way the topic was formulated, and that sentences which refer to the topic but do not contain the exact string identifying the topic cannot be extracted in this manner. The former problem appeared for topics such as Ministry of Defence (Singapore), where the string Singapore was provided to disambiguate between different ministries of defence. In this case, when Lucene was queried with the string Ministry of Defence (Singapore), no result was returned.</p><p>Not all the snippets retrieved by the engine can and should be used. The Snippet filtering module filters out snippets which are not appropriate for processing. First of all, the snippets extracted from the topic document have to be filtered out because they should not be considered at all in the ranking process. Depending on the approach taken, snippets from documents directly connected to the topic document can be ignored because it can be argued that they contain information which is easily accessible to the reader of a document. Some of the runs we submitted used this filter.</p><p>In addition to the sentences extracted by our system, it was noticed that there are sentences which refer to the topic, but do not contain the actual string which identifies the topic. As a result, they cannot be extracted by the retrieval engine. Because in the majority of cases, these sentences refer to the topic using a referential expression, a coreference resolution module was added at the Snippet pre-processing stage and used in one of our runs.</p><p>The formatting of Wikipedia also let us to implement some further filters. In some cases the snippets to be extracted are parts of a list and therefore it needs to be decided whether to ignored them, or whether to extract only the item in the list which contains the topic. Our runs used both types of filtering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Snippet pre-processing</head><p>At this stage, both the snippets extracted by the retrieval component and the sentences contained in the Wikipedia page describing the topic are annotated with linguistic information. Conexor's FDG Parser <ref type="bibr" coords="3,148.55,624.98,10.50,8.85" target="#b2">[3]</ref> is used to produce morpho-syntactic information and partial parsing trees for snippets. On the basis of this information, we identify noun phrases (NPs) and verb phrases (VPs), and to convert the snippets into logical forms. We distinguish between several predicates connecting nouns / verbs and corresponding to different syntactic relations, such as the relation between a verb and the head of its subject NP, between a verb and its object NP head, between a verb and its other complements and adjuncts, between two verbs and between two nouns. The derived logical forms have been only superficially employed at the snippet ranking stage, as more investigation is needed into ways of taking better advantage of the information they provide.</p><p>Given that many of the snippets contain named entities which can prove important at the ranking stage, GATE <ref type="bibr" coords="3,186.73,732.62,10.57,8.85" target="#b0">[1]</ref> was used to extract this information. It should be pointed out that the named entity recogniser provided by GATE has been used without any customisation and as a result it failed to recognise a large number of entities. In the future we plan to adapt the named entity recogniser in order to improve its recognition accuracy.</p><p>As already mentioned, not all the snippets relevant to the topic can be extracted by the search engine because they do not contain the topic string. In light of this, a rule based coreference resolver was used to identify sentences related to the topic. The rules implemented referred mainly to presence of a substring from the topic in a sentence following an extracted snippet. For example, in the following sentences:</p><p>(a) After returning home, Liang went on to study with Kang Youwei, a famous Chinese scholar and reformist who was teaching at Wanmu Caotang in Guangzhou.</p><p>(b) Kang's teachings about foreign affairs fueled Liang's interest in reforming China.</p><p>using coreference resolution, it is possible to determine that Kang refers to Kang Youwei, and in addition to sentence (a), sentence (b) should be also extracted as candidate for the Kang Youwei topic. By using coreference resolution it is possible to expand the list of candidate snippets without introducing too much noise.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Snippet ranking</head><p>The Snippet ranking module uses the information obtained at the pre-processing stage by the partial parser and NE recognizer in order to rank the retrieved snippets according to importance and novelty with respect to the topic document. The ranking algorithm is based on a greedy strategy, and proceeds as follows:</p><p>1. Let T be the set of sentences extracted from the Wikipedia page corresponding to the topic, R the set of sentences retrieved from other documents, and C the current set of relevant sentences. C is initially empty (C = ∅).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.</head><p>For each retrieved sentence s ∈ R, calculate the information gain obtained by adding it to the set of topic sentences T unified with the current set of relevant sentences C (how much information do we gain having T∪C∪{s} when compared to T∪C).</p><p>3. Choose the sentence s max ∈ R with the highest information gain score, add it to the set of relevant sentences C, and, at the same time, eliminate it from the set of retrieved sentences (C = C∪{s max }, R = R\{s max }).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.</head><p>Continue selecting sentences that maximise the information gain score by repeating steps 2 and 3 until the maximum information gain value falls below a certain threshold, or until there is no candidate sentence left in R.</p><p>The relevant / novel sentences resulted by applying this algorithm are presented, in the order they were added to set C, as the output of the Snippet ranking module.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Post-processing</head><p>The initial purpose of the Snippet post-processor was to take the results from the Snippet ranking module and produce the XML file to be submitted for evaluation. After a script was written to produce this output, it was noticed that it did not produce the necessary output due to errors introduced by the FDG Parser. Because the input to the FDG tagger contained all kind of unusual characters, in a large number of cases snippets were wrongly split into several sentences. In other cases snippets were merged together even though they were on different lines due to the fact that they did not contain the final full stop. These errors were identified too late to be able to make any changes to the pre-processing module. In light of this, in order to produce the XML output required for the evaluation, a simple overlap measure between the ranked set of relevant sentences, as they were segmented by FDG, and the original snippets has been implemented in order to determine the source document and the snippet IDs, as required in the XML document. Due to the simplicity of this measure, a number of errors have been introduced in the output.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Description of submitted runs</head><p>We have submitted three runs referred to in the following as one, one-old and two. All three systems use the same retrieval engine, named entity recogniser, part-of-speech tagger, partial parser and post-processor. The runs one and one-old have in common the same set of extracted snippets, but the method in which they are ranked differs. For run two the set of snippets is different, but the same ranking method as that in run one is used.</p><p>For runs one and one-old the set of candidate snippets consists of only snippets which contain the topic string, without employing coreference resolution to expand the set. In addition, the sentence candidate set includes items from lists which contain the topic string, but not the whole lists. Snippets from documents directly linked to the topic document were discarded. In contrast, run two employs coreference resolution to extend the set of candidates, does not filter out snippets from documents linked to the topic document, and does not include snippets from lists. As a result of this, the snippets contained less noise, but their number was also reduced.</p><p>The ranking method of run one-old differs from the ranking method of runs one and two in the formula employed for computing the information gain obtained by adding a sentence to a set of sentences. The run one-old uses formula (F1), while the runs one and two use a modified version of (F1) by increasing / decreasing the information gain score according to the following criteria:</p><p>• the score is penalised if no verbs are present in the snippet, or if the number of NEs or the number of occurring years (any 4-digit number greater than 1000 and smaller than 2020 is considered a possible year) are above 20 (if any of these cases apply, there is a high probability the snippet is a list or a list element);</p><p>• a small penalty applies in the case the topic is preceded by a preposition;</p><p>• the sentence is given a bonus if the topic is its subject;</p><p>• the sentence is penalized proportionally with the number of third person pronouns it contains. In the above formula, s and SentSet are the sentence and the sentence set we compute the information gain score for, and t ranges over the set of NEs, nouns, verbs and logical forms present in the sentence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Results and analysis</head><p>As one of the purposes of the WiQA pilot task was to experiment with different measures for evaluating systems' performance, several scores are used at the assessment stage. The evaluation measures used were: yield, average yield per topic, MRR and precision at top 10 snippets and were proposed by the organisers of the task. Yield represents the total number of supported, important, novel and non-repeated snippets for all topics. Average yield per topic is the yield divided by the number of topics. Another simple measure used was the Mean Reciprocal Rank (MRR) of the first supported, important, novel and non-repeated snippet among the top 10 returned, according to the system's ranking. The last evaluation measure was overall precision, calculated as the percentage of supported, novel, non-repetitive, important snippets among the submitted set. Table <ref type="table" coords="5,131.66,662.78,4.98,8.85" target="#tab_0">1</ref> presents our results in the evaluation as well as the overall results obtained by all the participants. As our system targeted high precision, at the cost of low recall, by retrieving only those snippets that almost certainly referred to the query topic, we did not expect high yield and average yield scores. As one can notice in Table <ref type="table" coords="5,302.35,698.66,3.90,8.85" target="#tab_0">1</ref>, our yield and average yield scores are close to the median value achieved by all WiQA participants. One of our runs (run two) established the maximum value for the MRR measure. The low precision can be explained by the fact that our runs contains a large number of repetitions introduced by the Post-processing module. Comparison between runs reveals some interesting results. The weighting method used for runs one and two lead to better values for MRR, but the retrieval module used for runs one-old and one ensure better precision. The inclusion of coreference resolution leads to the best value for MRR. In light of this, it would be interesting to develop a method which integrates coreference resolution into the retrieval method used in runs one and one-old.</p><p>The coreference resolution module should be applied not only for sentences which follow a sentence including the topic. It should be applied also to sentences which contain the topic. For example in the sentence In 2001 he took over the role of Shylock in the Stratford Festival of Canada production of The Merchant of Venice after Al Waxman, who was originally scheduled to play the part, died. it is not possible to know which is the antecedent of he without a coreference resolver, and therefore the snippet will be marked as unimportant.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions</head><p>This paper presented Wolverhampton University's submission to WiQA task. The method chosen for this task combines a high precision, but low recall information retrieval approach with a greedy algorithm to rank the retrieved sentences. The results of the evaluation revealed that it achieves a performance similar to other systems participating in the competition and that one of the submitted runs scores the highest MRR score among all the participants. System analysis pinpointed several possible improvements for the future. As noticed in the evaluation, better precision can be obtained by filtering out duplicates at the post-processing stage. More attention will need to be paid to the input of the pre-processing stage so the sentences are no longer wrongly identified. As mentioned previously, in order to compute the relevance of each sentence, the sentences are converted into a logical form. The predicates used for this representation are currently little used, but we believe that the ranking can be improved by using them.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="2,236.52,357.62,130.19,8.85;2,131.47,109.23,339.69,233.25"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: System architecture</figDesc><graphic coords="2,131.47,109.23,339.69,233.25" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" coords="5,489.12,734.54,23.87,8.85"><head>Table 1 :</head><label>1</label><figDesc>Evaluation results repeated entries were discarded from the submission, the precision would have been 0.35, 0.34 and 0.35 for runs one-old, one and two respectively.</figDesc><table coords="5,489.12,734.54,23.87,8.85"><row><cell>If the</cell></row></table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct coords="6,105.48,623.18,407.62,8.85;6,105.48,635.18,407.40,8.85;6,105.48,647.06,385.81,8.85" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="6,397.02,623.18,116.08,8.85;6,105.48,635.18,332.22,8.85">GATE: A framework and graphical development environment for robust NLP tools and applications</title>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>Cunningham</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Maynard</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">K</forename><surname>Bontcheva</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">V</forename><surname>Tablan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="6,463.32,635.18,49.56,8.84;6,105.48,647.06,355.40,8.84">Proceedings of the 40th Anniversary Meeting of the Association for Computational Linguistics</title>
		<meeting>the 40th Anniversary Meeting of the Association for Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="6,105.44,666.98,191.21,8.85" xml:id="b1">
	<monogr>
		<ptr target="http://lucene.apache.org/" />
		<title level="m" coord="6,105.44,666.98,28.60,8.85">Lucene</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct coords="6,105.49,686.90,407.54,8.85;6,105.48,698.90,297.73,8.85" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="6,252.04,686.90,163.16,8.85">A Non-Projective Dependency Parser</title>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Tapanainen</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Jaervinen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="6,435.48,686.90,77.55,8.84;6,105.48,698.90,240.12,8.84">Proceedings of the 5th Conference of Applied Natural Language Processing</title>
		<meeting>the 5th Conference of Applied Natural Language Processing</meeting>
		<imprint>
			<publisher>ACL</publisher>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="6,105.49,718.82,381.46,8.85" xml:id="b3">
	<monogr>
		<title level="m" type="main" coord="6,140.90,718.82,161.55,8.85">Question Answering Using Wikipedia</title>
		<author>
			<persName coords=""><surname>Wiqa</surname></persName>
		</author>
		<ptr target="http://ilps.science.uva.nl/WiQA/" />
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
