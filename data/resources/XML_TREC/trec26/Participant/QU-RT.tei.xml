<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,53.80,84.23,504.41,15.44">Exploiting Live Feedback for Tweet Real-time Push Notifications</title>
				<funder ref="#_Fbbugp2">
					<orgName type="full">Qatar National Research Fund</orgName>
				</funder>
				<funder>
					<orgName type="full">Qatar Foundation</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName coords="1,221.19,114.40,74.93,10.60"><forename type="first">Reem</forename><surname>Suwaileh</surname></persName>
							<email>reem.suwaileh@qu.edu.qa</email>
							<affiliation key="aff0">
								<orgName type="department">Computer Science and Engineering Department</orgName>
								<orgName type="institution">Qatar University</orgName>
								<address>
									<settlement>Doha</settlement>
									<country key="QA">Qatar</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName coords="1,320.09,114.40,71.72,10.60"><forename type="first">Tamer</forename><surname>Elsayed</surname></persName>
							<email>telsayed@qu.edu.qa</email>
							<affiliation key="aff0">
								<orgName type="department">Computer Science and Engineering Department</orgName>
								<orgName type="institution">Qatar University</orgName>
								<address>
									<settlement>Doha</settlement>
									<country key="QA">Qatar</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,53.80,84.23,504.41,15.44">Exploiting Live Feedback for Tweet Real-time Push Notifications</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">1E5F5E3B8567E062C4F2806573E66692</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-08-05T15:09+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Twitter has been developed as an immense information creation and sharing network through which users post diverse information. Although a user would regularly check her Twitter timeline to stay up-to-date on her topics of interest, it is impossible to survive with manual topic tracking techniques while tackling the challenges that emerge from the Twitter timeline nature. Among these challenges are the big volume of posted tweets, noise (e.g., spam), redundant information (e.g., retweets), and the rapid development of topics over time. This necessitates the development of real-time summarization (RTS) systems that automatically track predefined topics of interest and summarize the stream while considering the relevance, novelty, and freshness of the selected tweets.</p><p>We tackle this problem as part of Qatar University's participation in TREC-2017 Real-Time Summarization (RTS) track. Our RTS system adopts a light-weight and conservative filtering strategy that monitors the continuous stream of tweets over a pipeline of multiple phases including pre-qualification, preprocessing, indexing, relevance filtering, novelty filtering, and tweets nomination. The system also exploits life (explicit) feedback to update profiles and pushing criteria (e.g., relevance threshold). The experimental results show that the runs that exploit the live explicit feedback exhibited a better performance in comparison to the baseline run that has been the best (among our runs) for the last two years. Additionally, all submitted runs have scored above the median provided by the track organizers in the batch evaluation.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The rich and diverse stream of Twitter posts empowered users to utilize it as a main source of information on ongoing topics and events. However, due to the nature of the Twitter stream, manually tracking topics of interests (e.g., events) is a tough task for users, not to say impossible. This necessitates the need for a real-time summarization system that automatically tracks order of millions of topics of interest to users in parallel and produces a summary of on-topic tweets in real-time for each topic. Given the tweet stream, a real-time summarization (RTS) system aims to track predefined interest profiles over the online stream and pick relevant, novel, and fresh tweets out to suggest to the user. For instance, if a user is interested in following the updates on the "Opinions on Al Jazeera media network", the system should efficiently monitor the stream and capture the on-topic tweets including all aspects of the topic which might change over time. Accordingly, real-time summarization approaches should use simple and efficient approaches that can scale to follow multiple interest profiles in parallel. Most importantly, the RTS systems are expected to overcome many challenges TREC'17, November 2017, Gaithersburg, Maryland, USA .</p><p>that stem from the nature of tweets, such as sparsity and topic drift. The former challenge originates from the very short length of tweets. One way to tackle such a challenge is by enriching the tweet text by contextual terms. The latter challenge requires the system to cope with the changes of the topic over time. One possible solution to this challenge is to update the topic representation by terms from the topic's new aspects that are discovered over the live stream.</p><p>In this paper, we present our real-time summarization system as a participant in TREC-2017 Real-time Summarization Track. Given a live stream of tweets and a set of interest profiles that represent users' topics of interest, the system simulates the scenario of push notification in which it pushes few tweets per day as notifications on the user's mobile phone for each topic. The track organizers hosted a broker through which participants can fetch the interest profiles and push the filtered tweet immediately when the system decides to elect one <ref type="bibr" coords="1,392.79,347.54,9.50,7.95" target="#b1">[2]</ref>. The interest profile is composed of three main fields: title (short query), description (1-2 sentences describing the information need), and narrative (a paragraph describing the information need). Most importantly, on the other side of the broker, active online users receive the push notifications on their mobile phones (for the topics of interest they subscribed to) and judge them tweets for relevance and redundancy <ref type="bibr" coords="1,500.59,413.30,12.21,7.95" target="#b4">[5]</ref>. The users' feedback is then sent back to participants' systems. This live assessment is a substantial learning resource for the system in which they can adjust the preferences on the users' interest for better summarization.</p><p>Our RTS system adopts a light-weight and conservative filtering strategy that listens to the English tweets over the 1% sample of the Twitter stream and processes the incoming tweets successively. It is a pure "streaming" system as it adopts "one-tweet at-a-time" processing model to ensure the least possible latency in making pushing decisions. To alleviate the sparsity and topic drift problems, we exploit the live feedback in two ways: (1) profile expansion and (2) dynamic thresholding. In the former, the system utilizes the positive feedback (truly relevant tweets) to update the profiles representation. In the latter, the system updates the relevance threshold periodically.</p><p>We organize the remainder of the paper as follows. We lay out the system approach in Section 2 and discuss the evaluation setting and our results in Section 3. Finally, we conclude and present possible future work in Section 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">APPROACH</head><p>The push notifications scenario simulates a recommender system that sends pop-up messages to users on their mobile phones after capturing tweets that match their interests. We extended our RTS system that we participate with in the real-time tweets summarization tracks in the past two years <ref type="bibr" coords="1,437.05,701.07,9.29,7.95" target="#b5">[6,</ref><ref type="bibr" coords="1,448.58,701.07,6.19,7.95" target="#b6">7]</ref>. In this section, we describe the system architecture for scenario A (i.e., Push Notifications scenario) in detail. We also focus on how the system utilizes the explicit feedback to improve performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Baseline System</head><p>Our system is conservative in a sense that it extensively filters out the noise and narrows down the set of candidate tweets for efficient scoring. Specifically, given a list of interest profiles (i.e., Topic in traditional ad-hoc), the system tracks these profiles over Twitter stream in a scalable manner and processes only the matching tweets (i.e., tweets that match at least one term of the profiles' titles) in a pipeline of multiple components: pre-qualification, preprocessing, indexing, relevance filtering, novelty filtering, and tweets nomination.</p><p>2.1.1 Pre-qualification. While the system monitors the stream using Twitter Streaming API 1 , it filters out non-English and lowquality tweets. The criteria by which we determine the quality of a tweet is based on its length and number of hashtags and URLs it contains. Specifically, the system ignores any tweet that has less than five terms or more than one URL or more than three hashtags. Unlike previous years, the baseline system does not filter out retweets as the original (underlying) tweets might not be gathered among the 1% sample of Twitter stream.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.2">Preprocessing.</head><p>Once a tweet is qualified, the system preprocesses it in a series of steps that aim at cleaning its text before scoring it for relevance and novelty. These steps include expanding the tweet with hashtags' terms (i.e., after removing the '#' prefix), removing special characters (e.g., emoticon and symbolic characters), stopwords and URLs, and stemming.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.3">Indexing.</head><p>As we acquire term statistics in the components of the system, we initialized the system with an index of a 10-days stream of tweets prior to the beginning of the evaluation period. The system also incrementally indexes all incoming English tweets during the evaluation period.</p><p>2.1.4 Relevance Filtering. The system represents both interest profiles (represented by profiles' titles) and incoming tweets as vectors in the vector space model. To construct the vectors, the system computes an idf -based term weighting as follows:</p><formula xml:id="formula_0" coords="2,105.65,534.28,185.23,21.30">w(t) = id f (t) = log N -d f (t) + 0.75 d f (t) + 0.75 (<label>1</label></formula><formula xml:id="formula_1" coords="2,290.87,541.33,3.17,7.95">)</formula><p>where N is the number of tweets indexed at the time of constructing the vector, and d f (t) is the document frequency of the term. We chose this term weighting function due to being light-weight (which is necessary for real-time and scalable systems) and also very similar to the standard tf -idf weighting function noticing that terms rarely appear more than once in a tweet due to the limited length (140 characters). An incoming tweet is scored against a subset of profiles (the profiles that it matches) for relevance independently using the standard Cosine Similarity function. To compute the relevance scores in real-time efficiently, the system constructs an in-memory index of profile vectors to match an incoming tweet with interest 1 https://developer.twitter.com/en/docs/api-reference-index profiles. The relevance of a tweet is determined using a relevance threshold τ r . If the relevance score of a tweet is greater than the predefined threshold, the systems add the tweet to the potentiallyrelevant tweets for the corresponding profile.</p><p>2.1.5 Novelty Filtering. The system then measures the novelty of the potentially-relevant tweet by computing the overlap between it and already-pushed tweets using a modified version of Jaccard similarity:</p><formula xml:id="formula_2" coords="2,393.95,180.22,164.25,20.70">J ′ (Q,T ) = |Q | ∩ |T | max(|Q |, |T |)<label>(2)</label></formula><p>Where Q and T are the profile and the tweet term sets, and |Q | and |T | are their lengths (in terms) respectively. To consider a tweet in the tweets nomination step, it must not exceed a predefined degree of overlap, i.e., a novelty threshold τ n , with already-pushed tweets. This way the system does not overwhelm the user with redundant notifications.</p><p>2.1.6 Tweets Nomination. Thus far, the system identified the relevant and novel tweets. To satisfy the users' need while avoiding inundating them, the system has to take into account pushing a maximum of 10 tweets per day per profile. Moreover, the system has to consider the freshness of candidate tweets. Thus, the system should intelligently select the optimal candidate tweets to nominate to the user.</p><p>While following all interest profiles in parallel over tweets stream, the system maintains a list of candidate tweets for each of the interest profiles. The candidate tweets are the potentially relevant and novel tweets that the system identifies so far for a specific profile. For each profile, the RTS system periodically selects the next tweet to elect to user from the candidate list through a broker <ref type="bibr" coords="2,526.87,408.18,9.51,7.95" target="#b3">[4]</ref>. This selection component is triggered when the systems exceed a silence period δ or it has already found l candidate tweets for that profile.</p><p>To wisely select the best tweet to send to the user, the system re-ranks tweets in the candidate lists while considering relevance and freshness using equation 3. This re-scoring linearly penalizes the tweets based on their posting time, hence favoring fresh tweets. The top tweet is then pushed to the user.</p><formula xml:id="formula_3" coords="2,363.14,498.24,195.06,21.04">S(t) = S r (t) * 100 -(CurTime -time(t)) 100<label>(3)</label></formula><p>S r (t) is the relevance score of tweet t (computed using Cosine similarity as we discussed earlier), cur t ime is the current system time (in minutes), and time(t) is the tweet creation time (in minutes).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Exploiting Live Feedback</head><p>Unlike previous years, the system receives live explicit feedback for pushed tweets from online assessors, simulating the real settings of RTS system, through the broker. Based on the responsiveness assessors, the system might obtain multiple assessments or nothing for every pushed tweet. Although the explicit feedback is a valuable resource that could improve the system performance, it introduces many challenges. Among these challenges are the latency (when users are not responsive enough) and aggregating multiple judgments (as each tweet might receive multiple judgments). To mitigate the effect of these two challenges and for simplicity, the system only considers the first judgment for each tweet and ignore the remaining.</p><p>Our RTS system exploits the live explicit relevance feedback (ERF) that it fetches periodically from the broker, in two methods:</p><p>(1) Profile Expansion, and (2) Dynamic Thresholding. In this section, we explain each of these methods in detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">Profile Expansion.</head><p>Topics discussed on Twitter develop over time which causes the so-called drift challenge. To cope with the Topic change on the live stream, the system periodically updates the profile representation periodically using a modified version of Rocchio's relevance feedback as shown in equation4. We only consider the truly relevant tweets as our experiments show that penalizing nonrelevant tweets, badly effects the RTS performance.</p><formula xml:id="formula_4" coords="3,137.44,236.25,156.61,26.46">ì q ′ = ì q + β |F r | d ∈F r ì d<label>(4)</label></formula><p>Herein, F r is the set of truly relevant documents (judged by the live assessors), |F r | is the number of truly relevant tweets, and β is a parameter used to control the influence of relevant tweets' terms on the new profile vector.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">Dynamic</head><p>Thresholding. The default thresholding technique in RTS system is to use a static global relevance threshold τ r across all topics. Although the static threshold can be tuned over past tweet collections, it is still difficult, if not possible, to find a static threshold that maintains its optimality across time especially when topics evolve over time in the live stream. In other words, while considering the topic development, the RTS system is expected to elect a satisfying number of relevant and novel tweets to the user for a long time (spans over days to years). Moreover, considering the difference in difficulty level between interest profiles, where difficult profiles typically have less number of relevant tweets, makes the global threshold non-promising method.</p><p>To mitigate the effect of using a static global threshold on the RTS system performance, we utilize the live assessments to update the relevance threshold over time. The system uses an initial static global relevance threshold τ r for all profiles and periodically updates per-profile p i relevance threshold. To update the threshold, the system uses the number of pushed tweets that received positive feedback in the past period. If a profile p i got no positive feedback in the last period, the system slightly decreases the relevance threshold τ r by 0.05 with a lower bound of 0.5. Otherwise, the threshold is increased using the following equation:</p><formula xml:id="formula_5" coords="3,126.58,583.96,164.29,22.10">τ ′ r i = τ r i + min( R p i 100 , 0.15) (<label>5</label></formula><formula xml:id="formula_6" coords="3,290.87,591.96,3.17,7.95">)</formula><p>Where τ r i is the current threshold of profile p i , τ ′ r i is the updated threshold of that profile and R p i is the number of truly relevant tweets for profile p i within a time period t T . The threshold upper bound is set to 0.8. Controlling the upper and lower bounds of the relevance threshold prevents extreme updates that might harm the system performance; using a very low threshold allows the system to overwhelm the user with many uninteresting updates, otherwise, the system would be strict and pushes no updates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">EXPERIMENTAL EVALUATION</head><p>Thus far we discussed the major components of the RTS system. We now discuss the evaluation settings, configurations, and performance (in terms of effectiveness) of our RTS system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Evaluation Measures</head><p>The participating systems were evaluated using batch evaluation measures and live evaluation. For the former, there are three main batch evaluation measures: the expected gain (EG), the normalized cumulative gain (nCG), and the Gain minus Pain (GMP) measures. For the latter, there are two main measures: precision (P) and utility (U). Each of these evaluation measures is evaluated for each topic per day and then averaged over evaluation days. The final score of a run is the average of scores over all topics.</p><p>Similar to last year, the evaluation measures do not penalize systems for temporal latency. The latency was reported separately using mean (MLT ) and median (MedLT ) of the difference between the pushing time of each pushed tweet and the first tweet of the cluster which the pushed tweet belongs to (i.e., reference tweet).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Batch</head><p>Evaluation: Following the traditional TREC evaluation, all participating systems' output are used to construct a pool of potentially-relevant tweets and to be labeled by in-house assessors. Systems are evaluated using this resultant qrels as follows:</p><p>• Expected Gain (EG):</p><formula xml:id="formula_7" coords="3,406.74,366.61,151.46,24.43">EG = 1 N t ∈P G(t)<label>(6)</label></formula><p>P is the set of tweets that are pushed by the system and N is the number of those tweets (i.e., N must be ≤ 10 tweets). • Normalized Cumulative Gain (nCG):</p><formula xml:id="formula_8" coords="3,404.58,431.43,153.62,24.43">nCG = 1 Z t ∈P G(t)<label>(7)</label></formula><p>Z is the maximum possible gain for that topic in that specific day based on all judged pushed tweets. • Gain minus Pain (GMP):</p><formula xml:id="formula_9" coords="3,385.19,499.02,173.02,19.23">GMP = α t ∈P G(t) -(1 -α)P<label>(8)</label></formula><p>P is the number of non-relevant tweets pushed by the system and α is a parameter to balance between gain and pain. For all above measures, G(t) is 0 if the tweet is judged as nonrelevant, 0.5 if it is judged as relevant, and 1 if it is judged as highlyrelevant. The RTS system in the push notifications mode is allowed to push a maximum of n = 10 tweets daily per profile during the evaluation period. All extra tweets will be discarded. All measures also penalize redundancy in pushed tweets using the semantic clusters (each contains a set of relevant tweets that are semantically similar to each other) that are released as part of the relevance judgments; once a tweet from a cluster is pushed, all upcoming pushed tweets from the same cluster are considered non-relevant.</p><p>Each of the aforementioned measures has two variants there are two variants of treating the silent days. Silent days (in contrast to eventual days) are the days when there are no relevant tweets (for a specific profile). The measures that have "1" as a suffix reward a system by a score of 1 if it kept quiet on silent days, while measures that have "p" as a suffix penalize systems by 0.1 multiplied by the number of pushed tweets by the system (fraction of the ten-tweet daily limit).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Online Evaluation:</head><p>Using the explicit relevance feedback gathered from the the live assessors, systems are evaluated using two online precision measures:</p><formula xml:id="formula_10" coords="4,69.77,380.27,140.39,31.29">• Strict Precision (P s ) = | R R+RR+N R | • Strict Utility (U s ) = |R -RR + N R|</formula><p>Where R, RR, and N R are the set of relevant, redundant and nonrelevant tweets, respectively. There are two variants of these measures: strict measures, that have "s" suffix, penalize systems on redundant tweets and lenient measures, that have "l" suffix, are more flexible in which they do not evaluate on novelty.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>• Lenient Precision</head><formula xml:id="formula_11" coords="4,69.77,478.38,154.01,31.91">(P l ) = | R+RR R+RR+N R | • Lenient Utility (U l ) = |(R + RR) -N R|</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Official Runs</head><p>In this section, we discuss our submitted runs for both scenarios in detail including the configuration and results. We tuned all system parameters over two test collections of microblog tracks: TREC-2015 Real-time Filtering track <ref type="bibr" coords="4,163.43,572.79,10.49,7.95" target="#b2">[3]</ref> and TREC-2016 Real-time Tweet Summarization track <ref type="bibr" coords="4,132.66,583.75,9.39,7.95" target="#b2">[3]</ref>. We submitted three automatic runs that we describe below:</p><p>• QUBaseline is the baseline run that activates the core system components without exploiting the live relevance feedback. • QUExp has a similar configuration to QUBaseline run, except that it uses utilizes the live relevance feedback to hourly update the textual representation of profiles. It expands the profile representation by the positive relevance feedback after weighting them by a factor β = 0.2 to avoid the topic drift.</p><p>• QUExpDyn in addition to performing hourly expansion, this run adopts a simple adaptive thresholding in which it dynamically updates the relevance threshold per profile.</p><p>In all runs, we set both relevance τ r and novelty τ n thresholds to 0.6 as it was the best value in the experiments that we conducted. Table <ref type="table" coords="4,350.49,362.68,4.25,7.95" target="#tab_0">1</ref> shows the performance of our official runs in comparison to median scores provided by the track organizers for EG, nCG, and GMP.5 measures. Note that both the mean latency (MLT) and median latency (MedLT) are reported in seconds. Surprisingly, QUExpDyn and QUExp runs outperform the baseline QUBaseline. This never happens in our participation in the last two years. QUEx-pDyn is the best run in EG p and nCG measures and QUExp performs well in EG 1 all variants of GMP measure compared to other runs. These results show how exploiting explicit live feedback improves the system effectiveness in contrast to our attempts when using pseudo-relevant feedback <ref type="bibr" coords="4,410.44,472.27,11.51,7.95" target="#b5">[6,</ref><ref type="bibr" coords="4,424.20,472.27,6.26,7.95" target="#b6">7]</ref>. Additionally, when comparing to Median scores, all QU runs outperform them in all measures, except for QUExpDyn in GMP .5 measure.</p><p>In table 2 we present the system results using the online evaluation. It can be clearly seen that QUExp run outperform all other runs in all measures. Additionally, we notice that QUBaseline and QUExp runs outperform the median in all measure, however, QUExpDyn fails to beat the Median in the online evaluation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CONCLUSION AND FUTURE WORK</head><p>We presents our RTS system participated in the real-time summarization track in TREC-2017. The baseline system filters tweets in a simple pipeline that includes multiple stages: pre-qualification, preprocessing, relevance filtering, novelty filtering, and tweets nomination. The system also exploits live explicit feedback to update profiles in two ways: (1) profile expansion and (2) per-profile dynamic thresholding. Generally, the results show that, runs that use the explicit relevance feedback outperform the baseline in batch evaluation. Surprisingly, the results show that the run that performs dynamic thresholding is the best in batch evaluation, however, it poorly perform in online evaluation (scoring below the median score). We plan to further perform failure analysis on all components of the system to better understand the results. Additionally, we are planning to experiment with different relevance models (e.g., the so-called Relevance Model <ref type="bibr" coords="5,166.84,120.67,9.93,7.95" target="#b0">[1]</ref>) when utilizing the live explicit feedback.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" coords="4,53.50,85.73,504.70,89.42"><head>Table 1 :</head><label>1</label><figDesc>Official TREC 2017 results of QU runs for the push notifications scenario (batch evaluation). Best value per column is boldfaced.</figDesc><table coords="4,118.46,119.77,375.07,55.38"><row><cell>Run</cell><cell>EG-p</cell><cell>EG-1</cell><cell cols="4">nCG-p nCG-1 GMP.33 GMP.5 GMP.66</cell><cell>MLT</cell><cell>MedLT</cell></row><row><cell cols="8">QUBaseline 0.2422 0.2146 0.2260 0.1984 -0.2326 -0.1459 -0.0644 64812.8</cell><cell>1</cell></row><row><cell>QUExp</cell><cell cols="7">0.2356 0.2185 0.2159 0.1987 -0.1498 -0.0909 -0.0354 63943.6</cell><cell>1</cell></row><row><cell cols="8">QUExpDyn 0.2547 0.2068 0.2475 0.1996 -0.5182 -0.3457 -0.1833 77033.4</cell><cell>19</cell></row><row><cell>Median</cell><cell cols="3">0.2194 0.1951 0.2095 0.1826</cell><cell>-</cell><cell>-0.1707</cell><cell>-</cell><cell>-</cell><cell>-</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" coords="4,53.50,190.73,504.70,89.42"><head>Table 2 :</head><label>2</label><figDesc>Official TREC 2017 results of QU runs for the push notifications scenario (live evaluation). Best value per column is boldfaced.</figDesc><table coords="4,103.99,223.91,404.03,56.24"><row><cell>Run</cell><cell cols="4"># Rel. # Redun. # Nonrel. # Unjudged</cell><cell>P s</cell><cell>P l</cell><cell>U s</cell><cell>U l</cell><cell>MLT MedLT</cell></row><row><cell>QUBaseline</cell><cell>875</cell><cell>139</cell><cell>1298</cell><cell>111</cell><cell cols="4">0.3785 0.4386 -562 -284 212.7</cell><cell>1</cell></row><row><cell>QUExp</cell><cell>664</cell><cell>100</cell><cell>940</cell><cell>79</cell><cell cols="4">0.3897 0.4484 -376 -176 232.2</cell><cell>1</cell></row><row><cell cols="2">QUExpDyn 1399</cell><cell>274</cell><cell>2589</cell><cell>175</cell><cell cols="4">0.3282 0.3925 -1464 -916 310.2</cell><cell>1</cell></row><row><cell>Median</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell cols="4">0.3403 0.4174 -805 -456</cell><cell>-</cell><cell>-</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div><head n="5">ACKNOWLEDGMENTS</head><p>This work was made possible by NPRP grant# <rs type="grantNumber">NPRP 7-1313-1-245</rs> from the <rs type="funder">Qatar National Research Fund</rs> (a member of <rs type="funder">Qatar Foundation</rs>). The statements made herein are solely the responsibility of the authors.</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_Fbbugp2">
					<idno type="grant-number">NPRP 7-1313-1-245</idno>
				</org>
			</listOrg>
			<div type="references">

				<listBibl>

<biblStruct coords="5,69.23,232.56,224.81,6.19;5,69.23,240.47,224.81,6.25;5,69.23,248.44,159.89,6.25" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="5,190.09,232.56,93.35,6.19">Relevance based language models</title>
		<author>
			<persName coords=""><forename type="first">Victor</forename><surname>Lavrenko</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Bruce</forename><surname>Croft</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="5,69.23,240.47,224.81,6.25;5,69.23,248.44,112.63,6.25">Proceedings of the 24th annual international ACM SIGIR conference on Research and development in information retrieval</title>
		<meeting>the 24th annual international ACM SIGIR conference on Research and development in information retrieval</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="120" to="127" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="5,69.23,256.47,225.26,6.19;5,69.03,264.44,112.82,6.19" xml:id="b1">
	<monogr>
		<author>
			<persName coords=""><forename type="first">Jimmy</forename><surname>Lin</surname></persName>
		</author>
		<ptr target="http://trecrts.github.io/TREC2017-RTS-guidelines.html" />
		<title level="m" coord="5,129.60,256.47,86.68,6.19">TREC 2017 Track Guidelines</title>
		<imprint>
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="5,69.23,272.41,225.88,6.19;5,69.23,280.32,224.81,6.25;5,69.23,288.29,90.51,6.25" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="5,69.23,280.38,131.77,6.19">Overview of the TREC-2015 Microblog Track</title>
		<author>
			<persName coords=""><forename type="first">Jimmy</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Miles</forename><surname>Efron</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Yulu</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Garrick</forename><surname>Sherman</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Ellen</forename><surname>Voorhees</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="5,214.36,280.32,79.69,6.25;5,69.23,288.29,88.16,6.25">Proceedings of the 24th Text REtrieval Conference (TREC &apos;15)</title>
		<meeting>the 24th Text REtrieval Conference (TREC &apos;15)</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="5,69.23,296.32,224.81,6.19;5,69.23,304.29,224.81,6.19;5,69.03,312.20,196.06,6.25" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="5,134.00,304.29,160.04,6.19;5,69.03,312.26,14.91,6.19">Overview of the TREC-2016 Real-Time Summarization Track</title>
		<author>
			<persName coords=""><forename type="first">Jimmy</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Adam</forename><surname>Roegiest</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Luchen</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Richard</forename><surname>Mccreadie</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Ellen</forename><surname>Voorhees</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Fernando</forename><surname>Diaz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="5,96.26,312.20,166.47,6.25">Proceedings of the 25th Text REtrieval Conference (TREC &apos;16)</title>
		<meeting>the 25th Text REtrieval Conference (TREC &apos;16)</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="5,69.23,320.23,224.81,6.19;5,69.23,328.14,224.81,6.25;5,69.23,336.11,224.81,6.25;5,69.23,344.08,70.84,6.25" xml:id="b4">
	<analytic>
		<title level="a" type="main" coord="5,218.25,320.23,75.79,6.19;5,69.23,328.20,147.02,6.19">Online In-Situ Interleaved Evaluation of Real-Time Push Notification Systems</title>
		<author>
			<persName coords=""><forename type="first">Adam</forename><surname>Roegiest</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Luchen</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jimmy</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="5,229.17,328.14,64.88,6.25;5,69.23,336.11,224.81,6.25;5,69.23,344.08,23.44,6.25">Proceedings of the 40th International ACM SIGIR Conference on Research and Development in Information Retrieval</title>
		<meeting>the 40th International ACM SIGIR Conference on Research and Development in Information Retrieval</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="415" to="424" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="5,69.23,352.11,108.72,6.19;5,199.49,352.11,95.74,6.19;5,69.23,360.02,224.81,6.25;5,69.23,367.99,42.60,6.25;5,140.70,367.99,63.39,6.25" xml:id="b5">
	<analytic>
		<title level="a" type="main" coord="5,241.29,352.11,53.93,6.19;5,69.23,360.08,177.86,6.19">Light-weight, Conservative, yet Effective: Scalable Real-time Tweet Summarization</title>
		<author>
			<persName coords=""><forename type="first">Reem</forename><surname>Suwaileh</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Maram</forename><surname>Hasanain</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Elsayed</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="5,262.40,360.02,31.64,6.25;5,69.23,367.99,42.60,6.25;5,140.70,367.99,61.04,6.25">Proceedings of the 25th Text Conference (TREC &apos;16)</title>
		<meeting>the 25th Text Conference (TREC &apos;16)</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="5,69.23,376.02,224.81,6.19;5,69.23,383.99,224.81,6.19;5,68.99,391.90,211.06,6.25" xml:id="b6">
	<analytic>
		<title level="a" type="main" coord="5,284.65,376.02,9.39,6.19;5,69.23,383.99,224.81,6.19;5,68.99,391.96,29.61,6.19">QU at TREC-2015: Building Real-Time Systems for Tweet Filtering and Question Answering</title>
		<author>
			<persName coords=""><forename type="first">Reem</forename><surname>Suwaileh</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Maram</forename><surname>Hasanain</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Marwan</forename><surname>Torki</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Tamer</forename><surname>Elsayed</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="5,111.23,391.90,166.47,6.25">Proceedings of the 24th Text REtrieval Conference (TREC &apos;15)</title>
		<meeting>the 24th Text REtrieval Conference (TREC &apos;15)</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
