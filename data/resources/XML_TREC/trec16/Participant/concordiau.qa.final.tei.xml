<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,131.34,127.98,349.31,15.11">Concordia University at the TREC 2007 QA track</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName coords="1,182.95,161.88,77.28,10.48"><forename type="first">Majid</forename><surname>Razmara</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">CLaC Laboratory Department of Computer Science and Software Engineering</orgName>
								<orgName type="institution">Concordia University</orgName>
								<address>
									<addrLine>1455 de Maisonneuve Blvd. West Montral</addrLine>
									<postCode>H3G 1M8</postCode>
									<region>Québec</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName coords="1,270.25,161.88,60.97,10.48"><forename type="first">Andrew</forename><surname>Fee</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">CLaC Laboratory Department of Computer Science and Software Engineering</orgName>
								<orgName type="institution">Concordia University</orgName>
								<address>
									<addrLine>1455 de Maisonneuve Blvd. West Montral</addrLine>
									<postCode>H3G 1M8</postCode>
									<region>Québec</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName coords="1,357.88,161.88,71.18,10.48"><forename type="first">Leila</forename><surname>Kosseim</surname></persName>
							<email>kosseim@cse.concordia.ca</email>
							<affiliation key="aff0">
								<orgName type="department">CLaC Laboratory Department of Computer Science and Software Engineering</orgName>
								<orgName type="institution">Concordia University</orgName>
								<address>
									<addrLine>1455 de Maisonneuve Blvd. West Montral</addrLine>
									<postCode>H3G 1M8</postCode>
									<region>Québec</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,131.34,127.98,349.31,15.11">Concordia University at the TREC 2007 QA track</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">A98C10EA4A8928B9FFB809E1C256979C</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-08-05T15:03+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we describe the system we used for the trec-2007 Question Answering Track. For factoid questions our redundancy-based approach using a modified version of aranea was enhanced further. Our list question answerer uses a clustering method to group the candidate answers that co-occur together. It also uses the target and question keywords as spies to pinpoint the right cluster of candidates. To answer other types of questions, our system extracts from Wikipedia articles a list of interest-marking terms and uses them to extract and score sentences from the aquaint-2 and blog document collections using various interest-marking triggers.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="9" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="10" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>This year, we continued improving our qascu system on factoid and other questions and we developed a new subsystem to deal with list questions since we had spent very little time on it last year. As last year's system <ref type="bibr" coords="1,257.79,469.17,11.52,9.57" target="#b0">[1]</ref> received relatively good results in general, this year we decided to focus more on list questions, where we did poorly, and improve the factoid and other modules of the system. Our system for factoid questions, used to exploit two main approaches: a redundancy-based QA system working on the Web (a modified version of aranea <ref type="bibr" coords="1,142.39,523.37,11.52,9.57" target="#b1">[2,</ref><ref type="bibr" coords="1,158.48,523.37,8.49,9.57" target="#b2">3,</ref><ref type="bibr" coords="1,171.52,523.37,8.49,9.57" target="#b3">4]</ref>) and a linguistic-based system working on aquaint-2 only. Since the linguistic-based approach did not improve the results significantly, we only concentrated on the redundancy-based approach that seemed more promising. We spent about 1 person-month improving aranea and modifying it for this year's trec.</p><p>The list question answerer is built on top of our factoid question answerer to receive a list of candidate answers and filter appropriate candidates. It also extracts a list of possible answers and adds them to the provided candidate list. Two person-months were spent on the list question answerer.</p><p>We have not significantly changed our other question answerer since last year; merely, small improvements in query generation and other parts were made. For the other questions, we used terms extracted from Wikipedia and projected them on the aquaint-2 collection. Sentences containing these Wikipedia terms are then ranked using various interest-marking triggers.</p><p>In the following sections, we describe our question answering system. In section 2, we describe how we answer factoid questions; in section 3, we describe the list questions module and in section 4, the other questions module. Finally, we present our results in section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Answering Factoid Questions</head><p>This year two person-months were spent improving last year's system and modifying it for the trec-16 task specifications. The Question Answering System of Concordia University (qascu) uses a redundancy-based approach working on the World Wide Web to answer factoid questions. It is a modified version of Jimmy Lin's aranea question answering system. aranea is a web-based rule and statistical QA system. A simplistic overview of the system is that it generates queries and question reformulations, gets snippets from Google and Teoma, generates n-grams as possible answers, collates the n-grams based on their similarity and does filtering based on the expected type of answer. Detailed descriptions of aranea can be found in <ref type="bibr" coords="2,97.77,282.76,11.51,9.57" target="#b1">[2,</ref><ref type="bibr" coords="2,112.92,282.76,8.49,9.57" target="#b2">3,</ref><ref type="bibr" coords="2,125.04,282.76,7.68,9.57" target="#b3">4]</ref>.</p><p>While the overall architecture of this subsystem was not significantly changed, many modifications were made to the existing modules to contribute to an improvement in the overall system accuracy. A new component was also introduced to tackle the problem of selecting the most suitable supporting document for each answer.</p><p>Apart from these modifications, many non-performance-enhancing changes were made to accommodate the new corpora introduced this year. For the trec-16 competition, the corpora consisted of the aquaint-2 text research collection and the blog web research collection. We did not purchase the blog collection, but nist provided the text of the top 50 documents per target (as retrieved by the prise search engine when using the target as the query). Following are the main modifications made to last year's qascu system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Predicting Answer Types</head><p>The factoid question answerer subsystem generates expected answer types through a simple word match and ordering algorithm. Possible expected answer types include: Date, Person, Location, Organization, Website, Number (including the unit, if applicable), and Other. The generation of an expected answer type is an important early step in the question answering process. Questions of different types are handled very differently by the system. Candidate answers that do not match the semantic type expected by the question are filtered out. By analyzing the results of qascu in the trec-15 competition, it was found that correctly classified questions had double the probability of being answered correctly when compared to incorrectly classified questions.</p><p>The type classification was improved this year by adding about 50 new words to the word-match dictionary and modifying the algorithm. By comparing the results of the typing modules with a manual type classification of the questions, a 6% improvement was observed (from an accuracy of 87% using the old module, to 93% with the new module) over the same set of 963 questions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">5-gram Generation</head><p>One key step in the pipeline is the generation of all possible n-grams from the text fragments generated by the request execution module. qascu 2006 had an upper limit of 4-grams. This caused some questions to be incorrectly answered since the required answer contained five words. Facilitating the generation of 5-gram candidates solved this problem and did not have a detrimental effect on other questions with shorter answers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Website Questions</head><p>Every year, there are a few questions that ask for a company or organization's web address. It was decided that these questions can be better answered if they are not treated like typical questions. A new Google query was specifically formed for these questions. The target of the question (i.e. the organization's name) was paired with the word "website" and this was used to search Google. The domain name of the first returned URL is taken as the candidate answer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Question-Specific Filtering methods</head><p>Depending on the expected answer type of a question, the list of candidate answers is filtered in order to decrease the number of potential answers. The goal is to improve the accuracy of the system by using simple heuristics to eliminate obviously wrong answers and also answers of an invalid format. A lot of time was spent on expanding these existing rule sets by examining the trec data sets from 2004, 2005, and 2006. Some highlights include: Number questions Typically number questions ask about a specific quantity (e.g What was the distance of the 1999 Chicago Marathon? or What is the company's annual revenue?).</p><p>Candidate answers to number questions can be filtered based on the expected units of the number. Several new sets of units were added to the system including: length, temperature, acceleration, velocity, time, mass, power, money, and age.</p><p>Closed-class questions A closed-class question is one with a set of possible answers that can be exhaustively enumerated. Several new gazetteer lists were added to the system to improve various closed-class questions (e.g. U.S. television networks; professional baseball, hockey, football and basketball teams; major cities from around the world; U.S. state capitals).</p><p>Often it is not feasible to completely enumerate all possible answers in a closed-class domain. In a case like this we use candidate answer promotion as opposed to filtering. The idea is to boost the rank of certain candidate answers that appear in the closed-class set (instead of filtering out those that do not). That way, if a correct candidate answer does not appear in the closed-class set for some reason, it's not completely removed and there is a chance to re-rank the answers later in the pipeline.</p><p>Acronym questions Another common type of question is one that asks what a certain acronym stands for. One rule that ended up working quite well was to keep only candidate answers that consist of capitalized words; each starting with a letter matching the acronym pattern. We skip over any internal prepositions since these words are typically not included in an acronym. Conversely, there are questions that ask for the acronym of an organization's name. One rule that worked well was to eliminate candidate answers that were not entirely comprised of uppercase letters, and answers that did not at least begin with the same letter as the long-form name.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Answer Projection</head><p>The use of a better answer projection step was explored this year. This process involves finding the best supporting document from the aquaint-2 or blog corpus to be paired with the web-derived answer. Initially, documents are retrieved from the corpora using the Lucene search engine. For each document returned we store the name, the Lucene score, and a short raw text snippet (called the "page summary"). Later in the pipeline, we gather a list of supporting documents for the top-ranked candidate answer by going through all the page summaries and selecting those documents in which the answer string (or an inexact version of it) appears at least once.</p><p>The previous version of qascu used an approach to finding the best supporting document by simply selecting the supporting document with the highest Lucene score. However, this method is not ideal since the Lucene score considers the TF-IDF of each term in the search query, but does not take into account the frequency of the terms in the answer string.</p><p>Many different methods of answer projection were explored this year. The techniques were all variations on a ranking system which involved the frequency of both the answer string and the question target in each document in the supporting document list. We began with the generation of an inexact version of both the answer string and the question target. The inexact version is a subset of the string (generated differently depending on the expected answer type). The full text of each supporting document was then retrieved. The document with the highest combined frequency of the answer string + the target, multiplied by the Lucene score, was selected as the best supporting document.</p><p>The new answer projection module performed adequately. However, its performance in selecting the correct supporting document only matched that of the previous year's approach (for the 2004 -2006 trec data). The system selects the correct document for approximately 60% of the correctly-answered.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Answering List Questions</head><p>Contrary to last year, this year we focused on list questions. The goal was to come up with a new approach to select the candidate answers, having an initial list of potential answers, with exploiting merely statistical techniques. We hypothesized that different instances of an answer to a list question have a special relation one another. Beside the fact that they are all of the same entity class (e.g. country names, people, book titles, . . . ), they co-occur within the sentences of the documents related to the target and the question. In addition, the instances of answers also tend to co-occur with the target and question keywords.</p><p>Figure <ref type="figure" coords="4,136.95,644.20,5.45,9.57" target="#fig_0">1</ref> shows a few sample snippets from aquaint-2 and the web related to question 232.6 Which airlines use Dulles? (Target: Dulles Airport). As the figure shows, the snippets contain a few instances of answers along with the target and question keywords.</p><p>We propose a novel approach based on the hypothesis that different instances of an answer to a list question should appear in close proximity of one another and also of the target and  the question keywords. These distinct answers may occur in most documents related to the target. However, co-occurrence can have different scopes: co-occurrence within a document, a paragraph, a sentence or a window of words. Our system in trec 2007 only considers co-occurrence at the sentence level. Although worth trying, the other possibilities were not implemented due to time constraints. Of course, they will be considered in future work. The overall architecture of our list answerer subsystem is illustrated in Figure <ref type="figure" coords="5,438.19,396.98,4.24,9.57" target="#fig_2">2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Candidate Answers Extraction</head><p>The first step to creating a list of candidate answers is answer type recognition. Each question is associated to one of the nine entity classes: Person, Country, Organization, Job, Movie, Nationality, City, State, Other. This is done by using lexical and syntagmatic patterns. Once the type of answer is predicted, a number of documents are retrieved from aquaint-2 and the web using a query generated from the target and the question. These documents constitute a collection from which candidate terms are extracted. All terms that conform to the answer type are extracted from this collection. Depending on the answer type, the candidate terms are extracted using an NE tagger (in case of Person, Organization and Job), using a gazeteer (in case of Country, Nationality, State and partially City) and finally extracting all capitalized terms and terms in quotations and validating them using web frequency (in case of Movie and Other).</p><p>The candidate answers extracted in this module are added to those extracted using our factoid question answerer subsystem and together constitute our final candidate answers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Relation Extraction</head><p>The relation between two candidate terms is a normalized value denoting how often they co-occur within documents about the target. For this purpose, using the query generated in the previous section, a list of relevant documents from aquaint-2 and the web are retrieved. This constitutes the domain collection from which sentences will be extracted to compute  co-occurrence information. Once all the data regarding term occurrences and co-occurrences is collected, the relation between each pair of term is computed using the chi-square (χ 2 ) test.</p><formula xml:id="formula_0" coords="6,178.97,558.75,252.87,28.52">χ 2 = N (O 11 O 22 -O 11 O 21 ) 2 (O 11 + O 12 )(O 11 + O 21 )(O 12 + O 22 )(O 21 + O 22 )</formula><p>Where O 11 refers to the number of sentences term i and term j appeared together and O 12 refers to the number of sentences in which term i appeared but term j did not appear. Similarly O 21 is the number of sentences containing term j but not term i and O 22 is the number of sentences containing neither term i nor term j . N denotes the total number of sentences in the domain collection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Clustering</head><p>Once a table of candidate terms and the relations among them is available, a clustering method tries to create a subset of the candidate instances which have a higher probability to be the correct answer. We use a Hierarchical Agglomerative Average-Linkage (HAAL) clustering. The algorithm is as follows:</p><p>1. Put each candidate term t i in a separate cluster C i .</p><p>2. Compute the relation between each two clusters. In average-linkage clustering, the relation between two clusters C i and C j is the average of all relations between terms t m in C i and terms t n in C j .</p><formula xml:id="formula_1" coords="7,98.37,244.09,357.86,56.68">relation(C i , C j ) = 1 |C i | × |C j | tm∈C i tn∈C j relation(t m , t n ) 3.</formula><p>Merge two clusters which have the highest relation between them.</p><p>4. Goto step 2 until the highest relation is below a certain threshold.</p><p>After the clustering is finished, the main concern is how to select the right cluster. For this purpose, before clustering, we add the target and question keywords to our candidate terms to be clustered. Their responsibility is to spy on candidate terms. These spies are treated exactly like candidate terms; hence their co-occurrences with candidate terms and also other spies are extracted, their relations are evaluated and finally they are clustered along with candidate terms. When clustering is finished, these spies are used to pinpoint the cluster with the highest probability of being the correct cluster. This is according to our hypothesis that the answers to a list question tend to co-occur with one another and with the target and question keywords as well.</p><p>A second approach to narrow down the primary candidate terms was exploited. This approach simply selects the terms whose overall relation to other terms is the highest. We call this approach CRV as it uses the Cumulative Relation Value to compare terms one another. Surprisingly, this approach also worked out (see section 5).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Answer Projection</head><p>To support the final answers with documents from aquaint-2 and/or blog, a simple method is used. The corpora are searched using the query generated before and the final candidate term and simply the first document is returned as the supporting document. Since we did not have access to the whole blog corpus, even though the top 50 documents were available, we focus more on the aquaint-2 corpus to return the supporting documents. Several different approaches were examined that all caused a lower score than this method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Answering Other Questions</head><p>This year, we didn't invest too much effort on other questions since our results for trec 2006 were quite satisfactory. Only two person-days were spent to improve different components of the system. A brief summary of other section is provided. For more details about how other questions are answered, please refer to <ref type="bibr" coords="8,271.77,102.10,10.91,9.57" target="#b4">[5]</ref>.</p><p>Fundamentally, we hypothesized that interesting nuggets can be extracted using two types of interest markers:</p><p>Target-specific interest markers: terms that are important within the documents related to the target. For example, sinking is an interesting term in the target "Titanic" or assassination contains a valuable data about "Kennedy".</p><p>Universal interest markers: terms that are important regardless of the target. For example, in the sentence "first man on the moon", first conveys an interesting concept or in the sentence "15000 people died in the yesterday's earthquake disaster", 15000 contains a unique meaning.</p><p>To identify target-specific interest marking terms, we used the Wikipedia<ref type="foot" coords="8,455.38,262.42,4.23,6.99" target="#foot_0">1</ref> online dictionary. The first stage to answering other questions is to find the proper Wikipedia article. We use the Google API to search in the Wikipedia domain using the target as query. The first Wikipedia article that satisfies the query is taken. We extract named entities as interesting terms for each target, and we search aquaint-2 for the N most relevant documents. For this purpose, the title of the Wikipage is added to the query.</p><p>Within the documents chosen as the domain, the frequency of each interest marking term is then computed. For each term, we compute a weight as the logarithm of its frequency.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>W eight(T</head><formula xml:id="formula_2" coords="8,269.73,385.79,119.63,10.63">i ) = Log(F requency(T i ))</formula><p>All sentences from the domain documents are then scored according to how many targetspecific interesting terms it contains. This is computed as the sum of the weight of the interesting terms it contains.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Score(S</head><formula xml:id="formula_3" coords="8,274.03,463.92,102.50,22.17">i ) = T j ∈S i W eight(T j )</formula><p>Then similar sentences that either are almost equivalent to one other at the string level or share similar words but not the same syntax are dropped.</p><p>Once the sentences are ranked based on target-specific interesting terms, we boost the score of sentences that contain terms that generally mark interesting information regardless of the topic. Such markers were determined empirically by analyzing the previous trec data. These markers consists of superlatives, numeral and target-type specific keywords. This last type of marker is essentially a list of terms that do not fit any specific grammatical category, but just happen to be more frequent in interesting nuggets. Finally, the top N sentences making up 7000 non-white-space characters are returned as our nuggets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Results</head><p>Table <ref type="table" coords="8,114.77,666.22,5.45,9.57" target="#tab_1">1</ref> shows the official evaluation results of our runs along with the median and best score of all systems. Following is the description of all the runs for each question type. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Factoid Runs</head><p>In the qascu1 run, only aquaint-2 and the web are used for information retrieval. We use the top 50 documents retrieved by Prise for candidates re-ranking. Candidate answers are re-ranked using frequency of the terms in the top 50 documents returned by Prise. We use only aquaint-2 to select the supporting documents for the top-ranked answers.</p><p>In the qascu2 run, information retrieval is the same as in qascu1. However, candidates re-ranking is based on frequency of the words in the whole aquaint-2 corpus. Answer projection is done on aquaint-2 and the top 50 blog corpus.</p><p>qascu3 uses aquaint-2, the top 50 blog documents and the web for information retrieval. Candidates re-ranking is based on frequency of the words in the top 50 Prise documents. Document supporting source is the same as qascu2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">List Runs</head><p>qascu1 uses the Haal clustering algorithm to cluster the primary candidate answers. For answer projection, only the aquaint-2 documents are taken into account (not the blog corpus). In qascu2, crv method is used to select the final candidate terms and again only aquaint-2 is used as the source of supporting documents. However, qascu3 uses both aquaint-2 and blog for answer projection. In this run, the candidates of our factoid answerer system is also added to the candidate list and the crv method is used to choose the final answers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Other Runs</head><p>We only submitted two runs for other questions. qascu1 extracts the candidate terms from Wikipedia while qascu2 uses Wikipedia and also two documents from aquaint-2 as the source of term extraction. qascu3 is the same as qascu1 although its F-score is slightly different. This is due to some minor changes in the document list returned by Google in different times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>In this paper, we described our approach to answering different types of questions in QA track of trec. The factoid answerer subsystem is based on a modified version of aranea. The list answerer narrows down the list of candidate answers in order to get a higher precision. Our system approach for answering other questions is based on terms found in Wikipedia entries and ranking of nuggets is done through the use of target-specific and target-independent interest markers.</p><p>Although our system outperforms the median scores in all three types of questions, it can be improved in its algorithms, methods and components.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="5,85.04,273.88,441.92,9.57;5,133.64,286.17,344.72,7.86"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Answers tend to co-occur with one another and with the target and question keywords (acceptable answers are shown in bold face and the target and question keywords are underlined)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="6,195.70,478.42,220.61,9.57"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: List Answering Subsystem Architecture</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" coords="5,104.03,86.59,403.54,173.94"><head></head><label></label><figDesc>United, which operates a hub at Dulles . . . Delta, Northwest, American, British Airways and KLM share four screening machines in the basement. ttw 20060102.0106 Flyi suffered from rising jet fuel costs and the aggressive response of competitors, led by United and US Airways. They matched Independence's fares, ... from Dulles Airport to cities such as Newark. nyt 20050426.0151 Delta recently added more than 80 flights from its Atlanta hub and capped its business fares, while money-losing Independence Air, based at Washington's Dulles Airport, is making . . . . wikipedia At its peak of 600 flights daily, Independence, combined with service from JetBlue and AirTran, briefly made Dulles the largest low-cost hub in the United States. new york times Continental Airlines sued United Airlines and the committee that oversees operations at Washington Dulles International Airport yesterday, . . .</figDesc><table coords="5,104.03,86.59,337.29,42.04"><row><cell cols="2">Target 232: "Dulles Airport"</cell><cell>Question 232.6: "Which airlines use Dulles?"</cell></row><row><cell>Source</cell><cell cols="2">Snippet Containing Answers</cell></row><row><cell>ltw 20050712.0032</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" coords="9,141.16,87.44,329.67,160.92"><head>Table 1 :</head><label>1</label><figDesc>Official results of the 3 runs.</figDesc><table coords="9,141.16,87.44,329.67,137.92"><row><cell></cell><cell cols="5">QASCU1 QASCU2 QASCU3 median best</cell></row><row><cell>Factoid</cell><cell>0.256</cell><cell>0.242</cell><cell>0.213</cell><cell>0.131</cell><cell>0.706</cell></row><row><cell>Incorrect</cell><cell>227</cell><cell>231</cell><cell>239</cell><cell></cell><cell></cell></row><row><cell>Unsupported</cell><cell>25</cell><cell>26</cell><cell>25</cell><cell></cell><cell></cell></row><row><cell>Inexact</cell><cell>13</cell><cell>29</cell><cell>15</cell><cell></cell><cell></cell></row><row><cell>Locally correct</cell><cell>3</cell><cell>1</cell><cell>2</cell><cell></cell><cell></cell></row><row><cell>Globally correct</cell><cell>92</cell><cell>87</cell><cell>79</cell><cell></cell><cell></cell></row><row><cell>list</cell><cell>0.128</cell><cell>0.134</cell><cell>0.145</cell><cell>0.085</cell><cell>0.479</cell></row><row><cell>Other</cell><cell>0.275</cell><cell>0.281</cell><cell>0.278</cell><cell>0.118</cell><cell>0.329</cell></row><row><cell cols="2">Average per-series 0.222</cell><cell>0.221</cell><cell>0.214</cell><cell>0.108</cell><cell>0.484</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0" coords="8,101.63,701.48,108.26,7.47"><p>http://en.wikipedia.org</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct coords="10,102.01,266.47,424.95,9.57;10,102.01,280.02,424.95,9.57;10,102.01,293.57,174.77,9.57" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="10,392.69,266.47,134.27,9.57;10,102.01,280.02,81.19,9.57">Concordia University at the TREC-QA Track</title>
		<author>
			<persName coords=""><forename type="first">L</forename><surname>Kosseim</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Beaudoin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><forename type="middle">K</forename><surname>Lamjiri</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Razmara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,221.67,280.02,299.50,9.57">Proceedings of the 15th Text Retrieval Conference (TREC-15)</title>
		<meeting>the 15th Text Retrieval Conference (TREC-15)<address><addrLine>Gaithersburg, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-11">November 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,102.01,316.08,424.95,9.57;10,102.01,329.63,424.95,9.57;10,102.01,343.18,424.95,9.57;10,102.01,356.73,123.40,9.57" xml:id="b1">
	<analytic>
		<title level="a" type="main" coord="10,365.03,329.63,161.93,9.57;10,102.01,343.18,190.35,9.57">Integrating web-based and corpusbased techniques for question answering</title>
		<author>
			<persName coords=""><forename type="first">Boris</forename><surname>Katz</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jimmy</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Daniel</forename><surname>Loreto</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Wesley</forename><surname>Hildebrandt</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Matthew</forename><surname>Bilotti</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Sue</forename><surname>Felshin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Aaron</forename><surname>Fernandes</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Gregory</forename><surname>Marton</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Federico</forename><surname>Mora</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,317.25,343.18,209.71,9.57;10,102.01,356.73,89.12,9.57">Proceedings of the 12th Text Retrieval Conference (TREC-12)</title>
		<meeting>the 12th Text Retrieval Conference (TREC-12)</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,102.01,379.25,424.96,9.57;10,102.01,392.79,424.95,9.57;10,102.01,406.34,283.50,9.57" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="10,234.73,379.25,292.24,9.57;10,102.01,392.79,159.45,9.57">Question answering from the web using knowledge annotation and knowledge mining techniques</title>
		<author>
			<persName coords=""><forename type="first">Boris</forename><surname>Katz</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jimmy</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,286.26,392.79,240.70,9.57;10,102.01,406.34,248.99,9.57">Proceedings of the twelfth international conference on Information and knowledge management (CIKM)</title>
		<meeting>the twelfth international conference on Information and knowledge management (CIKM)</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,102.01,428.86,424.95,9.57;10,102.01,442.41,424.95,9.57;10,102.01,455.96,340.90,9.57" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="10,487.09,428.86,39.87,9.57;10,102.01,442.41,420.15,9.57">Extracting answers from the web using knowledge annotation and knowledge mining techniques</title>
		<author>
			<persName coords=""><forename type="first">Boris</forename><surname>Katz</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Gregory</forename><surname>Marton</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jimmy</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Aaron</forename><surname>Fernandes</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Stefanie</forename><surname>Tellex</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,115.65,455.96,236.90,9.57">Proceedings of the 11th Text Retrieval Conference</title>
		<meeting>the 11th Text Retrieval Conference</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,102.01,478.47,424.95,9.57;10,102.01,492.02,424.95,9.57;10,102.01,505.57,424.95,9.57" xml:id="b4">
	<analytic>
		<title level="a" type="main" coord="10,248.36,478.47,102.05,9.57;10,368.80,478.47,158.16,9.57;10,102.01,492.02,75.21,9.57">Answering Other questions using interest-markers</title>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Razmara</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">L</forename><surname>Kosseim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,203.04,492.02,323.92,9.57;10,102.01,505.57,277.62,9.57">Proceedings of the 8th International Conference on Intelligent Text Processing and Computational Linguistics (CICLing-2007)</title>
		<meeting>the 8th International Conference on Intelligent Text Processing and Computational Linguistics (CICLing-2007)<address><addrLine>Mexico</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="518" to="529" />
		</imprint>
	</monogr>
	<note>A little known fact is</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
