<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">B1B5E91B516E82D99CC87EC0F7A5685B</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-08-05T15:08+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Dynamic Domain</term>
					<term>Information Retrieval</term>
					<term>Topic Modelling</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>This paper describes the joint submission by Laval</head><p>University and Lakehead University to the TREC 2015 Dynamic Domain track. We submitted four runs for the main track and one run for the judged-only track. In our view, the Dynamic Domain process can be separated into two phases: a traditional static information retrieval phase to generate an initial set of documents, followed by a dynamic information retrieval phase which takes user feedback into account to improve the results. We developed an algorithm that combines keyword search, Latent Dirichlet Allocation, and K-Means clustering to take advantage of each technique to generate the best subset of results for the user. Our systems performed mostly over the median of the group of participants and our system for the "judged-only" task had the best score for a wide range of queries.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>T he Dynamic Domain track challenge (Yang, Frank &amp;   Soboroff, 2016) consists in performing information retrieval (IR) in a domain (such as Ebola, Local Politics, and Illicit Goods) using a dynamic process guided by the input of a simulated user. The aim is to return a diversified set of documents that both explores the full range of topics within the subject and researches in greater depth topics the user shows interest in.</p><p>We submitted systems for both "main" and "judged-only" tasks. For the first one, we run the system on the whole dataset with some un-judged documents, i.e. documents that can be relevant but we won't have a positive feedback. For the second one, the system only uses judged documents.</p><p>In this article, we use the words subtopic as an equivalent to the user's interests in an area. The topic is considered as the initial query. For example the initial query can be "Facebook Accounts" and the subtopics would be "What is the price of a stolen Facebook account" and "Who sells Facebook accounts". Subtopics are hidden in the process and we can only discover them by exploiting the user's feedback.</p><p>We investigated multiple approaches in order to retrieve a set of documents that is sufficiently diversified to cover different subtopics. In this paper, we present a method that combines classical information retrieval techniques (using Solr as a search engine framework) with a query reformulation step (in order to construct automatically new queries from the initial search results). We use LDA topic modelling and Kmeans clustering to select documents and keywords to generate new queries based on the user's interests and original query. By using these unsupervised learning techniques, we aim to create a query that will return both documents in new interesting topics and new documents related to known interesting topics.</p><p>In this paper, we will describe how we take user's feedback into account to refine search results, and how we handle the "false start" situation where no relevant documents are returned. We will report on various techniques we used to improve our result set. This includes established algorithms such as Named Entity Recognition (NER) functions and the Rocchio's relevance feedback to extract important keywords. We also report on novel ideas such as alternating between giving positive or negative weight boosts to known keywords in the new queries the system generated. The aim of our system was to allow our algorithm to strike a good balance between exploring the document space of the domain to potentially discover interesting new topics, and exploiting the space of similar documents to potentially discover better documents to represent known topics. Each component of our search algorithm was evaluated, both individually and combined together in a weighted average. Our experiments indicate that a combination of techniques returns the best search results on the training set that was made available for the TREC competition.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORKS</head><p>Dynamic Domain is a new TREC track, and thus the process is relatively unexplored in the literature. However, the challenge of diversifying IR results taking into account user's feedback has been studied in different forms. One popular technique is to use Rocchio's algorithm <ref type="bibr" coords="1,477.95,697.44,87.48,8.79;1,313.44,708.96,70.58,8.79" target="#b1">(Manning, Raghavan, &amp; Sch√ºtze, 2008)</ref> which considers the query as a vector with a weight assigned to each word. Then the algorithm updates the weights of the query with words from positives and negatives  <ref type="bibr" coords="2,91.95,88.32,161.60,8.79">(Cohn, Caruana, &amp; McCallum, 2003)</ref> and topic modeling <ref type="bibr" coords="2,94.30,99.84,148.63,8.79" target="#b0">(Andrzejewski &amp; Buttler, 2011)</ref> to capture diversification in the information retrieval process. Clustering is mostly used to be able to group documents in a fixed number of categories. Topic modelling has been used to find the most probable words for each topic and be able to formulate a new query from these words.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. GLOBAL VIEW OF THE SYSTEM</head><p>We can separate our system in two phases. In the initial search phase, the system only has the original query and the IR process returns five documents for this query. The second phase is the dynamic refinement phase, during which the user's feedback about the documents is used to reformulate the query, and this new query is used to return more documents. These two phases are illustrated in Figure <ref type="figure" coords="2,216.09,276.72,3.73,8.79" target="#fig_0">1</ref>.</p><p>The Dynamic Domain challenge can be considered a lowrecall task because of the important amount of irrelevant or un-judged documents. In order to get useful feedback from the user, it is important to generate a good set of initial documents in the initial phase.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Initial Search Phase &amp; Information Retrieval Process</head><p>The first phase consists in an information retrieval process to obtain an initial set of five documents based on the user's original query. This information retrieval process uses the popular Solr search engine to retrieve a set of 20 documents from the dataset. A classic IR system like Solr can retrieve the top documents by keywords, but it doesn't provide the diversification of results needed for the Dynamic Domain challenge; for this, it is necessary to discover topics present within the result set and to return one representative document per topic. We experimented with two algorithms for this purpose: we used a K-means clustering to discover clusters of topics within the search results <ref type="bibr" coords="2,198.96,492.72,99.99,8.79;2,47.04,504.24,58.41,8.79" target="#b2">(Steinbach, Karypis, &amp; Kumar, 2000)</ref>, and a Latent Dirichlet Allocation (LDA) algorithm <ref type="bibr" coords="2,88.52,515.76,127.99,8.79" target="#b0">(Andrzejewski &amp; Buttler, 2011)</ref> for topic modelling. These additional algorithms allow us to re-rank the documents and select the five best results to return to the user.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Dynamic Refinement Phase</head><p>The dynamic refinement phase starts with a set of five documents provided to the user, either from the initial search phase or from a previous iteration of this refinement phase. The user provides feedback to the system, by indicating which documents and which passages they find interesting. This information, along with the topic's title, allows our system to reformulate the query to find additional relevant documents given the user's interests. We used Rocchio's algorithm to extract keywords for query reformulation, given its demonstrated capability to improve information retrieval results <ref type="bibr" coords="2,77.05,685.68,107.50,8.79">(Salton &amp; Buckley, 1997)</ref> and to work on the queryvector model <ref type="bibr" coords="2,108.04,697.20,96.89,8.79" target="#b1">(Manning et al., 2008)</ref>. To further help the algorithm recognize the most potentially informative keywords, we paired it with a Named Entity Recognition (NER) algorithm. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Halting Condition</head><p>As illustrated in Figure <ref type="figure" coords="2,428.93,249.12,3.73,8.79" target="#fig_0">1</ref>, phase 2 of our system is an endless loop. The system has to decide when to halt the search and break out of this loop, when an additional iteration will no longer yield useful refinement of the search results. We experimented with three different halting strategies. The first one consists in hard-coding a two-iteration limit, which means that the system would only consider the feedback from the user for one iteration of the loop. The second strategy consists in hard-coding a three-iteration limit. Finally, the last strategy is to use at least 2 and up to 10 iterations, and to have the algorithm stop if it found no relevant documents during the last iteration. We will compare these strategies experimentally in Table <ref type="table" coords="2,348.98,386.88,3.73,8.79">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. INFORMATION RETRIEVAL PROCESS</head><p>The information retrieval process occurs at two moments in our system. The first time is during the initial search phase, discussed previously, where it must generate an initial set of five documents based on the user's original query. It then occurs during each iteration of the dynamic refinement phase of the system, to obtain a new set of five documents using the generated query. This IR process has an impact on the performance of our entire system, since the Cube Test (CT) and ¬µ-ERR metrics used to evaluate the TREC track penalize sessions with irrelevant documents as a waste of user's time.</p><p>In order to get the best set of five documents for a query, we have to get a balance between topic diversification and specialization (determined by search engine scoring). Diversification is very important for this task because a lot of documents are redundant copies from web pages and news articles; as a result, the five most relevant documents for a query could all contain exactly the same information. We implemented diversification by using a K-means algorithm and an LDA algorithm for topic modeling. Nonetheless, the Solr search engine scoring provides documents that are the most relevant to the initial query and thus to the user's needs. For the final set of results, we thus take a weighted average of these three algorithms' results. The complete IR process is illustrated in Figure <ref type="figure" coords="2,394.83,703.92,3.73,8.79" target="#fig_1">2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Solr</head><p>We use the Solr search engine as our IR baseline. We used it to retrieve documents given a query, either the user's original query or the reformulated queries generated by our dynamic refinement stage. The top five documents returned are kept as the Solr recommendation, the five most relevant documents given the query. Meanwhile, the top 20 documents returned by Solr are used as a corpus for the LDA and K-means topic modeling algorithms. These two algorithms implement the complementary diversification of the results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Latent Dirichlet Allocation (LDA)</head><p>LDA is an algorithm that takes in a distribution of words and discovers the groupings of topics it implies. In our system, we set LDA to the task of discovering five different topic groups from the top 20 documents returned by Solr from the current query. Next, the system builds five expanded queries, one for each of the five topics groups, by adding the five most probable words in the distribution of each topic group to the current query. It then runs a new Solr search with each of the five new queries, and keeps the top document of each one as the set of five LDA recommendations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. K-Means</head><p>K-Means is an unsupervised clustering algorithm. In our system, we use it to create five clusters of documents from the corpus of 20 documents returned by Solr, using the documents' word vectors and cosine distance for similarity. The system keeps the document closest to each cluster centroid to create the set of five K-means recommendations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Combination</head><p>After these steps, our system has generated three sets of five recommended documents given a query. Moreover, these sets can contain some documents in common. We thus decided to create a weighted combination of these three sets. For the "main" task of the TREC competition we used a repartition of weights of 49%, 25.5%, and 25.5% for Solr, LDA and K-Means results respectively. This gives more importance to a document selected by Solr as relevant to the query over documents selected by either one of the diversification techniques, but more importance to documents selected by both diversification techniques simultaneously as a good representative of an additional topic. For the "judged-only" task of the TREC competition, we found that LDA produced better results than either Solr or K-means individually. Consequently, we changed the weights to 30%, 45%, and 25% for the Solr, LDA and K-means results respectively. The dynamic refinement process of our system takes in the user's feedback on the set of five documents retrieved and uses that feedback to improve the results. There are two possible situations the system could be in. The first is if the user marked at least one document as relevant; we can consider that we are in the good area of the domain to search. The second situation is the "false start" situation, when there are zero relevant documents in the set of five results. In the first situation, our dynamic refinement algorithm will take advantage of the positive feedback information to generate a new query. Our algorithm has access to different sources of information, including the topic title and the passage of the document marked as relevant by the user.</p><p>We used the extraction of title's words as we considered as a high informative part of the feedback. Because of the important difference between passages length, taking the whole passage can't be an option in most situations.</p><p>In order to focus on the most informative parts from the passage, we decided to use Named Entity Recognition from NLTK to capture named entities on it. We considered that if something is named in the passage, it means that this entity can have a relative importance or meaning for the author for the related subtopic.</p><p>We also extracted words with Rocchio's algorithm applied on our five whole documents. This algorithm works by applying a negative weight for terms present in negative documents and boosting words from positive ones. With a TF-IDF vector model we can extract common and informative words from positive documents. With these new words we can compute a new query, which will be used on our static process as the initial query to provide five new documents to the user. In the second or "false start" situation, the user has marked none of the five documents previously returned as relevant. This situation is difficult for two reasons. The first one is that we are in a bad area, and it might be difficult to find a relevant document. The second one is that we didn't found document and we lost some time in the process of retrieving documents. The CubeTest metric take time into account and, as a consequence, we have to find relevant documents quickly to perform better. The false-start means the algorithm has found itself in a bad area of the domain space, as illustrated in Figure <ref type="figure" coords="4,47.04,480.48,3.73,8.79" target="#fig_3">4</ref>, and it is critical to jump to a different area. This is implemented by using Rocchio's relevance feedback algorithm on all five documents to extract their most common keywords. These keywords are given a negative boost in a new Solr query, in order to retrieve very different documents in the next IR process. We found that this approach yields better results than simply taking the lower ranked documents of the previous query.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. EXPERIMENTAL RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Data</head><p>The dataset proposed for this competition is separated in three domains.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1) Ebola</head><p>The Ebola dataset is related to the Ebola outbreak in 2014-2015, it contains 497,362 web pages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2) Local Politics</head><p>The Local Politics dataset is related to related to local politic from Pacific Northwest. It contains 6,831,397 web pages from October 2011 to February 2013.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3) Illicit goods</head><p>The last dataset is related to how illicit goods are sold and advertised on the web. It contains around 3 millions post and 526,717 threads from hacking forums.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Data Pre-Processing</head><p>We pre-processed the corpus by using the porter stemmer algorithm over the whole corpus with the library NLTK and we used the lemmatization from WordNet. We also cleaned the html tags and punctuation with NLTK.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Metrics 1) Cube Test (CT)</head><p>The Cube Test metric <ref type="bibr" coords="4,417.16,198.48,143.63,8.79" target="#b1">(Luo, Wing, Yang, &amp; Hearst, 2013</ref>) uses the analogy of a empty cube to fill with information on each subtopic. This metric has a maximum of 1 as the height of the cube. It is defined as:</p><p>!" #, % = ()*+ #, % /"*-. % (1) where Q is the information need and D the list of document. The metrics works as the measure of the changing volume during a period of time. The higher the Cube Test is, the better the system is.</p><p>The fact that the Cube Test take into account the period of time indicates that if we take multiple "turns" to find documents, the score will be penalized instead of finding early documents and stopping the search in the early turns. where n is the number of documents in the ranking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Training Results 1) Results for Main and Judged-only Tasks</head><p>We used the TREC data provided in order to train and finetune our system. We compared each IR algorithm alone and in combination to see which one performed better in the main task and in the judged-only task. The results are presented in Figures <ref type="figure" coords="4,345.94,574.08,4.92,8.79" target="#fig_5">5</ref> and<ref type="figure" coords="4,370.38,574.08,3.73,8.79">6</ref>.</p><p>In both cases, it can be seen that LDA performs better than the other algorithms for the CubeTest metric, while Solr performs better for the ¬µ-ERR metric. This illustrates the need for a combination of all three algorithms as we have used, to match up the strengths of each and compensate for their weaknesses. Indeed, our results show that the combination of algorithms yields, in the main task, a performance almost equal to LDA on the Cube Test metric and almost equal to Solr on the ¬µ-ERR metric. In the judged-only task, the combination of algorithms actually yields the best performance on the Cube Test metric, but at the cost of a lower second-best performance on the ¬µ-ERR metric. This improvement in the results comes from the additional information available to the combination algorithm. A document retrieved by all three algorithms has a better chance of being relevant than a document retrieved by two algorithms, and that one still has a better chance of being relevant than a document retrieved by one algorithm alone. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2) Feedback Analysis</head><p>We have different options when we want to use the feedback, we can use words from relevant documents to exploit our knowledge of discovered subtopics to find other relevant documents for related subtopics. Or we can make the assumption that we want documents that have different words from already discovered subtopics and try to give a negative boost to words from our feedback.</p><p>To study how to use the user's feedback in the dynamic refinement phase of our system, we start by separating the feedback into two groups of words: (1) the words extracted from portions of the text (text passage with NER algorithm and topic Title), and (2) the words extracted with Rocchio's algorithm from whole documents. We gave each group alternatively a positive (+) or negative (-) boost in the new Solr query. The goal is to see how these differences affect the results (Figure <ref type="figure" coords="5,374.00,191.76,3.59,8.79" target="#fig_6">7</ref>). We can see that giving a positive boost to the text-portion keywords yields better results for the Cube Test metric than using a negative boost. We can explain this result by the fact that words from topic's title and text passage's can be shared between different topics. Therefore, excluding them can lead to a loss of information. However, giving these words a negative boost has a positive impact on ¬µ-ERR metric, which means the ranking of the documents becomes more accurate. The "main" task and the "judged-only" task have to be analyzed separately. One part of the competition involved 6 million documents, while the other part was performed only with 25,000 documents. The first corpus includes un-judged documents, which appears to have no feedback but could be relevant to a topic. As a consequence, it adds an important amount of noise for the algorithms. The second corpus only have judged-documents. The information provided by the feedback is more reliable, because we can not have falsenegatives documents.</p><p>For the "main" task, we evaluated four different system configurations. We submitted three evaluations with it, using the three halting conditions described previously with LDA. However, a system comprising a combination of techniques was able to perform better in some way with more balanced results between CubeTest and ¬µ-ERR metrics. As we can see on the first and second row of Table <ref type="table" coords="6,212.29,265.20,3.73,8.79">1</ref>, LDA can provide better results for the Cube Test and lower results over the median than the combination system. On the contrary, the combination of techniques has more results over the median and lower percentage of best results. For the ¬µ-ERR this result is exactly at the opposite.</p><p>These results can be explained by the ability of LDA to do topic modelling and to be able to capture more topics. By doing a good diversification, the topic modeling process is also able to avoid more false starts. However, the diversification of documents retrieved by Solr only is not enough. As we saw previously, K-means alone performed poorly. Instead of only diversifying documents retrieved by Solr, the topic modelling allows to create a new query with extra new words and to submit a new request to the index. This supplementary step might give to LDA an advantage. Some documents overlooked by a normal keyword search can appear very relevant once the results are broken down into topics. However, LDA does not provide a ranking of topics nor of documents, which costs our system in ¬µ-ERR performance and let the combination of techniques have a better balance between the two metrics with only a little loss over the CubeTest metric.</p><p>The two last rows of Table <ref type="table" coords="6,185.29,529.68,4.92,8.79">1</ref> for the main task show systems that use more than two iterations of results (more than one feedback from user). Ul_lda.roc.3 uses three iterations and Ul_lda.roc.10 uses two to ten iterations to explore results. As we can see, this lengthier exploration has been strongly penalized by the Cube Test metric. Since many of the later iterations were "false starts", the metric penalized them as a waste of user time.</p><p>For the "judged-only" task, we submitted only one run of our algorithm to complete the limit of five runs. Our experiments indicated previously that the combination of algorithms is the best system from the point of view of the Cube Test metric. Results indicate that it performs well compared to other systems from this point of view too. Indeed, this system provides the best results for nearly 40% of the topics and has a result over the median of the group of participants for 98.3% of the topics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VIII. CONCLUSION</head><p>In this paper, we presented the user-feedback-based iterative search system we implemented to solve the TREC Dynamic Domain track. We evaluated different algorithms to try to diversify our results and cover a maximum of interesting topics. We also tried different strategies to re-orient our search based on user feedback to. During our experiments, we had to cope with various difficulties such as the important amount of irrelevant or un-judged documents, the difficulty to re-orient the search after a "false-start" situation, and the importance of quickly finding results to avoid important time penalty. The final combination of techniques we selected provides a system capable of balancing exploration and exploitation. Our experimental results indicate that this system performed as the best system for both CubeTest and ¬µ-ERR.</p><p>In future work, and possibly for TREC 2016, we plan to handle the "false-start" by using active learning to train a classifier that could predict if a document will be relevant or not. We will also try a different basic search engine instead of Solr, to see how it impacts the results.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="2,313.44,218.98,105.49,7.07;2,313.44,62.82,252.00,154.08"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Global System Overview</figDesc><graphic coords="2,313.44,62.82,252.00,154.08" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="3,313.44,244.08,120.61,6.93;3,365.25,265.62,148.34,8.61;3,323.52,51.30,252.00,189.36"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Information Retrieval Process V. DYNAMIC REFINEMENT PROCESS</figDesc><graphic coords="3,323.52,51.30,252.00,189.36" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="3,313.44,616.80,89.47,6.93;3,333.60,393.54,252.00,221.04"><head>Fig</head><label></label><figDesc>Fig. 3. Feedback processing</figDesc><graphic coords="3,333.60,393.54,252.00,221.04" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3" coords="4,47.04,346.66,57.31,7.07;4,119.15,199.59,185.06,143.75"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. False-Start</figDesc><graphic coords="4,119.15,199.59,185.06,143.75" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4" coords="4,313.44,366.31,167.21,9.92;4,323.64,389.35,241.77,9.92;4,313.44,402.00,251.85,8.79;4,313.44,413.52,252.00,8.79;4,313.44,425.04,57.99,8.79;4,313.44,440.40,61.36,8.79;4,348.54,460.84,32.46,10.49;4,401.02,453.27,5.45,10.49;4,401.30,467.52,4.68,10.49;4,390.39,448.36,4.52,7.42;4,386.19,476.01,13.05,7.42;4,410.43,460.84,119.85,10.49"><head></head><label></label><figDesc>2) ¬µ-Expected Reciprocal Rank (¬µ-ERR)¬µ-ERR is a variant of Expected Reciprocal Rank (Chapelle, Metlzer, Zhang, &amp; Grinspan, 2009) which calculates the ERR for each topic and averages the scores across subtopics arithmetically</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5" coords="5,47.04,290.26,97.49,7.07;5,76.08,297.54,213.60,160.08"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Results for "main" task</figDesc><graphic coords="5,76.08,297.54,213.60,160.08" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6" coords="5,313.44,389.14,252.06,7.07;5,313.44,398.26,34.17,7.07;5,323.52,200.82,248.40,186.24"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Results of comparison between positive and negative feedback processing</figDesc><graphic coords="5,323.52,200.82,248.40,186.24" type="bitmap" /></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct coords="6,323.54,338.88,241.82,8.79;6,313.44,351.12,251.92,8.79;6,313.44,363.12,251.95,8.79;6,313.44,375.12,215.69,8.79;6,323.54,387.36,241.88,8.79;6,313.44,399.36,251.95,8.79;6,313.44,411.36,251.86,8.79;6,313.44,423.60,167.20,8.79;6,323.54,435.60,241.85,8.79;6,313.44,447.60,251.90,8.79;6,313.44,459.78,251.88,8.61;6,313.44,471.84,103.00,8.79" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="6,512.87,339.06,52.50,8.61;6,313.44,351.30,144.85,8.61;6,345.76,399.54,189.52,8.61;6,541.48,435.60,23.90,8.79;6,313.44,447.60,251.90,8.79;6,313.44,459.78,174.81,8.61">Semisupervised clustering with user feedback. Constrained Clustering: Advances in Algorithms</title>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Andrzejewski</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Buttler</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">O</forename><surname>Chapelle</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Metlzer</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Grinspan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="6,313.44,363.12,251.95,8.79;6,313.44,375.12,211.29,8.79;6,381.30,411.36,184.00,8.79;6,313.44,423.60,162.33,8.79">Proceedings of the 17th ACM SIGKDD international conference on Knowledge discovery and data mining</title>
		<editor>
			<persName><forename type="first">D</forename><surname>Cohn</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">R</forename><surname>Caruana</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Mccallum</surname></persName>
		</editor>
		<meeting>the 17th ACM SIGKDD international conference on Knowledge discovery and data mining</meeting>
		<imprint>
			<date type="published" when="2003">2011. 2009. 2003</date>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="17" to="32" />
		</imprint>
	</monogr>
	<note>Latent topic feedback for information retrieval</note>
</biblStruct>

<biblStruct coords="6,323.54,483.84,241.83,8.79;6,313.44,496.02,251.95,8.61;6,313.44,508.08,251.93,8.79;6,313.44,520.08,251.94,8.79;6,313.44,532.08,220.92,8.79;6,323.54,544.32,241.75,8.79;6,313.44,556.32,251.95,8.79;6,313.44,568.32,112.41,8.79;6,323.54,580.56,241.83,8.79;6,313.44,592.56,251.86,8.79;6,313.44,604.56,101.88,8.79" xml:id="b1">
	<analytic>
		<title level="a" type="main" coord="6,550.44,484.02,14.93,8.61;6,313.44,496.02,251.95,8.61;6,313.44,508.26,144.96,8.61;6,483.60,580.56,81.77,8.79;6,313.44,592.56,144.25,8.79">The water filling model and the cube test: multi-dimensional evaluation for professional search</title>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Wing</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><forename type="middle">;</forename><surname>Hearst</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><forename type="middle">D</forename><surname>Manning</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><surname>Sch√ºtze</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="6,313.44,520.08,251.94,8.79;6,313.44,532.08,216.05,8.79;6,313.44,556.50,157.54,8.61">Proceedings of the 22nd ACM international conference on Conference on information &amp; knowledge management</title>
		<meeting>the 22nd ACM international conference on Conference on information &amp; knowledge management<address><addrLine>Salton, G., &amp; Buckley, C</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge university press Cambridge</publisher>
			<date type="published" when="1997">2013. 2008. 1997</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="355" to="363" />
		</imprint>
	</monogr>
	<note>Improving retrieval performance by relevance feedback</note>
</biblStruct>

<biblStruct coords="6,323.54,616.56,241.80,8.79;6,313.44,628.80,251.95,8.79;6,313.44,640.80,192.11,8.79;6,323.54,652.80,241.83,8.79;6,313.44,665.22,137.33,8.61" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="6,559.33,616.74,6.01,8.61;6,313.44,628.98,215.02,8.61">A comparison of document clustering techniques</title>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Steinbach</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">G</forename><surname>Karypis</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">V</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="6,378.68,640.80,122.48,8.79;6,515.38,652.98,49.99,8.61;6,313.44,665.22,137.33,8.61">TREC 2015 Dynamic Domain Track Overview</title>
		<editor>
			<persName><forename type="first">H</forename><surname>Yang</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Frank</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">I</forename><surname>Soboroff</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2000">2000. 2016</date>
		</imprint>
	</monogr>
	<note>KDD workshop on text mining</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
