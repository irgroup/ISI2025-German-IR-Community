<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,75.75,73.52,444.10,12.83;1,193.50,89.27,207.86,12.83">TREC 2003 Genomics Track Experiments at UTA: Query Expansion with Predefined High Frequency Terms</title>
				<funder ref="#_V4V3UZn">
					<orgName type="full">Academy of Finland</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName coords="1,213.75,119.63,55.06,11.10"><forename type="first">Ari</forename><surname>Pirkola</surname></persName>
							<email>pirkola@cc.jyu.fi</email>
						</author>
						<author>
							<persName coords="1,295.15,119.63,88.02,11.10"><forename type="first">Erkka</forename><surname>Leppänen</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">University of Tampere (UTA)</orgName>
								<address>
									<country key="FI">Finland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Information Studies</orgName>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,75.75,73.52,444.10,12.83;1,193.50,89.27,207.86,12.83">TREC 2003 Genomics Track Experiments at UTA: Query Expansion with Predefined High Frequency Terms</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">4BCFB97577B576B13CF570A5D518922D</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-08-05T15:00+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We studied the effects of query expansion and query structure on retrieval performance. Two sets of words frequent in relevant documents for Genomics Track's training topics were collected, the first manually and the second automatically. The high frequency words collected and the names of organisms designated in the test topics, were used as expansion keys in gene name queries formed from the final test topics. The results indicated that Boolean structured queries expanded with automatically collected high frequency words and names of organisms performed considerably better than queries containing gene names only as keys. In the Boolean queries the expansion keys were categorized based on the aspects they represent in the documents discussing gene function. All the structured queries performed better than unstructured queries where each key contributed equally to document weights. In the structured queries gene names were assigned more weight than the expansion keys.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="596.0" lry="792.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="596.0" lry="792.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="596.0" lry="792.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="596.0" lry="792.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="596.0" lry="792.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="596.0" lry="792.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="596.0" lry="792.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="596.0" lry="792.0"/>
		<surface n="9" ulx="0.0" uly="0.0" lrx="596.0" lry="792.0"/>
		<surface n="10" ulx="0.0" uly="0.0" lrx="596.0" lry="792.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>TREC Genomics Track's primary task was defined as follows: For gene X, find all Medline references that focus on the basic biology of the gene or its protein products from the designated organism. Basic biology includes isolation, structure, genetics and function of genes/proteins in normal and disease states. Documents for which there were GeneRIFs were considered relevant. As the focus of GeneRIFs is to provide information on the functions of genes (and proteins), basically documents discussing gene function were searched for in the primary task.</p><p>In this research we studied, first, which types of words other than gene names are useful in searching for documents for the given task and, second, how queries using these words should be formulated for the best possible retrieval performance (the question of query structure). For the first research problem we identified two sets of words (manual and automatic identification) whose frequencies were higher in documents relevant for Genomics Track's training topics than in the rest of the documents in the Medline test collection. The power of these words to actually discriminate between gene function and other documents was evaluated in experiments where the words were used as expansion keys in the final test queries. The performance of the expanded queries was compared to the performance of baseline queries containing gene (and protein) names only as query keys. For the runs that were submitted to NIST the expansion keys were selected manually. Most of the runs we did were additional runs, and for these the expansion keys were selected automatically. In the additional tests names of organisms were also used as expansion keys.</p><p>The second research problem considered the effects of query structure on retrieval performance. The test system of this study was the InQuery retrieval system, a probabilistic retrieval system. In InQuery queries can be structured using a variety of query operators. The assumption was that for good performance gene names should be weighted more than other keys, and that in addition to gene names other aspects of relevant documents should also be included in queries.</p><p>These factors were taken into account in the Boolean structured queries tested in the study. The results showed that performance was improved considerably when gene name queries were expanded with names of organisms. The best queries, however, were extensively expanded Boolean structured queries where gene names were weighted structurally more than the other keys, and where expansion keys were categorized based on the aspects they represent in gene function documents. The categories were: (1) names of organisms (given in the test topics), (2) high frequency special terms related to genes and proteins, and (3) high frequency general biological terms. Expansion key categories 2 and 3 were selected automatically from documents relevant for Genomics Track's training topics. The Boolean structured queries performed considerably better than queries containing gene names only as keys (baseline) and unstructured queries. In the unstructured queries gene names and expansion keys were weighted equally.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Methods and data</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Indexing and query keys</head><p>We used the following approaches and techniques in indexing and for query keys:</p><p>• Genomics Track's test collection for the primary task was a subset of the Medline collection. Each record consisted of several fields. We indexed the text fields TI (title), AB (abstract), and MH (MeSH headings). (And PMID, PubMed Identifier.) • Letters were normalized to lower case.</p><p>• Query keys and the words of documents were normalized using the morphological analyzer Kstem, which is part of InQuery.</p><p>• Only letters (a-z) and numbers (0-9) were indexed. Hyphens, slashes and other characters in strings than letters and numbers were replaced by spaces, and were not searchable. • Strings containing both letters and numbers were decomposed into separate alphabetical and numerical strings. For example, the string AW986256 was converted into aw 986256. In searching the decomposed strings were combined by means of a proximity operator of #od4. For the string AW986256 the proximity statement was as #od4(aw 986256).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Retrieval system and query operators</head><p>The test system was the InQuery retrieval system <ref type="bibr" coords="2,276.75,421.32,81.97,10.13" target="#b0">(Allan et al., 2000;</ref><ref type="bibr" coords="2,361.50,421.32,86.93,10.13" target="#b1">Broglio et al., 1994)</ref>. InQuery is a probabilistic retrieval system based on the Bayesian inference net model. Queries can be presented as a bag of word queries, or they can be structured using a variety of query operators. In this study we considered structured queries. For the structured queries high frequency words were selected as expansion keys (Section 2.3). The expansion keys were grouped into categories (subqueries) based on the aspects they represent in documents. In these types of queries different aspects of documents discussing the functions of genes contribute to retrieval. Query operators were applied in such a way that more weight was assigned to gene names than to other keys.</p><p>Boolean conjunction ("and") formed the basis of queries. In InQuery Boolean conjunction is denoted using the operators of #band or #filreq (and for phrases #odn, see below). All the argument keys of the #bandoperator must occur in a document in order for the operator to contribute to the weight computed for that document. Otherwise #band contributes to the document score like the #and-operator. For the #bandoperator, see <ref type="bibr" coords="2,115.93,586.32,118.24,10.13" target="#b4">Pirkola and Järvelin (2001)</ref>. The weight of the #and-operator is computed as the product of the weights of its arguments. The syntax of #filreq (filter require) operator is #filreq(arg1 arg2). Documents for the first argument are returned and ranked if and only if the second argument would return documents.</p><p>Other InQuery operators used in the queries of this study were #sum, #syn, #odn, and #phrase. For the #sumoperator, the system computes an average weight of query keys (subqueries). The #syn-operator treats its operand query keys as instances of the same query key. The benefits of combining keys by the #syn-operator is discussed in <ref type="bibr" coords="2,123.55,675.57,111.28,10.13" target="#b2">Darwish and Oard (2003)</ref>. Phrases were searched for using the proximity operators of #odn and #phrase. The #odn-operator is a Boolean conjunction operator. The operator retrieves documents where all the arguments of the operator appear in a specified order. The window size n refers to the number of spaces between words in the text. In the queries of this study n=4 was used as a window size. The #phraseoperator is treated as #odn-operator, if the terms within the phrase-operator occur together in a collection. If the terms do not co-occur in the collection the phrase operator is turned into a #sum-operator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Selecting expansion keys</head><p>We tested in this study whether words typical in gene function documents are helpful for the given retrieval task when used as expansion keys in gene name queries. Two lists of expansion keys were collected, the first manually and the second automatically. The basic assumption behind this approach was that those words whose frequencies were high in relevant documents for the Genomics Track training topics with respect to their frequencies in other Medline documents are good discriminators and good keys in queries, designating generally documents discussing gene function.</p><p>In manual word selection a list of words was collected that in an intellectual analysis seemed to be frequent in the documents relevant for the training topics. The words were divided into two categories: (a) gene function terms, and (b) other high frequency terms, for example, cell, mrna, and sequence. The latter words are called general terms in Section 3.1. The two categories formed two different subqueries in the structured queries.</p><p>The automatic expansion key selection was done as follows. For each training topic at most two relevant documents were chosen for statistical analysis. The total number of 91 relevant documents and approximately 24 000 words were analysed. The same number of randomly selected documents (approximately the same number of words) was analysed. In both cases words were normalized using the Kstem morphological analyser, and stopwords were removed. For each remaining word the frequency of a word was computed. Those words whose frequencies were low (freq. &lt; 10) were removed.</p><p>A word i was chosen as an expansion key based on the following criteria:</p><p>(1) Its term frequency in the relevant documents (tf i, rel ) was higher than a given threshold; the threshold was tf i, rel = 30 (in other words, word's term frequency on the average was higher than 30/91).</p><p>(2) Its relative frequency was higher than a given threshold. The relative frequency of word i is its frequency in the relevant documents (tf i, rel ) divided by its frequency in the random documents (tf i, ran ). Three thresholds were tested: tf i, rel / tf i, ran = 3.1 (No of expansion keys = 32) tf i, rel / tf i, ran = 3.7</p><p>(No of expansion keys = 20) tf i, rel / tf i, ran = 4.6</p><p>(No of expansion keys = 11)</p><p>The numbers in parentheses show the number of words kept for expansion as the threshold was applied.</p><p>The automatically selected word list with the threshold 3.1 is presented in the Appendix.</p><p>In both cases (manual and automatic selection of expansion keys) the selected words were added to gene name queries (baseline) to yield expanded queries. The performance of the expanded queries was compared to that of baseline queries. Manually collected expansion keys were used in the runs submitted to NIST while the automatically selected words were used in the additional runs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Experiments</head><p>In summary, we tested in this study the effects of (1) manually and (2) automatically selected high frequency words as expansion keys, and (3) different query structures. Different types of expansion keys were put into different subqueries in queries. In the experiments 2 and 3 we also tested the effects of organism name keys.</p><p>Next, the query types used in the three experiments are presented.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Manually selected expansion keys</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Baseline</head><p>The baseline queries were formulated on the basis of Genomics Track's test topics, and they contained all the gene and protein names occurring in the topics.</p><p>Phrases were searched for using the proximity operator of #od4, e.g., #od4(hematopoietic growth factor). As there is much variation how phrasal expressions are written in texts, phrase components were also repeated as single keys in queries, and for phrases consisting of more than 3 phrase components several proximity statements were constructed, with consecutive phrase components appearing in 1-3 proximity statements, as in the example below:</p><p>#od4(camp responsive element) #od4(responsive element binding) #od4(element binding protein) #od4(binding protein 2)</p><p>An example of a baseline query is presented below (query 31):</p><p>#sum(gnrhr #od4(gonadotropin releasing hormone) #od4(releasing hormone receptor) gnrhr gonadotropin releasing hormone receptor)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Test queries (runs submitted to NIST)</head><p>In the training experiments we tested various combinations of query operators. The most effective query types turned out to be those based on InQuery's band-and filreq-operators. They were named utaband and utafil. In the utaband queries in addition to the #od4-operator the #phrase-operator was used for phrases. The utaband queries contained 74 manually selected expansion keys, and the utafil queries 58 expansion keys. The structure of utaband is schematically as follows:</p><p>#band( #and(#sum(gene names) #syn( gene function terms)) #and (#sum(gene names) #syn(general terms)) )</p><p>The structure of utafil is schematically as follows:</p><p>#filreq( #sum(gene names #syn(gene function terms) #syn(general terms)) #syn(gene names [as single keys]</p><p>) )</p><p>The last #syn-subquery functions as a filter, basically being a Boolean conjunction restriction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Automatically selected expansion keys, and organism names as expansion keys</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Baseline</head><p>The baseline was the same as in the experiments presented in Section 3.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Test queries</head><p>The expansion key categories were as follows:</p><p>1. Organism names (on) designated in the Genomics Track's test topics. However, instead of using the Latin names used in the test topics, we used the MeSH terms human, drosophila, rats and mice.</p><p>2. Automatically selected high frequency terms related to genes and proteins. These are called special terms below.</p><p>3. Automatically selected high frequency general biological terms, i.e., other terms than those in the cases 1 and 2 frequent in documents discussing the functions of genes. These are called general terms below.</p><p>Obviously, the boundary between the categories 2 and 3 is diffuse, in some cases causing classification difficulties.</p><p>All the special and general terms collected are shown in the example queries below and in the Appendix.</p><p>In queries the terms of the category 2, as well as the terms of the the category 3, were combined by the #synoperator to yield a #syn-subquery. The subqueries were combined with each other as follows (gn refers to gene names):</p><p>• gn (baseline)</p><p>• gn + on (see Section 3.3) The first #syn-subquery includes the general terms while the second #syn-subquery includes the special terms.</p><p>We call the query structure above #band/#syn structure, and it was used in all queries presented in this section, only the expansion keys were different in different types of queries. As can be seen in the example, in the #band/#syn structure the expansion keys of a certain category are combined with the #syn-operator.</p><p>The gene names are combined with the #sum-operator. The #sum-subquery, the #syn-subqueries, and organism name are combined with the #band-operator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Query structures</head><p>In the query structure experiments, we studied #band/#syn structured (presented in Section 3.2), #and/#band structured, and unstructured queries. In this section we present the last two query types. The #and/#band structure gave good results in the training tests, and was chosen for the final tests.</p><p>The #and/#band structure is schematically as follows:</p><p>#and( #band(#sum(gene names) #syn(general terms)) #band(#sum(gene names) #syn(special terms)) #band(#sum(gene names) organism name) )</p><p>The first example below represents a #and/#band structured query, and the second one an unstructured query (query 31 with 32 expansion keys).</p><p>#and/#band structured query Table <ref type="table" coords="8,84.81,71.82,5.63,10.13">2</ref> shows the results for the queries where the expansion keys were selected on the basis of the threshold of 3.1 (Section 2.3) as they gave better results than the queries with the thresholds of 3.7 and 4.6.</p><p>The use of special and general terms as expansion keys is useful: the gn+on+ general+special / #and/#band queries give the best results among all query types tested in this study (average precision 0.3097). It should be noted that the structure of the gn+on+general+special / #and/#band queries and the gn+on / #band queries (average precision 0.2600) is the same. In both a gene name subquery is combined to an organism name subquery with the #band-operator. The difference is that the gn+on / #band queries do not contain the automatically selected expansion keys.</p><p>The unstructured queries containing all the expansion keys perform poorly (Table <ref type="table" coords="8,418.70,200.07,4.12,10.13">2</ref>). For them average precision is 0.1692, while the average precision for the #band/#syn and #and/#band queries containing all expansion keys is 0.2648 and 0.3097, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Discussion and conclusions</head><p>In this study we explored an approach to concept analysis similar to that used in traditional Boolean searching. Based on the concept analysis the concepts of a request which represent different aspects of the request (conjunctive or restrictive concepts) are combined with the and-operator, and those concepts which represent the same aspect (disjunctive concepts) are combined with the or-operator with one another. For experienced users, Boolean and natural language searching have been shown to yield comparable results <ref type="bibr" coords="8,57.00,342.57,83.41,10.13" target="#b3">(Hersh et al., 1998)</ref>. We analysed documents instead of requests, and formulated Boolean types of queries where terms representing the same aspect were put into the same category (subquery) in a query. The test system of this study was the InQuery retrieval system, a probabilistic retrieval system. Probabilistic query operators corresponding to the Boolean and and or operators were used in the queries. We found that retrieval performance improved remarkably with respect to gene name queries by expanding queries with names of organisms and automatically selected terms whose frequencies were high in gene function documents, and by using Boolean #and/#band structured queries. Extensively expanded queries gave the best results. The benefits of the #and/#band structure are that gene names are weighted more than other keys and that the #and/#band structure captures in a balanced way the different aspects involved in gene function documents. Different documents discussing gene function share the same aspects and the same terms. We identified four aspects (gene names and three aspects for expansion), but this is a crude categorization which should be elaborated and analysed more carefully in terms of biological processes and structures. The results, however, show that it is possible to improve results by using predefined high frequency discriminating words as query keys.</p><p>The most effective expansion key type was organism name. The explanation for this seems obvious. Different organisms contain the same genes which are named similarly. Unless organism name is given in a query, documents discussing the gene of interest in another organism may be retrieved.</p><p>There are many factors affecting the effectiveness of the expanded queries. Their performance depends in particular on which individual keys are used, the number of keys used, and the way the keys are applied in queries. In this study the latter two questions were investigated. The first is a question for future research. Also, based on these initial experiments on the use of predefined discriminating words as expansion keys, a more sophisticated scheme for the identification of discriminating words might be developed in future research. In addition to the relative term frequency that we used as a basis of the selection of expansion keys, the use of document frequency, for example, in such a scheme might be useful.</p></div>		</body>
		<back>

			<div type="acknowledgement">
<div><head>Acknowledgements</head><p>The Inquery search engine was provided by the <rs type="institution">Center for Intelligent Information Retrieval at the University of Massachusetts</rs>. This research was supported by the <rs type="funder">Academy of Finland</rs> (funding decision <rs type="grantNumber">80142</rs>).</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_V4V3UZn">
					<idno type="grant-number">80142</idno>
				</org>
			</listOrg>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Results</head><p>The results of the expansion experiments are presented in Table <ref type="table" coords="7,340.45,99.57,5.63,10.13">1</ref> (manual selection of expansion keys) and Table <ref type="table" coords="7,84.85,112.32,5.63,10.13">2</ref> (automatic selection of expansion keys, and organism names as expansion keys). Table 2 also presents the results of query structure experiments. As shown in Table <ref type="table" coords="7,142.91,563.82,5.63,10.13">1</ref> there is only a small difference between the performance of baseline and the performance of queries containing manually selected expansion keys. The difference between utaband and utafil is also small. It should be noted that the utaband and utafil queries did not contain organism name keys.</p><p>The run gn+on (organism names as expansion keys) where the two subqueries (gn and on) are combined with the #band-operator performs considerably better than baseline (Table <ref type="table" coords="7,387.03,626.82,3.97,10.13">2</ref>). For gn+on queries average precision is 0.2600. For the baseline the corresponding number is 0.1896. The performance of gn+on is lower in the case of the #and-operator but is still better than baseline's performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Appendix -the automatically selected expansion keys</head><p>The automatically selected expansion keys presented below are sorted by the score of word's relative frequency, i.e., word's frequency in a sample of documents relevant for Genomics Track's training topics divided by word's frequency in the same number of randomly selected documents. Min after many values show that in that case the real value could be higher (but not lower) than the value shown and used in the experiments as a basis of the selection of expansion keys. This is due to removal of words of low frequency (Section 2.3). </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct coords="9,57.00,237.57,456.63,10.13;9,57.00,250.32,335.41,10.13;9,57.00,262.32,223.58,10.13" xml:id="b0">
	<monogr>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Allan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><forename type="middle">E</forename><surname>Connell</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W</forename><forename type="middle">B</forename><surname>Croft</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">F.-F</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<ptr target="http://trec.nist.gov/pubs/trec9/t9_proceedings.html" />
		<title level="m" coord="9,397.97,237.57,115.66,10.13;9,57.00,250.32,188.93,10.13">Inquery and TREC-9. The Ninth Text REtrieval Conference (TREC-9)</title>
		<meeting><address><addrLine>Gaithesburg, MD</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,57.00,287.82,463.53,10.13;9,57.00,300.57,372.16,10.13" xml:id="b1">
	<analytic>
		<title level="a" type="main" coord="9,253.83,287.82,108.98,10.13">Inquery system overview</title>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Broglio</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Callan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W</forename><forename type="middle">B</forename><surname>Croft</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="9,370.50,287.82,150.03,10.13;9,57.00,300.57,83.44,10.13">Proceedings of the TIPSTER Text Program (Phase I)</title>
		<meeting>the TIPSTER Text Program (Phase I)<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufman Publishers Inc</publisher>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="47" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,57.00,326.07,477.15,10.13;9,57.00,338.82,93.22,10.13" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="9,203.66,326.07,167.30,10.13">Probabilistic structured query methods</title>
		<author>
			<persName coords=""><forename type="first">K</forename><surname>Darwish</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Oard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="9,378.75,326.07,109.50,10.13">Proceedings ACM SIGIR</title>
		<meeting>ACM SIGIR<address><addrLine>Toronto, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="338" to="344" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,57.00,363.57,472.67,10.13;9,57.00,376.32,325.64,10.13;9,57.00,389.07,364.66,10.13;9,57.00,401.82,223.58,10.13" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="9,405.84,363.57,123.83,10.13;9,57.00,376.32,320.92,10.13">A large-scale comparison of Boolean vs. natural language searching for the TREC-7 Interactive Track</title>
		<author>
			<persName coords=""><forename type="first">W</forename><surname>Hersh</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Price</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Kraemer</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">L</forename><surname>Sacherek</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Olson</surname></persName>
		</author>
		<ptr target="http://trec.nist.gov/pubs/trec7/t7_proceedings.html" />
	</analytic>
	<monogr>
		<title level="m" coord="9,57.00,389.07,218.16,10.13">The Seventh Text REtrieval Conference (TREC-7)</title>
		<meeting><address><addrLine>Gaithesburg, MD</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,57.00,427.32,471.22,10.13;9,57.00,439.32,286.01,10.13" xml:id="b4">
	<analytic>
		<title level="a" type="main" coord="9,207.75,427.32,206.60,10.13">Employing the resolution power of search keys</title>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Pirkola</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">K</forename><surname>Järvelin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="9,421.50,427.32,106.72,10.13;9,57.00,439.32,210.80,10.13">Journal of the American Society for Information Science and Technology</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="575" to="583" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
