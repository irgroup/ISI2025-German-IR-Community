<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,137.71,112.05,336.58,15.12">Overview of the TREC 2022 Fair Ranking Track</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2023-03-22">March 22, 2023</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName coords="1,149.05,144.34,106.39,10.68"><forename type="first">Michael</forename><forename type="middle">D</forename><surname>Ekstrand</surname></persName>
							<email>michaelekstrand@boisestate.edu</email>
						</author>
						<author>
							<persName coords="1,363.61,144.34,98.43,10.68"><forename type="first">Graham</forename><surname>Mcdonald</surname></persName>
							<email>graham.mcdonald@glasgow.ac.uk</email>
						</author>
						<author>
							<persName coords="1,365.31,178.09,71.49,10.68"><forename type="first">Isaac</forename><surname>Johnson</surname></persName>
						</author>
						<title level="a" type="main" coord="1,137.71,112.05,336.58,15.12">Overview of the TREC 2022 Fair Ranking Track</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2023-03-22">March 22, 2023</date>
						</imprint>
					</monogr>
					<idno type="MD5">EE8BC9D54389D37E96D3E782297C5B46</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-08-05T15:11+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>sub-geo (sub-geo) object '@UNKNOWN' 'Antarctica' ... 'Western Europe' * src-geo (src-geo) object '@UNKNOWN' 'Antarctica' ... 'Western Europe' * gender (gender) object '@UNKNOWN' 'female' 'male' 'NB' * occ (occ) object '@UNKNOWN' 'activist' ... 'writer' * alpha (alpha) object 'a-d' 'e-k' 'l-r' 's-' * age (age) object</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="9" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="10" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="11" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="12" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="13" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="14" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="15" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="16" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="17" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="18" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="19" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="20" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="21" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="22" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="23" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="24" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="25" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="26" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="27" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="28" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="29" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="30" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="31" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="32" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="33" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="34" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="35" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="36" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="37" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="38" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="39" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="40" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="41" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="42" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="43" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="44" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="45" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="46" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="47" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="48" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="49" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="50" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="51" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="52" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="53" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="54" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="55" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="56" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="57" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="58" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="59" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="60" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="61" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="62" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="63" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="64" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="65" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="66" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="67" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="68" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="69" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="70" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="71" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="72" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="73" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="74" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="75" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="76" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="77" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="78" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="79" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="80" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="81" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="82" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="83" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="84" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The TREC Fair Ranking Track aims to provide a platform for participants to develop and evaluate novel retrieval algorithms that can provide a fair exposure to a mixture of demographics or attributes, such as ethnicity, that are represented by relevant documents in response to a search query. For example, particular demographics or attributes can be represented by the documents' topical content or authors.</p><p>The 2022 Fair Ranking Track adopted a resource allocation task. The task focused on supporting Wikipedia editors who are looking to improve the encyclopedia's coverage of topics under the purview of a WikiProject. <ref type="foot" coords="1,146.30,582.14,3.97,6.16" target="#foot_0">1</ref> WikiProject coordinators and/or Wikipedia editors search for Wikipedia documents that are in need of editing to improve the quality of the article. The 2022 Fair Ranking track aimed to ensure that documents that are about, or somehow represent, certain protected characteristics receive a fair exposure to the Wikipedia editors, so that the documents have an fair opportunity of being improved and, therefore, be well-represented in Wikipedia. The under-representation of particular protected characteristics in Wikipedia can result in systematic biases that can have a negative human, social, and economic impact, particularly for disadvantaged or protected societal groups <ref type="bibr" coords="1,276.51,654.82,10.52,9.96" target="#b3">[4,</ref><ref type="bibr" coords="1,290.35,654.82,7.01,9.96" target="#b6">7]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Task Definition</head><p>The 2022 Fair Ranking Track used an ad hoc retrieval protocol. Participants were provided with a corpus of documents (a subset of the English language Wikipedia) and a set of queries. A query was of the form of a short list of search terms that represent a WikiProject. Each document in the corpus was relevant to zero to many WikiProjects and associated with zero to many fairness categories.</p><p>There were two tasks in the 2022 Fair Ranking Track. In each of the tasks, for a given query, participants were to produce document rankings that are:</p><p>1. Relevant to a particular WikiProject.</p><p>2. Provide a fair exposure to articles that are associated to particular protected attributes.</p><p>The tasks shared a topic set, the corpus, the basic problem structure and the fairness objective. However, they differed in their target user persona, system output (static ranking vs. sequences of rankings) and evaluation metrics. The common problem setup was as follows:</p><p>• Queries were provided by the organizers and derived from the topics of existing or hypothetical WikiProjects.</p><p>• Documents were Wikipedia articles that may or may not be relevant to any particular WikiProject that is represented by a query.</p><p>• Rankings were ranked lists of articles for editors to consider working on.</p><p>• Fairness of exposure should be achieved with respect to the protected attributes associated with the documents. Documents can be associated to many different fairness attributes. The official track evaluation focused on intersectional fairness and, as such, evaluated how fairly systems rank documents with respect to all of the fairness categories. However, individual teams could choose whether to optimise their systems with respect to all, a subset of, or individual fairness categories.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Task 1: WikiProject Coordinators</head><p>The first task focused on WikiProject coordinators as users of the search system; their goal is to search for relevant articles and produce a ranked list of articles needing work that other editors can then consult when looking for work to do.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Output:</head><p>The output for this task was a single ranking per query, consisting of 500 articles.</p><p>Evaluation was a multi-objective assessment of rankings by the following two criteria:</p><p>• Relevance to a WikiProject topic. We will provide relevance assessments for the articles derived from existing Wikipedia data; Ranking relevance will be computed with nDCG, using binary relevance and logarithmic decay.</p><p>• Fairness with respect to the exposure of different fairness categories associated to the articles returned in response to a query. Section 4.2 contains details on the evaluation metrics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Task 2: Wikipedia Editors</head><p>The second task focused on individual Wikipedia editors looking for work associated with a project. The conceptual model is that rather than maintaining a fixed work list as in Task 1, a WikiProject coordinator would create a saved search, and when an editor looks for work they re-run the search. This means that different editors may receive different rankings for the same query, and differences in these rankings may be leveraged for providing fairness.</p><p>Output: The output of this task is 100 rankings per query, each consisting of 20 articles.</p><p>Evaluation was a multi-objective assessment of rankings by the following three criteria:</p><p>• Relevance to a WikiProject topic. We will provide relevance assessments for articles derived from existing Wikipedia data. Ranking relevance will be computed with nDCG.</p><p>• Work needed on the article (articles needing more work preferred). We provide the output of an article quality assessment tool for each article in the corpus; for the purposes of this track, we assume lower-quality articles need more work.</p><p>• Fairness with respect to the exposure of different fairness categories associated to the articles returned in response to a query.</p><p>The goal of this task was not to be fair to work-needed levels; rather, we consider work-needed and topical relevance to be two components of a multi-objective notion of relevance, so that between two documents with the same topical relevance, the one with more work needed is more relevant to the query in the context of looking for articles to improve.</p><p>This task used expected exposure to compare the exposure article subjects receive in result rankings to the ideal (or target) exposure they would receive based on their relevance and work-needed <ref type="bibr" coords="3,457.82,379.80,9.96,9.96">[1]</ref>. This addresses fundamental limits in the ability to provide fair exposure in a single ranking by examining the exposure over multiple rankings.</p><p>For each query, participants provided 100 rankings, which we considered to be samples from the distribution realized by a stochastic ranking policy (given a query q, a distribution π q over truncated permutations of the documents). Note that this is how we interpret the queries, but it did not mean that a stochastic policy is how the system should have been implemented -other implementation designs were certainly possible. The objective was to provide equitable exposure to documents of comparable relevance and work-needed, aggregated by protected attribute. Section 4.3 has details on the evaluation metrics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Data</head><p>This section provides details of the format of the test collection, topics and ground truth. Further details about data generation and limitations can be found in Section 5.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Obtaining the Data</head><p>The corpus and query data set is distributed via Globus, and can be obtained in two ways. First, it can be obtained via Globus, from our repository at https://boi.st/TREC2022Globus. From this site, you can log in using your institution's Globus account or your own Google account, and synchronize it to your local Globus install or download it with Globus Connect Personal. <ref type="foot" coords="3,333.04,623.36,3.97,6.16" target="#foot_1">2</ref> This method has robust support for restarting downloads and dealing with intermittent connections. Second, it can be downloaded directly via HTTP from: https://data.boisestate.edu/library/Ekstrand/TRECFairRanking/2022/.</p><p>The runs and evaluation qrels will be made available in the ordinary TREC archives.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Corpus</head><p>The corpus consisted of articles from English Wikipedia. We removed all redirect articles, but left the wikitext (markup Wikipedia uses to describe formatting) intact. This was provided as a JSON file, with one record per line, and compressed with gzip (trec corpus.json.gz). Each record contains the following fields:</p><p>id The unique numeric Wikipedia article identifier.</p><p>title The article title.</p><p>url The article URL, to comply with Wikipedia licensing attribution requirements.</p><p>The three available formats of the corpus are as follows: The contents of this corpus were prepared in accordance with, and licensed under, the CC BY-SA 3.0 license. <ref type="foot" coords="4,103.05,303.14,3.97,6.16" target="#foot_2">3</ref> The raw Wikipedia dump files used to produce this corpus are available in the source directory; this is primarily for archival purposes, because Wikipedia does not publish dumps indefinitely.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Queries</head><p>The queries are in the 2022 directory, in the file train topics meta.jsonl. Each of the queries map to a single Wikiproject. The primary query texts are constructed from extracted keywords from articles that are relevant to a Wikiproject. The following fields are provided: id A query identifier (int) title The Wikiproject title (string) keywords A collection of search keywords forming the query text (list of str). We cleaned and parsed the Wiki articles and then used KeyBert <ref type="bibr" coords="4,258.53,459.96,10.52,9.96" target="#b1">[2]</ref> to extract the most representative words of those articles. For each Wikiproject, we aggregated the extracted keywords from relevant articles and, after some manual filtering, used those as query texts for that particular Wikiproject.</p><p>url The URL for the Wikiproject. This is provided for attribution and not expected to be used by your system as it will not be present in the evaluation data (string)</p><p>rel docs A list of the page IDs of relevant pages (list of int)</p><p>The eval-queries are also in the 2022 directory, in the file eval topics.jsonl which has id, keywords, and title fields.</p><p>In addition to query relevance, for Task 2: Wikipedia Editors (Section 2.2), participants will also be expected to return relevant documents that need more editing work done more highly than relevant documents that need less work done.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Fairness Categories</head><p>Fairness ground truth labels for the following fairness categories are also in the 2022 directory, in the trec 2022 articles discrete.json.gz file. While we provide the raw values for each fairness category with the data, for most categories we also map the raw values to a reduced, fixed set of categories that will be used to judging systems. <ref type="foot" coords="5,192.60,127.80,3.97,6.16" target="#foot_3">4</ref>Geographic location (article topic) The geographical location associated with the article topic. Both the associated countries-e.g., United Kingdom-and sub-continental regions-e.g., Northern Europeare provided but systems will be evaluated using sub-continental regions (and not countries). An article can have 0 to many regions associated with it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Geographic location (article sources)</head><p>The geographic location associated with the article based on the article's sources. Same categories as article geographic location above.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Gender (biographies only)</head><p>The gender of the individual about which the biography pertains. Gender has been reduced to four distinct categories: Man, Woman, Non-binary, and Unknown (missing data or not a biography).</p><p>Age of the topic How old the subject of the article is. For example, the birth date of a person in a biographical article, the date that an event occurred for articles that are about an event, or the creation date of a piece of art or music when the article is about the piece of art or music. The raw years are mapped to four distinct categories: Unknown, Pre-1900s, 20th century, and 21st century.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Occupation (biographies only)</head><p>The occupation of the subject of an article. An article have 0 (unknown) to many occupations associated with it. There are 32 distinct occupation categories included in the data.</p><p>Alphabetical Editors often work through articles in alphabetical order and this can result in articles about subjects / topics that start with letters that appear earlier in the alphabet getting more exposure to the editors. Therefore, it is important that articles from later in the alphabet also get a fair exposure to the editors. The first letter is mapped to four discrete categories: a-d, e-k, l-r, and s-.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Age of the article</head><p>The length of time the article has existed. The date is mapped to one of four discrete categories: <ref type="bibr" coords="5,146.80,449.48,208.50,9.96">2001-2006, 2007-2011, 2012-2016, and 2017-2022</ref>.</p><p>Popularity (# pageviews) Number of times the page was viewed in February 2022. The number of pageviews are normalized and mapped to four discrete categories: Low, Medium-Low, Medium-High, and High.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Replication of articles in other languages</head><p>The number of other language Wikipedias that the article is replicated in. This can range from English-only to all 300+ languages of Wikipedia but is mapped to three discrete categories: English only, 2-4 languages, and 5+ languages.</p><p>For the purposes of multidimensional fairness, we treated the dimensions as independent, and took the outer product of the fairness categories as a combined fairness space. The resulting space had over 11M dimensions, requiring care in implementing target alignments and metrics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Metadata</head><p>We provide a simple Wikimedia quality score (a float between 0 and 1 where 0 is no content on the page and 1 is high quality) for optimizing for work-needed in Task 2. Work-needed can be operationalized as the reverse-i.e. 1 minus this quality score. The discretized quality scores will be used as work-needed for final system evaluation. This data is provided together in a metadata file (trec metadata.json.gz), in which each line is the metadata for one article represented as a JSON record with the following keys: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Group Alignments</head><p>The group alignments associated to an article as described in Section 3.4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6">Output</head><p>For Task 1, participants outputted results in rank order in a tab-separated file with two columns:</p><p>id The query ID for the topic page id ID for the recommended article</p><p>For Task 2, this file had 3 columns, to account for repeated rankings per query:</p><p>id Query ID rep number Repeat Number  page id ID for the recommended article</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Evaluation Metrics</head><p>Each task was evaluated with its own metric designed for that task setting. The goal of these metrics was to measure the extent to which a system (1) exposed relevant documents, and (2) exposed those documents in a way that is fair to article topic groups, defined by the mentioned fairness constraints of the article's subject. This faces a problem in that Wikipedia itself has well-documented biases: if we target the current group distribution within Wikipedia, we will reward systems that simply reproduce Wikipedia's existing biases instead of promoting social equity. However, if we simply target equal exposure for groups, we would ignore potential real disparities in topical relevance. Due to the biases in Wikipedia's coverage, and the inability to retrieve documents that don't exist to fill in coverage gaps, there is not good empirical data on what the distribution for any particular topic should be if systemic biases did not exist in either Wikipedia or society (the "world as it could and should be" <ref type="bibr" coords="6,239.47,538.18,10.30,9.96" target="#b2">[3]</ref>). Therefore, in this track we adopted a compromise: we averaged the empirical distribution of groups among relevant documents with the world population (for location) or equality (for gender) to derive the target group distribution.</p><p>Code to implement the metrics is found at https://github.com/fair-trec/trec2022-fair-public.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Preliminaries</head><p>The tasks were to retrieve documents d from a corpus D that are relevant to a query q. r q ∈ [0, 1] |D| is a vector of relevance judgements for query q. We denote a ranked list by L; L i is the document at position i (starting from 1), and L -1 d is the rank of document d. For Task 1, each system returned a single ranked list; for Task 2, it returned a sequence of rankings L.</p><p>We represented the group alignment of a document d with an alignment vector a d ∈ [0, 1] |G| . a dg is document d's alignment with group g. A ∈ [0, 1] |D|×|G| is the alignment matrix for all documents. a world denotes the distribution of the world. <ref type="foot" coords="7,234.89,97.45,3.97,6.16" target="#foot_4">5</ref>We considered fairness with respect to two group sets, G geo and G gender . We operationalized this intersectional objective by letting G = G geo × G gender , the Cartesian product of the two group sets. Further, alignment under either group set may be unknown; we represented this case by treating "unknown" as its own group (g ? ) in each set. In the product set, a document's alignment may be unknown for either or both groups.</p><p>In all metrics, we use log discounting to compute attention weights:</p><formula xml:id="formula_0" coords="7,264.95,189.36,80.90,24.83">v i = 1 log 2 max(i, 2)</formula><p>Task 2 also considered the work each document needs, represented by w d ∈ {1, 2, 3, 4}.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Task 1: WikiProject Coordinators (Single Rankings)</head><p>For the single-ranking Task 1, we adopted attention-weighted rank fairness (AWRF), first described by <ref type="bibr" coords="7,72.00,278.10,88.49,9.96">Sapiezynski et al. [8]</ref> and named by <ref type="bibr" coords="7,227.47,278.10,53.15,9.96">Raj et al. [6]</ref>. AWRF computes a vector d L of the cumulated exposure a list gives to each group, and a target vector d * q ; we then compared these with the Jenson-Shannon divergence:</p><formula xml:id="formula_1" coords="7,143.09,322.52,396.91,89.60">d ′ L = i v i a Li cumulated attention d L = d ′ L ∥d ′ L ∥ 1 normalize to a distribution d * q = 1 2 A T r q + a world AWRF(L) = 1 -d JS (d L , d * q ) (1)</formula><p>For Task 1, we ignored documents that are fully unknown for the purposes of computing d L and d * q ; they do not contribute exposure to any group.</p><p>The resulting metric is in the range [0, 1], with 1 representing a maximally-fair ranking (the distance from the target distribution is minimized). We combined it with an ordinary nDCG metric for utility:</p><formula xml:id="formula_2" coords="7,234.14,489.68,305.86,35.71">NDCG(L) = i v i r qd ideal (2) M 1 (L) = AWRF(L) × NDCG(L)<label>(3)</label></formula><p>To score well on the final metric M 1 , a run must be both accurate and fair.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Task 2: Wikipedia Editors (Multiple Rankings)</head><p>For Task 2, we used Expected Exposure <ref type="bibr" coords="7,254.77,583.27,10.52,9.96">[1]</ref> to compare the exposure each group receives in the sequence of rankings to the exposure it would receive in a sequence of rankings drawn from an ideal policy with the following properties:</p><p>• Relevant documents come before irrelevant documents</p><p>• Relevant documents are sorted in nonincreasing order of work needed</p><p>• Within each work-needed bin of relevant documents, group exposure is fairly distributed according to the average of the distribution of relevant documents and the distribution of global population (the same average target as before).</p><p>We have encountered some confusion about whether this task is requiring fairness towards work-needed; as we have designed the metric, work-needed is considered to be a part of (graded) relevance: a document is more relevant if it is relevant to the topic and needs significant work. In the Expected Exposure framework, this combined relevance is used to derive the target policies.</p><p>To apply expected exposure, we first define the exposure ϵ d a document d receives in sequence L:</p><formula xml:id="formula_3" coords="8,266.59,184.79,273.41,27.47">ϵ d = 1 |L| L∈L w L -1 d (4)</formula><p>This forms an exposure vector ϵ ∈ R |D| . It is aggregated into a group exposure vector γ, including "unknown" as a group:</p><formula xml:id="formula_4" coords="8,286.27,253.66,253.73,11.41">γ = A T ϵ (5)</formula><p>Our implementation rearranges the mean and aggregate operations, but the result is mathematically equivalent.</p><p>We then compare these system exposures with the target exposures ϵ * for each query. This starts with the per-document ideal exposure; if m w is the number of relevant documents with work-needed level w ∈ {1, 2, 3, 4}, then according to Diaz et al. <ref type="bibr" coords="8,269.14,319.31,10.52,9.96">[1]</ref> the ideal exposure for document d is computed as:</p><formula xml:id="formula_5" coords="8,257.89,338.97,282.11,34.72">ϵ * d = 1 m w d m ≥w d i=m&gt;w d +1 v i (6)</formula><p>We use this to compute the non-averaged target distribution γ * :</p><formula xml:id="formula_6" coords="8,282.46,401.00,257.54,11.41">γ * = A T ϵ *<label>(7)</label></formula><p>Since we include "unknown" as a group, we have a challenge with computing the target distribution by averaging the empirical distribution of relevant documents and the global population -global population does not provide any information on the proportion of relevant articles for which the fairness attributes are relevant. Our solution, therefore, is to average the distribution of known-group documents with the world population, and re-normalize so the final distribution is a probability distribution, but derive the proportion of known-to unknown-group documents entirely from the empirical distribution of relevant documents. Extended to handle partially-unknown documents, this procedure proceeds as follows:</p><p>• Average the distribution of fully-known documents (both gender and location are known) with the global intersectional population (global population by location and equality by gender).</p><p>• Average the distribution of documents with unknown location but known gender with the equality gender distribution.</p><p>• Average the distribution of documents with unknown gender but known location with the world population.</p><p>The result is the target group exposure γ * . We use this to measure the expected exposure loss: Lower M 2 is better. It decomposes into two submetrics, the expected exposure disparity (EE-D) that measures overall inequality in exposure independent of relevance, for which lower is better; and the expected exposure relevance (EE-L) that measures exposure/relevance alignment, for which higher is better <ref type="bibr" coords="9,101.64,497.05,9.96,9.96">[1]</ref>.</p><formula xml:id="formula_7" coords="8,225.73,632.82,314.27,56.56">M 2 (L q ) = ∥γ -γ * ∥ 2 (8) = γ • γ -2γ • γ * + γ * • γ * EE-D(L q ) = γ * • γ * (9) EE-R(L q ) = γ • γ *<label>(</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Results</head><p>This year 5 different teams submitted a total of 24 runs. All 5 teams participated in Task 1: Single Rankings (27 runs total), while 2 groups participated in Task 2: Multiple Rankings (11 runs total).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Task 1: WikiProject Coordinators (Single Rankings)</head><p>Approaches for Task 1 included:</p><p>• Relevance ranking by ColBERT-PRF.</p><p>• Relevance ranking by ColBERT-E2E and a heuristic approach that re-ranks to match target exposure using diversification.  • BM25 ranking from pyserini and pre-traned BERT for semantic score and re-ranked to fit target distribution at each ranking position by using greedy diversification, providing higher attention to protected group, and ensuring fairness in each position.</p><p>• Relevance ranking using BM25 from pyserini and LambdaMART lerning-to-rank model and a multilayer-perception to re-rank.</p><p>• BM25 ranking from pyserini and weighted Reciprocal Ranking Fusion to diversify the ranking.</p><p>• Relevance-only approaches.</p><p>Table <ref type="table" coords="12,114.65,425.90,4.98,9.96" target="#tab_0">1</ref> shows the submitted systems ranked by the official Task 1 metric M 1 and its component parts nDCG and AWRF. Figure <ref type="figure" coords="12,188.01,437.85,4.98,9.96" target="#fig_2">1</ref> plots the runs with the component metrics on the x and y axes. Unlike last year, we see less clustering of approaches from individual teams: two teams approaches had similar performance, while others are more scattered throughout the space.</p><p>We also computed fairness on individual dimension (Table <ref type="table" coords="12,351.77,473.72,4.98,9.96" target="#tab_1">2</ref> and<ref type="table" coords="12,381.19,473.72,36.18,9.96" target="#tab_1">Figure 2</ref>), and on the three subsets identified in Section 3.4 (Table <ref type="table" coords="12,205.23,485.67,4.98,9.96" target="#tab_2">3</ref> and<ref type="table" coords="12,231.29,485.67,34.50,9.96" target="#tab_2">Figure 3</ref>). For Task 1 the best-performing system overall also performed best on each individual category and subset; however, ordering of other systems changed between subsets or categories.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Task 2: Wikipedia Editors (Multiple Rankings)</head><p>Approaches for Task 2 included:</p><p>• Multi armed bandit strategies to select rankings from a pool of rankings considering each fairness category and observing the exposure and fairness-relevance relationship.</p><p>• Epsilon-greedy with weighted ranking, epsilon-decay strategy, and randomisation are used in ranking selection process.</p><p>• Relevance-only ranking.</p><p>Table <ref type="table" coords="12,114.12,658.73,4.98,9.96" target="#tab_3">4</ref> shows the submitted systems ranked by the official Task 2 metric EE-L and its component parts EE-D and EE-R. Figure <ref type="figure" coords="12,183.94,670.69,4.98,9.96" target="#fig_3">4</ref> plots the runs with the component metrics on the x and y axes. Overall, the submitted systems generally performed better for one of the component metrics than they did for the other.  We also computed fairness on individual dimension (Table <ref type="table" coords="14,351.77,477.58,4.98,9.96" target="#tab_5">5</ref> and Figure <ref type="figure" coords="14,413.49,477.58,3.87,9.96">5</ref>), and on the three subsets identified in Section 3.4 (Table <ref type="table" coords="14,210.86,489.54,4.98,9.96" target="#tab_6">6</ref> and Figure <ref type="figure" coords="14,270.94,489.54,3.87,9.96" target="#fig_4">6</ref>). Unlike Task 1, we see more difference in fairness between different single attributes and subsets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Limitations</head><p>The data and metrics in this task address a few specific types of unfairness, and do so partially. This is fundamentally true of any fairness intervention, and does not in any way diminish the value of the effortit is impossible for any data set, task definition, or metric to fully capture fairness in a universal way, and all data and analyses have limitations.</p><p>Some of the limitations of the data and task include:</p><p>• Fairness criteria -Gender: For each Wikipedia article, we ascertain whether it is a biography, and, if so, which gender identity can be associated with the person it is about.  via Wikidata based on the instance-of property indicating the article is about a human (P31:Q5 in Wikidata terms) and then collecting the value associated with the sex-or-gender property (P21). Coverage here is quite high at 99.98% of biographies on Wikipedia having associated gender data on Wikidata. Assigning gender identities to people is not a process without errors, biases, and ethical concerns. Applying the taxonomy developed by Pinney et al. <ref type="bibr" coords="17,342.08,136.26,10.52,9.96" target="#b4">[5]</ref> to this work yields the following summary: the primary referent of the gender data is the subject; we do use a gender variable and it's binary+other; gender determination is done via annotators (see details below); the gender data is used to measure bias and the goal is to audit system behavior. The process for assigning gender (annotation) is subject to some community-defined technical limitations <ref type="foot" coords="17,428.46,183.13,3.97,6.16" target="#foot_6">7</ref> and the Wikidata policy on living people<ref type="foot" coords="17,186.60,195.09,3.97,6.16" target="#foot_7">8</ref> . While a separate project, English Wikipedia's policies on gender identity<ref type="foot" coords="17,509.95,195.09,3.97,6.16" target="#foot_8">9</ref> likely inform how many editors handle gender; in particular, this policy explicitly favors the most recent reliably-sourced self-identification for gender, so misgendering a biography subject is a violation of Wikipedia policy; there may be erroneous data, but such data seems to be a violation of policy instead of a policy decision. Wikidata:WikiProject LGBT has documented some clear limitations of gender data on Wikidata and a list of further discussions and considerations. 10 Since we are using gender data to calculate aggregate statistics, we judged these limitations to be less problematic than it would be if we were making decisions about individuals. In our analysis (see Appendix A), we handle nonbinary gender identities by using four gender categories: unknown, male, female, and third. We advise great care when working with the gender data, particularly outside the immediate context of the TREC task (either its original instance or using the data to evaluate comparable systems).</p><p>-Geography: For each Wikipedia article, we also ascertained which, if any, countries and continents are relevant to the content. 11 This was determined by directly looking up several communitymaintained Wikidata structured data statements about the article. These properties were checked for the presence of countries, which were then mapped to continents via the United Nation's geoscheme. 12 While this data must meet Wikidata's verifiability guidelines, 13 it does suffer from varying levels of incompleteness. For example, only 74% of people on Wikidata have a country of citizenship property. 14 Furthermore, structured data is itself limited-e.g., country of citizenship does not appropriately capture people who are considered stateless though these people may have many strong ties to a country. It is not easy to evaluate whether this data is missing at random or biased against certain regions of the world. Care should be taken when interpreting the absence of associated continents in the data. Further details can be found in the code repository. 15  We also identify the associated countries and continents with the sources in the article. Each source is mapped to a country based on the URL or publisher associated with it. These mappings are built via a mixture of Wikidata, country extraction from whois records, and heuristics related to the top-level domain of the URL. 16 This is the only inferred attribute used that is not maintained by Wikimedians and thus is much more likely to contain errors. Because this data was also incomplete, we had the assessors annotate an additional 15,000 items to help add to the data and better understand its quality. The feedback from assessors was that it was a difficult task-i.e. inferring country information for a generic website or publisher is often not easy and can be quite ambiguous at times. While most items were only assessed once, 101 publishers received multiple assessments with 85 (84%) of these in agreement and 32 URLs received multiple assessments with 26 (81%) of these in agreement. We also had a few items for which we had already inferred regions that we had the assessors check: only 6 publishers were checked but 5 (83%) were in agreement and 90 URLs were checked with 82 (91%) in agreement. While this leaves uncertainty about the publisher data, it does suggest that the URL data is reasonable quality because a few of those in disagreement appear to be assessor errors.</p><p>-Age: We calculate the associated age of the subject of the article in a similar manner to article topic geography (extracting dates from several pre-determined properties on Wikidata). 17 While geography is a multi-label feature, age is mapped to a single value via the median of the associated years and that median value is bucketed as pre-1900s, 20th century, or 21st century (and beyond).</p><p>Like geography, it is not clear how many articles should have associated categories-e.g., many articles like those for plant species, do not clearly map to any specific time period-but it is safe to assume all biographies should have associated year data and we see 91.5% coverage suggesting relatively complete data.</p><p>-Occupation: For each Wikipedia biography, we also ascertained which occupations could be associated with the person it is about. This data is directly determined via Wikidata by collecting the values associated with the occupation property (P106). For each occupation value, we then mapped it to one of 32 higher-order occupations based on the occupation ontology (using P279, the sub-class of, property for each occupation) 18 . The 32 higher-order occupations were handselected to give sufficient detail while remaining a manageable number of categories. On English Wikipedia, 92.1% of biographies have at least one associated occupation value that could be mapped to the 32 higher-order occupations.</p><p>-Popularity: For each article, we calculated how many pageviews it received in February 2022. These pageview counts are based on webrequest logs 19 and filter out views from user-agents that explicitly identify themselves as spiders 20 and actors (shared user-agent and IP address) that seem to be automated in that they view more than 800 pages per hour 21 . These heuristics are not perfect however and traffic can be easily miscategorized if, for example, automated requests come from many different IPs or devices or actual users share a proxy that gives them the same IP and user-agent. The raw counts of pageviews were then converted into relative values between 0 and 1 by square-root transforming the value and normalizing to the 99th percentile of pageviews.</p><p>Finally, these values were bucketed as [0 -0.125), [0.125 -0.250), [0.25 -0.5), [0.5 -1].</p><p>-Sitelinks: The Wikimedia editor community maintains article sitelinks, or interlanguage linksi.e. explicit connection of articles about the same subject across language editions-via Wikidata. Almost all Wikipedia articles (99.92% for English) 22 have a corresponding Wikidata item and editors work to merge Wikidata items that are about the same subject so the sitelinks are aligned. Though there is no empirical data, it is generally accepted that most articles are appropriately linked to their corresponding other-language equivalents, especially in languages with shared scripts where simple approaches such as searching for an article title is often sufficient to identify matches.</p><p>-Other: several fairness criteria are relatively straightforward and thus do not have many attached limitations. Specifically, the first letter of the article title (Alphabetical) and age of the article.</p><p>• Relevance Criteria -Work-needed: Our proxy for work-needed is a coarse proxy. It is based on just a few simple features (page length, sections, images, categories, links, and references) and does not reflect the nuances of the work needed to craft a top-quality Wikipedia article.<ref type="foot" coords="19,415.02,185.12,7.94,6.16" target="#foot_10">24</ref> A fully-fledged system for supporting Wikiprojects would also include a more nuanced approach to understanding the work needed for each article and how to appropriately allocate this work.</p><p>• Task Definition -Existing Article Bias: The task is limited to topics for which English Wikipedia already has articles. These tasks are not able to counteract biases in the processes by which articles come to exist (or are deleted <ref type="bibr" coords="19,207.46,273.74,15.44,9.96">[9]</ref>)-recommending articles that should exist but don't is an interesting area for future study.</p><p>-Fairness constructs: we focus on several fairness constructs in this challenge as metrics for which there is high data coverage and a clear mechanism for which "unfair" coverage might arise. That does not mean these are the most important constructs, but others-e.g., religion, sexuality, culture, race-generally are either more challenging to model or map to fairness goals <ref type="bibr" coords="19,496.14,337.50,9.96,9.96" target="#b6">[7]</ref>.</p><p>oc regions = [ 'Australia and New Zealand', 'Melanesia', 'Micronesia', 'Polynesia', ]</p><p>And finally a name for unknown: UNKNOWN = '@UNKNOWN' Now all our background data is set up.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2.2 Page Data</head><p>Finally, we load the page metadata. This is a little manual to manage memory usage. Two memory usage tricks:</p><p>• Only import the things we need • Use sys.intern for strings representing categoricals to decrease memory use Bonus is that, through careful logic, we get a progress bar. Read Data Now, we're going to process by creating lists we can reassemble with pd.DataFrame.from records. We'll fill these with tuples and dictionaries as appropriate.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3 Helper Functions</head><p>These functions will help with further computations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3.1 Normalize Distribution</head><p>We are going to compute a number of data frames that are alignment vectors, such that each row is to be a multinomial distribution. This function normalizes such a frame. def norm align matrix(df): df = df.fillna(0) sums = df.sum(axis='columns') return df.div(sums, axis='rows')</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.4 Page Alignments</head><p>All of our metrics require page "alignments": the protected-group membership of each page.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.4.1 Quality</head><p>Quality isn't an alignment, but we're going to save it here:</p><p>output.save </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.4.2 Page Geography</head><p>Let's start with the straight page geography alignment for the public evaluation of the training queries. We've already loaded it above. We need to do a little cleanup on this data:</p><p>• Align pages with no known geography with '@UNKNOWN' (to sort before known categories)   <ref type="figure" coords="27,72.00,596.53,57.53,9.96;27,202.76,596.53,20.92,9.96">-------------</ref>  <ref type="bibr" coords="28,98.15,342.17,162.14,9.96">([[1., 0., 0., ..., 0., 0., 0.]</ref>, <ref type="bibr" coords="28,108.61,354.13,146.45,9.96">[1., 0., 0., ..., 0., 0., 0.</ref>], [1., 0., 0., ..., 0., 0., 0.], ..., <ref type="bibr" coords="28,108.61,389.99,146.45,9.96">[1., 0., 0., ..., 0., 0., 0.</ref>], <ref type="bibr" coords="28,108.61,401.95,146.45,9.96">[1., 0., 0., ..., 0., 0., 0.</ref>], <ref type="bibr" coords="28,108.61,413.90,130.76,9.96">[1., 0., 0., ..., 0., 0.,</ref>  </p><p>], [0.66666667, 0. ,</p><p>], [0.</p><p>, 0. ,</p><p>]]) Coordinates:</p><p>* page (page) int64 12 25 39 290 ... 70194480 70194481 70194489 70194530 * src_geo (src_geo) object '@UNKNOWN' 'Antarctica' ... <ref type="bibr" coords="32,375.36,436.92,5.23,9.96">'</ref> Now, we're going to do a little more work to reduce the dimensionality of the space. Points:</p><p>1. Trans men are men 2. Trans women are women 3. Cis/trans status is an adjective that can be dropped for the present purposes</p><p>The result is that we will collapse "transgender female" and "cisgender female" into "female". The downside to this is that trans men are probabily significantly under-represented, but are now being collapsed into the dominant group. pgcol = gender['gender'] pgcol = pgcol.str.replace(r'(?:tran|ci)sgender\s+((?:fe)?male)', r'\1', regex=True) pgcol.value counts() And make an alignment matrix: gender align = page gender.reset index().assign(x=1).pivot(index='page id', columns='gender', values='x') gender align.fillna(0, inplace=True) gender align = gender align.reindex(columns=gender labels) gender align.  <ref type="bibr" coords="35,108.61,512.67,83.69,9.96">[1., 0., 0., 0.]</ref>, <ref type="bibr" coords="35,108.61,524.63,78.45,9.96">[1., 0., 0., 0.</ref>], [1., 0., 0., 0.], ..., <ref type="bibr" coords="35,108.61,560.49,62.76,9.96">[1., 0., 0.,</ref>   , 0., 0., ..., 0., 0., 0.], [1., 0., 0., ..., 0., 0., 0.], [1., 0., 0., ..., 0., 0., 0.], ..., <ref type="bibr" coords="38,108.61,309.61,146.45,9.96">[1., 0., 0., ..., 0., 0., 0.</ref>], [1., 0., 0., ..., 0., 0., 0.], <ref type="bibr" coords="38,108.61,333.52,130.76,9.96">[1., 0., 0., ..., 0., 0.,</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.6 Gender</head><p>Now we're going to grab the gender alignments. Again, we ignore UNKNOWN.  And make sure we can use it:</p><p>q tam[case selector(avg cases <ref type="bibr" coords="57,219.29,493.67,15.69,9.96">[1]</ref>)] &lt;xarray. <ref type="bibr" coords="57,307.37,515.27,41.84,9.96">occ: 33,</ref><ref type="bibr" coords="57,354.44,515.27,47.07,9.96">alpha: 4,</ref><ref type="bibr" coords="57,406.74,515.27,36.61,9.96">age: 4,</ref><ref type="bibr" coords="57,448.59,515.27,36.61,9.96">pop: 4,</ref><ref type="bibr" coords="57,171.38,527.22,31.38,9.96">langs:</ref> 3)&gt; array <ref type="bibr" coords="57,98.15,539.18,130.76,9.96">([[[[[[[0.00000000e+00, 0</ref>.00000000e+00, 0.00000000e+00],</p><p>[0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],</p><p>[[0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],</p><p>[[0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00],</p><p>Fantastic. This means that if we sum up a subset of the data, it will give us the fraction of the distribution that has that combination of known/unknown status.</p><p>For each condition, we are going to proceed as follows:</p><p>1. Compute an appropriate intersectional background distribution (based on the dimensions that are "known") 2. Select the subset of the target matrix with this known status 3. Compute the sum of this subset 4. Re-normalize the subset to sum to 1 5. Compute a normalization table such that each coordinate in the distributions to correct sums to 1 (so multiplying this by the background distribution spreads the background across the other dimensions appropriately), and use this to spread the background distribution 6. Average with the spread background distribution  <ref type="bibr" coords="78,98.15,200.02,177.83,9.96">', 'alpha', 'age', 'pop', 'langs']</ref> Now: these dimension are in the original order -dimensions has the averaged dimensions before the non-averaged ones. This is critical for the rest of the code to work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.9.2 Data Subsetting</head><p>Also from Task 1. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.9.3 Background Averaging</head><p>We're now going to define our background-averaging function; this is reused from the Task 1 alignment code.</p><p>For each condition, we are going to proceed as follows:</p><p>1. Compute an appropriate intersectional background distribution (based on the dimensions that are "known") 2. Select the subset of the target matrix with this known status 3. Compute the sum of this subset 4. Re-normalize the subset to sum to 1 5. Compute a normalization table such that each coordinate in the distributions to correct sums to 1 (so multiplying this by the background distribution spreads the background across the other dimensions appropriately), and use this to spread the background distribution 6. Average with the spread background distribution 7. Re-normalize to preserve the original sum Let's define the whole process as a function: </p><formula xml:id="formula_11" coords="79,72.00,167.44,15.69,8.34">def</formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="4,72.00,232.36,270.74,9.96;4,72.00,252.28,294.82,9.96;4,72.00,272.21,284.44,9.96"><head>text:</head><label></label><figDesc>The full article text, with Wiki markup (text file only) plain: The full article text, without Wiki markup (plain file only) html: The full article text, rendered into HTML (html file only)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="6,72.00,108.36,160.60,9.96;6,72.00,128.29,468.00,9.96;6,96.91,140.24,122.67,9.96;6,72.00,160.17,468.00,9.96;6,96.91,172.13,231.29,9.96"><head></head><label></label><figDesc>page id Unique page identifier (int) quality score Continuous measure of article quality with 0 representing low quality and 1 representing high quality (float in range [0, 1]) quality score disc Discrete quality score in which the quality score is mapped to six ordinal categories from low to high: Stub, Start, C, B, GA, FA (string)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="12,72.00,269.30,468.00,9.96;12,72.00,281.25,73.17,9.96"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Task 1 submissions by individual component metrics (NDCG and AWRF). Higher values are better for both metrics.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3" coords="14,72.00,436.66,468.00,9.96;14,72.00,448.62,29.09,9.96"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Task 2 submissions by expected exposure subcomponents. Lower EE-D is better; higher EE-R is better.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4" coords="16,173.33,643.28,265.34,9.96"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Task 2 EE-L on subsets of the fairness dimensions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5" coords="21,72.00,316.42,143.52,9.96;21,72.00,328.38,178.67,9.96;21,72.00,347.45,346.38,9.96;21,72.00,359.41,208.59,9.96;21,72.00,371.36,133.06,9.96;21,72.00,390.44,62.76,9.96;21,72.00,415.85,303.60,9.96;21,72.00,434.92,187.67,9.96;21,72.00,446.88,198.13,9.96;21,72.00,458.83,113.60,9.96;21,72.00,470.79,124.06,9.96;21,72.00,482.74,76.99,9.96;21,92.92,494.70,50.84,9.96;21,92.92,506.65,122.60,9.96;21,92.92,518.61,127.83,9.96;21,92.92,530.56,153.98,9.96;21,92.92,542.52,127.83,9.96;21,72.00,554.47,5.23,9.96"><head>#</head><label></label><figDesc>META FILE TAG = 'discrete' META FILE TAG = 'discrete assessed' page path = Path(f'data/trec 2022 articles {META FILE TAG}.json.gz') page file size = page path.stat().st size binarysize(page file size) '238.76 MiB' Definitions Let's define the different attributes we need to extract: SUB GEO ATTR = 'page subcont regions' SRC GEO ATTR = 'source subcont regions' GENDER ATTR = 'gender' OCC ATTR = 'occupations' BASIC ATTRS = [ 'page id', 'first letter category', 'creation date category', 'relative pageviews category', 'num sitelinks category', ]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6" coords="21,72.00,610.91,71.76,9.96;21,72.00,622.86,85.99,9.96;21,72.00,634.82,85.99,9.96;21,72.00,646.78,82.22,9.96;21,72.00,658.73,66.53,9.96;21,72.00,670.69,66.53,9.96;21,72.00,682.64,92.68,9.96"><head></head><label></label><figDesc>att recs = [] seen pages = set()</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7" coords="25,86.94,556.25,196.32,9.96;25,72.00,577.60,458.18,9.96;25,72.00,589.56,190.59,9.96;25,72.00,601.51,101.68,9.96;25,72.00,622.86,402.74,9.96;25,72.00,634.82,36.61,9.96;25,72.00,646.78,15.69,9.96;25,155.69,646.78,15.69,9.96;25,296.91,646.78,15.69,9.96;25,354.44,646.78,15.69,9.96;25,443.36,646.78,15.69,9.96;25,72.00,658.73,15.69,9.96;25,155.69,658.73,15.69,9.96;25,296.91,658.73,15.69,9.96;25,354.44,658.73,15.69,9.96;25,443.36,658.73,15.69,9.96;25,72.00,670.69,15.69,9.96;25,155.69,670.69,15.69,9.96;25,296.91,670.69,15.69,9.96;25,354.44,670.69,15.69,9.96;25,443.36,670.69,15.69,9.96;25,72.00,682.64,15.69,9.96;25,155.69,682.64,15.69,9.96;25,296.91,682.64,15.69,9.96;25,354.44,682.64,15.69,9.96;25,443.36,682.64,15.69,9.96;26,72.00,74.49,15.69,9.96;26,155.69,74.49,15.69,9.96;26,296.91,74.49,15.69,9.96;26,354.44,74.49,15.69,9.96;26,443.36,74.49,15.69,9.96;26,72.00,98.40,366.13,9.96;26,72.00,110.36,36.61,9.96;26,72.00,122.31,15.69,9.96;26,166.15,122.31,15.69,9.96;26,249.83,122.31,15.69,9.96;26,323.06,122.31,15.69,9.96;26,406.74,122.31,15.69,9.96;26,72.00,134.27,15.69,9.96;26,166.15,134.27,15.69,9.96;26,249.83,134.27,15.69,9.96;26,323.06,134.27,15.69,9.96;26,406.74,134.27,15.69,9.96;26,72.00,146.22,15.69,9.96;26,166.15,146.22,15.69,9.96;26,249.83,146.22,15.69,9.96;26,323.06,146.22,15.69,9.96;26,406.74,146.22,15.69,9.96;26,72.00,158.18,15.69,9.96;26,166.15,158.18,15.69,9.96;26,249.83,158.18,15.69,9.96;26,323.06,158.18,15.69,9.96;26,406.74,158.18,15.69,9.96;26,72.00,170.13,15.69,9.96;26,166.15,170.13,15.69,9.96;26,249.83,170.13,15.69,9.96;26,323.06,170.13,15.69,9.96;26,406.74,170.13,15.69,9.96;26,72.00,194.04,345.20,9.96;26,72.00,206.00,36.61,9.96;26,239.37,206.00,15.69,9.96;26,72.00,217.95,15.69,9.96;26,150.46,217.95,15.69,9.96;26,213.22,217.95,41.84,9.96;26,328.29,217.95,15.69,9.96;26,385.82,217.95,15.69,9.96;26,72.00,229.91,15.69,9.96;26,150.46,229.91,15.69,9.96;26,213.22,229.91,41.84,9.96;26,328.29,229.91,15.69,9.96;26,385.82,229.91,15.69,9.96;26,72.00,241.86,15.69,9.96;26,150.46,241.86,15.69,9.96;26,213.22,241.86,41.84,9.96;26,328.29,241.86,15.69,9.96;26,385.82,241.86,15.69,9.96;26,72.00,253.82,15.69,9.96;26,150.46,253.82,15.69,9.96;26,213.22,253.82,41.84,9.96;26,328.29,253.82,15.69,9.96;26,385.82,253.82,15.69,9.96;26,72.00,265.77,15.69,9.96;26,150.46,265.77,15.69,9.96;26,213.22,265.77,41.84,9.96;26,328.29,265.77,15.69,9.96;26,385.82,265.77,15.69,9.96;26,72.00,289.68,402.74,9.96;26,72.00,301.64,36.61,9.96;26,72.00,313.59,15.69,9.96;26,171.38,313.59,15.69,9.96;26,275.98,313.59,15.69,9.96;26,364.90,313.59,15.69,9.96;26,443.36,313.59,15.69,9.96;26,72.00,325.55,15.69,9.96;26,171.38,325.55,15.69,9.96;26,275.98,325.55,15.69,9.96;26,364.90,325.55,15.69,9.96;26,443.36,325.55,15.69,9.96;26,72.00,337.50,15.69,9.96;26,171.38,337.50,15.69,9.96;26,275.98,337.50,15.69,9.96;26,364.90,337.50,15.69,9.96;26,443.36,337.50,15.69,9.96;26,72.00,349.46,15.69,9.96;26,171.38,349.46,15.69,9.96;26,275.98,349.46,15.69,9.96;26,364.90,349.46,15.69,9.96;26,443.36,349.46,15.69,9.96;26,72.00,361.42,15.69,9.96;26,171.38,361.42,15.69,9.96;26,275.98,361.42,15.69,9.96;26,364.90,361.42,15.69,9.96;26,443.36,361.42,15.69,9.96;26,72.00,385.33,366.13,9.96;26,72.00,397.28,36.61,9.96;26,72.00,409.24,15.69,9.96;26,181.84,409.24,15.69,9.96;26,265.52,409.24,15.69,9.96;26,338.75,409.24,15.69,9.96;26,422.43,409.24,15.69,9.96;26,72.00,421.19,15.69,9.96;26,181.84,421.19,15.69,9.96;26,265.52,421.19,15.69,9.96;26,338.75,421.19,15.69,9.96;26,422.43,421.19,15.69,9.96;26,72.00,433.15,15.69,9.96;26,181.84,433.15,15.69,9.96;26,265.52,433.15,15.69,9.96;26,338.75,433.15,15.69,9.96;26,422.43,433.15,15.69,9.96;26,72.00,445.10,15.69,9.96;26,181.84,445.10,15.69,9.96;26,265.52,445.10,15.69,9.96;26,338.75,445.10,15.69,9.96;26,422.43,445.10,15.69,9.96;26,72.00,457.06,15.69,9.96;26,181.84,457.06,15.69,9.96;26,265.52,457.06,15.69,9.96;26,338.75,457.06,15.69,9.96;26,422.43,457.06,15.69,9.96;26,72.00,480.97,109.84,9.96;26,86.94,498.64,220.89,9.96;26,72.00,516.31,309.43,9.96;26,72.00,528.27,275.12,9.96;26,72.00,540.22,164.44,9.96;26,86.94,557.89,263.24,9.96;26,86.94,569.85,329.07,9.96;26,72.00,587.52,245.20,9.96;26,72.00,599.48,190.18,9.96;26,72.00,611.43,234.74,9.96;26,72.00,623.39,336.42,9.96;26,86.94,641.06,186.14,9.96;26,72.00,658.73,413.41,9.96;26,72.00,670.69,242.27,9.96;26,72.00,682.64,101.68,9.96;27,98.15,74.49,339.97,9.96;27,72.00,86.45,10.46,9.96;27,124.30,86.45,15.69,9.96;27,187.07,86.45,15.69,9.96;27,244.60,86.45,15.69,9.96;27,333.52,86.45,15.69,9.96;27,406.74,86.45,15.69,9.96;27,72.00,98.40,10.46,9.96;27,124.30,98.40,15.69,9.96;27,187.07,98.40,15.69,9.96;27,244.60,98.40,15.69,9.96;27,333.52,98.40,15.69,9.96;27,406.74,98.40,15.69,9.96;27,72.00,110.36,10.46,9.96;27,124.30,110.36,15.69,9.96;27,187.07,110.36,15.69,9.96;27,244.60,110.36,15.69,9.96;27,333.52,110.36,15.69,9.96;27,406.74,110.36,15.69,9.96;27,124.30,122.31,15.69,9.96;27,187.07,122.31,15.69,9.96;27,244.60,122.31,15.69,9.96;27,333.52,122.31,15.69,9.96;27,406.74,122.31,15.69,9.96;27,124.30,134.27,15.69,9.96;27,187.07,134.27,15.69,9.96;27,244.60,134.27,15.69,9.96;27,333.52,134.27,15.69,9.96;27,406.74,134.27,15.69,9.96;27,98.15,158.18,324.28,9.96;27,72.00,170.13,10.46,9.96;27,155.69,170.13,15.69,9.96;27,228.91,170.13,15.69,9.96;27,312.60,170.13,15.69,9.96;27,391.05,170.13,15.69,9.96;27,72.00,182.09,10.46,9.96;27,155.69,182.09,15.69,9.96;27,228.91,182.09,15.69,9.96;27,312.60,182.09,15.69,9.96;27,391.05,182.09,15.69,9.96;27,72.00,194.04,10.46,9.96;27,155.69,194.04,15.69,9.96;27,228.91,194.04,15.69,9.96;27,312.60,194.04,15.69,9.96;27,391.05,194.04,15.69,9.96;27,155.69,206.00,15.69,9.96;27,228.91,206.00,15.69,9.96;27,312.60,206.00,15.69,9.96;27,391.05,206.00,15.69,9.96;27,155.69,217.95,15.69,9.96;27,228.91,217.95,15.69,9.96;27,312.60,217.95,15.69,9.96;27,391.05,217.95,15.69,9.96;27,98.15,241.86,392.28,9.96;27,72.00,253.82,10.46,9.96;27,160.92,253.82,41.84,9.96;27,275.98,253.82,15.69,9.96;27,354.44,253.82,15.69,9.96;27,459.05,253.82,15.69,9.96;27,72.00,265.77,10.46,9.96;27,160.92,265.77,41.84,9.96;27,275.98,265.77,15.69,9.96;27,354.44,265.77,15.69,9.96;27,459.05,265.77,15.69,9.96;27,72.00,277.73,10.46,9.96;27,160.92,277.73,41.84,9.96;27,275.98,277.73,15.69,9.96;27,354.44,277.73,15.69,9.96;27,459.05,277.73,15.69,9.96;27,160.92,289.68,41.84,9.96;27,275.98,289.68,15.69,9.96;27,354.44,289.68,15.69,9.96;27,459.05,289.68,15.69,9.96;27,160.92,301.64,41.84,9.96;27,275.98,301.64,15.69,9.96;27,354.44,301.64,15.69,9.96;27,459.05,301.64,15.69,9.96;27,98.15,325.55,345.20,9.96;27,72.00,337.50,10.46,9.96;27,160.92,337.50,15.69,9.96;27,239.37,337.50,15.69,9.96;27,328.29,337.50,15.69,9.96;27,411.97,337.50,15.69,9.96;27,72.00,349.46,10.46,9.96;27,160.92,349.46,15.69,9.96;27,239.37,349.46,15.69,9.96;27,328.29,349.46,15.69,9.96;27,411.97,349.46,15.69,9.96;27,72.00,361.42,10.46,9.96;27,160.92,361.42,15.69,9.96;27,239.37,361.42,15.69,9.96;27,328.29,361.42,15.69,9.96;27,411.97,361.42,15.69,9.96;27,160.92,373.37,15.69,9.96;27,239.37,373.37,15.69,9.96;27,328.29,373.37,15.69,9.96;27,411.97,373.37,15.69,9.96;27,160.92,385.33,15.69,9.96;27,239.37,385.33,15.69,9.96;27,328.29,385.33,15.69,9.96;27,411.97,385.33,15.69,9.96;27,98.15,409.24,193.52,9.96;27,72.00,421.19,10.46,9.96;27,145.23,421.19,15.69,9.96;27,228.91,421.19,15.69,9.96;27,275.98,421.19,15.69,9.96;27,72.00,433.15,10.46,9.96;27,145.23,433.15,15.69,9.96;27,228.91,433.15,15.69,9.96;27,275.98,433.15,15.69,9.96;27,72.00,445.10,10.46,9.96;27,145.23,445.10,15.69,9.96;27,228.91,445.10,15.69,9.96;27,275.98,445.10,15.69,9.96;27,145.23,457.06,15.69,9.96;27,228.91,457.06,15.69,9.96;27,275.98,457.06,15.69,9.96;27,145.23,469.01,15.69,9.96;27,228.91,469.01,15.69,9.96;27,275.98,469.01,15.69,9.96;27,72.00,492.92,109.84,9.96;27,72.00,514.84,278.05,9.96;27,72.00,526.80,101.68,9.96;27,72.00,548.71,193.52,9.96;27,72.00,560.67,224.90,9.96;27,72.00,572.62,167.37,9.96;27,77.23,584.58,5.23,9.96;27,98.15,584.58,31.38,9.96;27,202.76,584.58,26.15,9.96"><head></head><label></label><figDesc>Let's start by turning this into a wide frame: sub geo align = sub geo.assign(x=1).pivot(index='page id', columns='sub geo', values='x') sub geo align.fillna(0, inplace=True) sub geo align.head() sub_geo Antarctica Australia and New Zealand Caribbean Central America Now we need to collapse Oceania into one column. ocean = sub geo align.loc[:, oc regions].sum(axis='columns') sub geo align = sub geo align.drop(columns=oc regions) sub geo align['Oceania'] = ocean Next we need to add the Unknown column and expand this. Sum the items to find total amounts, and then create a series for unknown: sub geo sums = sub geo align.sum(axis='columns') sub geo unknown = ˜(sub geo sums &gt; 0) sub geo unknown = sub geo unknown.astype('f8') sub geo unknown = sub geo unknown.reindex(all pages, fill value=1) Now let's join this with the original frame: sub geo align = sub geo unknown.to frame(UNKNOWN).join(sub geo align, how='left') sub geo align = norm align matrix(sub geo align) sub geo align.head() x 21 columns] sub geo align.sort index(axis='columns', inplace=True) sub geo align.info() &lt;class 'pandas.core.frame.DataFrame'&gt; Int64Index: 6460210 entries, 12 to 70194530 Data columns (total 21 columns): # Column Dtype</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8" coords="35,138.53,211.71,31.38,9.96;35,72.00,232.51,31.38,9.96;35,119.07,232.51,115.07,9.96;35,249.83,232.51,10.46,9.96;35,72.00,244.46,36.61,9.96;35,72.00,256.42,10.46,9.96;35,145.23,256.42,15.69,9.96;35,187.07,256.42,15.69,9.96;35,218.45,256.42,41.84,9.96;35,72.00,268.37,10.46,9.96;35,145.23,268.37,15.69,9.96;35,187.07,268.37,15.69,9.96;35,218.45,268.37,41.84,9.96;35,72.00,280.33,10.46,9.96;35,145.23,280.33,15.69,9.96;35,187.07,280.33,15.69,9.96;35,218.45,280.33,41.84,9.96;35,72.00,292.28,15.69,9.96;35,145.23,292.28,15.69,9.96;35,187.07,292.28,15.69,9.96;35,218.45,292.28,41.84,9.96;35,72.00,304.24,15.69,9.96;35,145.23,304.24,15.69,9.96;35,187.07,304.24,15.69,9.96;35,218.45,304.24,41.84,9.96;35,86.94,325.03,196.90,9.96;35,72.00,345.82,274.28,9.96;35,72.00,366.61,31.38,9.96;35,72.00,378.57,41.84,9.96;35,134.76,378.57,47.07,9.96;35,72.00,390.52,20.92,9.96;35,134.76,390.52,47.07,9.96;35,72.00,402.48,31.38,9.96;35,139.99,402.48,41.84,9.96;35,72.00,414.43,10.46,9.96;35,155.69,414.43,26.15,9.96;35,72.00,426.39,73.22,9.96;35,86.94,447.18,113.83,9.96;35,72.00,467.97,326.58,9.96;35,72.00,479.92,45.61,9.96;35,72.00,500.72,235.37,9.96;35,72.00,512.67,36.61,9.96"><head></head><label></label><figDesc>Let's see how frequent each of the genders is: gender align.sum(axis=0).sort values(ascending=False) And convert to an xarray: gender xr = xr.DataArray(gender align, dims=['page', 'gender']) gender xr &lt;xarray.DataArray (page: 6460210, gender: 4)&gt; array([</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9" coords="38,72.00,74.49,15.69,9.96;38,155.69,74.49,15.69,9.96;38,213.22,74.49,15.69,9.96;38,307.37,74.49,15.69,9.96;38,453.82,74.49,15.69,9.96;38,119.07,98.40,172.60,9.96;38,72.00,110.36,36.61,9.96;38,72.00,122.31,10.46,9.96;38,234.14,122.31,15.69,9.96;38,275.98,122.31,15.69,9.96;38,72.00,134.27,10.46,9.96;38,234.14,134.27,15.69,9.96;38,275.98,134.27,15.69,9.96;38,72.00,146.22,10.46,9.96;38,234.14,146.22,15.69,9.96;38,275.98,146.22,15.69,9.96;38,72.00,158.18,15.69,9.96;38,234.14,158.18,15.69,9.96;38,275.98,158.18,15.69,9.96;38,72.00,170.13,15.69,9.96;38,234.14,170.13,15.69,9.96;38,275.98,170.13,15.69,9.96;38,72.00,194.04,109.84,9.96;38,72.00,215.96,279.51,9.96;38,72.00,227.92,29.92,9.96;38,72.00,249.83,224.91,9.96;38,72.00,261.79,52.30,9.96"><head></head><label></label><figDesc>xr.DataArray(occ align, dims=['page', 'occ']) occ xr &lt;xarray.DataArray (page: 6460210, occ: 33)&gt; array([[1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10" coords="48,72.00,347.67,198.13,9.96;48,72.00,359.63,112.14,9.96;48,166.15,378.80,115.07,9.96;48,296.91,378.80,10.46,9.96;48,72.00,390.75,83.69,9.96;48,72.00,402.71,15.69,9.96;48,119.07,402.71,15.69,9.96;48,192.30,402.71,15.69,9.96;48,234.14,402.71,15.69,9.96;48,265.52,402.71,41.84,9.96;48,119.07,414.66,15.69,9.96;48,192.30,414.66,15.69,9.96;48,234.14,414.66,15.69,9.96;48,265.52,414.66,41.84,9.96;48,119.07,426.62,20.92,9.96;48,192.30,426.62,15.69,9.96;48,234.14,426.62,15.69,9.96;48,265.52,426.62,41.84,9.96;48,119.07,438.57,20.92,9.96;48,192.30,438.57,15.69,9.96;48,234.14,438.57,15.69,9.96;48,265.52,438.57,41.84,9.96;48,119.07,450.53,20.92,9.96;48,192.30,450.53,15.69,9.96;48,234.14,450.53,15.69,9.96;48,265.52,450.53,41.84,9.96;48,72.00,469.70,254.20,9.96"><head></head><label></label><figDesc>= qr gender align.groupby('topic id'</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11" coords="78,72.00,300.10,316.12,9.96;78,72.00,312.05,76.99,9.96;78,72.00,324.01,45.61,9.96;78,72.00,345.92,104.61,9.96;78,77.23,357.88,104.61,9.96;78,77.23,369.83,104.61,9.96;78,77.23,381.79,109.84,9.96;78,77.23,393.75,104.61,9.96;78,77.23,405.70,109.84,9.96;78,77.23,417.66,109.84,9.96;78,72.00,439.57,124.06,9.96;78,92.92,451.53,88.92,9.96;78,113.84,463.48,47.07,9.96;78,134.76,475.44,141.22,9.96;78,134.76,487.39,141.22,9.96;78,113.84,500.64,26.15,8.34;78,134.76,511.30,99.38,9.96;78,134.76,523.26,41.84,9.96;78,92.92,547.17,188.29,9.96"><head></head><label></label><figDesc>avg cases = list(product(*[[True, False]  for d in avg dims])) avg cases.pop() avg cases [(True, True, True), (True, True, False), (True, False, True), (True, False, False), (False, True, True), (False, True, False), (False, False, True)] def case selector(case): def mksel(known): if known: # select all but 1st column return slice(1, None, None) else: # select 1st column return 0 return tuple(mksel(k) for k in case)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" coords="8,526.72,679.05,13.28,9.96"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table coords="8,526.72,679.05,13.28,9.96"><row><cell>10)</cell></row></table><note coords="9,131.87,428.80,387.83,9.96"><p>Task 1 runs. Higher score is better (for all metrics). CI is 95% bootstrapped CI of score.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" coords="9,84.18,681.78,197.24,9.96"><head>Table 2 :</head><label>2</label><figDesc>Task 1 M 1 on individual fairness dimensions.</figDesc><table coords="10,77.98,202.38,473.19,332.75"><row><cell></cell><cell>Overall</cell><cell>age</cell><cell>alpha</cell><cell>gender</cell><cell>langs</cell><cell>occ</cell><cell cols="3">pop src-geo sub-geo</cell></row><row><cell>tmt5</cell><cell cols="9">0.3626 0.6860 0.7190 0.6795 0.6786 0.6825 0.6313 0.6453 0.6450</cell></row><row><cell>UoGRelvOnlyT1</cell><cell>0.3254</cell><cell>0.5843</cell><cell>0.5916</cell><cell>0.5266</cell><cell>0.5896</cell><cell>0.5267</cell><cell>0.5802</cell><cell>0.5548</cell><cell>0.5389</cell></row><row><cell>UoGTrT1ColPRF</cell><cell>0.3254</cell><cell>0.5843</cell><cell>0.5916</cell><cell>0.5266</cell><cell>0.5896</cell><cell>0.5267</cell><cell>0.5802</cell><cell>0.5548</cell><cell>0.5389</cell></row><row><cell>UoGTrExpE2</cell><cell>0.3230</cell><cell>0.5797</cell><cell>0.5869</cell><cell>0.5453</cell><cell>0.5849</cell><cell>0.5443</cell><cell>0.5765</cell><cell>0.5482</cell><cell>0.5344</cell></row><row><cell>0mt5</cell><cell>0.2990</cell><cell>0.5833</cell><cell>0.6164</cell><cell>0.5834</cell><cell>0.5817</cell><cell>0.5845</cell><cell>0.5333</cell><cell>0.5529</cell><cell>0.5496</cell></row><row><cell>0mt5 p</cell><cell>0.2949</cell><cell>0.5552</cell><cell>0.5801</cell><cell>0.5519</cell><cell>0.5530</cell><cell>0.5514</cell><cell>0.5112</cell><cell>0.5315</cell><cell>0.5352</cell></row><row><cell>tmt5 p</cell><cell>0.2946</cell><cell>0.5481</cell><cell>0.5696</cell><cell>0.5437</cell><cell>0.5463</cell><cell>0.5421</cell><cell>0.5077</cell><cell>0.5271</cell><cell>0.5303</cell></row><row><cell>FRT constraint</cell><cell>0.2782</cell><cell>0.5511</cell><cell>0.5712</cell><cell>0.5330</cell><cell>0.5494</cell><cell>0.5358</cell><cell>0.5220</cell><cell>0.5144</cell><cell>0.5059</cell></row><row><cell>bm25 p</cell><cell>0.2773</cell><cell>0.5178</cell><cell>0.5395</cell><cell>0.5156</cell><cell>0.5165</cell><cell>0.5147</cell><cell>0.4768</cell><cell>0.4969</cell><cell>0.5005</cell></row><row><cell>UoGTrQE</cell><cell>0.2734</cell><cell>0.5216</cell><cell>0.5291</cell><cell>0.4813</cell><cell>0.5225</cell><cell>0.4807</cell><cell>0.4975</cell><cell>0.4828</cell><cell>0.4906</cell></row><row><cell>UoGTrExpE1</cell><cell>0.2716</cell><cell>0.5073</cell><cell>0.4890</cell><cell>0.4643</cell><cell>0.5094</cell><cell>0.4641</cell><cell>0.5027</cell><cell>0.4778</cell><cell>0.4657</cell></row><row><cell>UDInfo F bm25</cell><cell>0.2708</cell><cell>0.5282</cell><cell>0.5606</cell><cell>0.5320</cell><cell>0.5289</cell><cell>0.5335</cell><cell>0.4810</cell><cell>0.5026</cell><cell>0.4983</cell></row><row><cell>ans bm25</cell><cell>0.2706</cell><cell>0.5275</cell><cell>0.5601</cell><cell>0.5315</cell><cell>0.5282</cell><cell>0.5331</cell><cell>0.4801</cell><cell>0.5021</cell><cell>0.4978</cell></row><row><cell>UDInfo F mlp2</cell><cell>0.2703</cell><cell>0.5268</cell><cell>0.5597</cell><cell>0.5311</cell><cell>0.5269</cell><cell>0.5326</cell><cell>0.4803</cell><cell>0.5015</cell><cell>0.4976</cell></row><row><cell>FRT attention</cell><cell>0.2702</cell><cell>0.5278</cell><cell>0.5841</cell><cell>0.5100</cell><cell>0.5281</cell><cell>0.5162</cell><cell>0.5213</cell><cell>0.5160</cell><cell>0.4881</cell></row><row><cell>UDInfo F lgbm2</cell><cell>0.2698</cell><cell>0.5261</cell><cell>0.5587</cell><cell>0.5304</cell><cell>0.5272</cell><cell>0.5320</cell><cell>0.4795</cell><cell>0.5006</cell><cell>0.4972</cell></row><row><cell>UDInfo F mlp4</cell><cell>0.2695</cell><cell>0.5251</cell><cell>0.5581</cell><cell>0.5294</cell><cell>0.5250</cell><cell>0.5309</cell><cell>0.4789</cell><cell>0.4999</cell><cell>0.4965</cell></row><row><cell>UDInfo F lgbm4</cell><cell>0.2693</cell><cell>0.5249</cell><cell>0.5574</cell><cell>0.5290</cell><cell>0.5263</cell><cell>0.5307</cell><cell>0.4791</cell><cell>0.4991</cell><cell>0.4962</cell></row><row><cell>FRT diversity</cell><cell>0.2641</cell><cell>0.5195</cell><cell>0.5270</cell><cell>0.5020</cell><cell>0.5169</cell><cell>0.4998</cell><cell>0.4835</cell><cell>0.4861</cell><cell>0.4828</cell></row><row><cell>rmit cidda ir 5</cell><cell>0.2485</cell><cell>0.4788</cell><cell>0.5366</cell><cell>0.5021</cell><cell>0.4932</cell><cell>0.5038</cell><cell>0.4405</cell><cell>0.4738</cell><cell>0.4617</cell></row><row><cell>rmit cidda ir 1</cell><cell>0.2433</cell><cell>0.4383</cell><cell>0.5377</cell><cell>0.5064</cell><cell>0.4850</cell><cell>0.5101</cell><cell>0.4223</cell><cell>0.4774</cell><cell>0.4698</cell></row><row><cell>rmit cidda ir 4</cell><cell>0.2431</cell><cell>0.4444</cell><cell>0.5319</cell><cell>0.5008</cell><cell>0.4780</cell><cell>0.5052</cell><cell>0.4278</cell><cell>0.4700</cell><cell>0.4570</cell></row><row><cell>rmit cidda ir 7</cell><cell>0.2426</cell><cell>0.4321</cell><cell>0.5317</cell><cell>0.5012</cell><cell>0.4858</cell><cell>0.5052</cell><cell>0.4232</cell><cell>0.4718</cell><cell>0.4638</cell></row><row><cell>rmit cidda ir 3</cell><cell>0.2420</cell><cell>0.4302</cell><cell>0.5297</cell><cell>0.4994</cell><cell>0.4846</cell><cell>0.5037</cell><cell>0.4208</cell><cell>0.4707</cell><cell>0.4636</cell></row><row><cell>rmit cidda ir 6</cell><cell>0.2418</cell><cell>0.4312</cell><cell>0.5278</cell><cell>0.4969</cell><cell>0.4845</cell><cell>0.5015</cell><cell>0.4218</cell><cell>0.4686</cell><cell>0.4613</cell></row><row><cell>rmit cidda ir 8</cell><cell>0.2415</cell><cell>0.4315</cell><cell>0.5259</cell><cell>0.4949</cell><cell>0.4844</cell><cell>0.4996</cell><cell>0.4219</cell><cell>0.4671</cell><cell>0.4600</cell></row><row><cell>rmit cidda ir 2</cell><cell>0.2345</cell><cell>0.4122</cell><cell>0.5134</cell><cell>0.4829</cell><cell>0.4805</cell><cell>0.4875</cell><cell>0.4169</cell><cell>0.4552</cell><cell>0.4473</cell></row></table><note coords="9,84.18,681.78,197.24,9.96"><p>• Query rewriting strategy to expand query.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" coords="11,179.84,549.12,252.33,10.32"><head>Table 3 :</head><label>3</label><figDesc>Task 1 M 1 on subsets of the fairness dimensions.</figDesc><table coords="12,198.62,91.27,219.79,158.57"><row><cell></cell><cell>0.52</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.50</cell><cell></cell><cell></cell><cell></cell></row><row><cell>AWRF</cell><cell>0.46 0.48</cell><cell></cell><cell></cell><cell></cell><cell>team h2oloo UoGTr V-Ryerson udel_fang rmit_cidda_ir</cell></row><row><cell></cell><cell>0.44</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.50</cell><cell>0.55</cell><cell>0.60 nDCG</cell><cell>0.65</cell><cell>0.70</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" coords="13,71.80,115.38,460.34,544.69"><head>Table 4 :</head><label>4</label><figDesc>Task 2 runs. Lower EE-L is better. Confidence intervals are bootstrapped.</figDesc><table coords="13,71.80,115.38,460.26,204.07"><row><cell>M1</cell><cell>0.3 0.4 0.5 0.6 0.7</cell><cell>tmt5 UoGRelvOnlyT1 UoGTrT1ColPRF UoGTrExpE2 0mt5 0mt5_p tmt5_p FRT_constraint bm25_p UoGTrQE UoGTrExpE1 UDInfo_F_bm25 ans_bm25 UDInfo_F_mlp2</cell><cell>FRT_attention UDInfo_F_lgbm2 UDInfo_F_mlp4 UDInfo_F_lgbm4 FRT_diversity rmit_cidda_ir_5 rmit_cidda_ir_1 rmit_cidda_ir_4 rmit_cidda_ir_7 rmit_cidda_ir_3 rmit_cidda_ir_6 rmit_cidda_ir_8 rmit_cidda_ir_2</cell></row><row><cell></cell><cell>Overall age alpha gender langs occ pop src-geo sub-geo Dimension</cell><cell></cell><cell></cell></row></table><note coords="13,185.93,337.76,89.41,10.32;13,279.15,337.76,146.92,9.96"><p>Figure 2: Task 1 M 1 on individual fairness dimensions.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" coords="14,389.02,655.12,150.98,10.91"><head>6</head><label></label><figDesc>This data is directly determined</figDesc><table coords="15,77.98,109.05,458.63,141.47"><row><cell></cell><cell>Overall</cell><cell>age</cell><cell>alpha</cell><cell>gender</cell><cell>langs</cell><cell>occ</cell><cell cols="3">pop src-geo sub-geo</cell></row><row><cell>UoGTrMabWeSA</cell><cell>1.123</cell><cell>7.215</cell><cell cols="2">6.798 15.163</cell><cell cols="2">8.756 15.127</cell><cell>22.197</cell><cell>4.798</cell><cell>5.925</cell></row><row><cell>UoGTrMabSaWR</cell><cell>1.185</cell><cell>7.194</cell><cell>7.259</cell><cell>15.291</cell><cell>8.978</cell><cell>15.226</cell><cell>22.674</cell><cell>4.979</cell><cell>6.303</cell></row><row><cell>UoGTrMabSAED</cell><cell cols="2">1.223 7.136</cell><cell>7.111</cell><cell>15.636</cell><cell>9.127</cell><cell cols="2">15.551 21.423</cell><cell>4.884</cell><cell>6.314</cell></row><row><cell>tmt5 p e</cell><cell cols="2">1.334 21.024</cell><cell>6.554</cell><cell cols="2">18.282 23.936</cell><cell>16.420</cell><cell cols="2">31.123 11.142</cell><cell>14.070</cell></row><row><cell>0mt5 p e</cell><cell cols="3">1.797 23.243 6.266</cell><cell cols="2">18.579 24.876</cell><cell>16.516</cell><cell cols="2">37.273 11.962</cell><cell>16.320</cell></row><row><cell>bm25 p e</cell><cell cols="2">1.866 25.273</cell><cell>7.607</cell><cell cols="2">20.687 26.782</cell><cell>18.361</cell><cell cols="2">39.964 13.278</cell><cell>16.995</cell></row><row><cell>UoGTrMabSaNR</cell><cell>2.140</cell><cell>8.637</cell><cell>9.343</cell><cell cols="2">15.981 8.640</cell><cell>16.078</cell><cell>42.181</cell><cell>5.894</cell><cell>7.790</cell></row><row><cell>UogTRelvOnlyT2</cell><cell cols="3">2.223 11.152 11.037</cell><cell cols="2">19.964 11.686</cell><cell>19.738</cell><cell>22.193</cell><cell>6.136</cell><cell>9.654</cell></row><row><cell>0mt5 e</cell><cell cols="3">2.986 27.765 11.149</cell><cell cols="2">22.881 27.967</cell><cell>20.988</cell><cell cols="2">43.410 14.288</cell><cell>19.946</cell></row><row><cell>tmt5 e</cell><cell cols="3">3.400 28.021 10.255</cell><cell cols="2">35.293 35.676</cell><cell>32.521</cell><cell cols="2">38.150 19.642</cell><cell>23.982</cell></row><row><cell>ans bm25 e</cell><cell cols="3">4.232 29.440 14.830</cell><cell cols="2">27.922 32.793</cell><cell>25.886</cell><cell cols="2">50.670 16.335</cell><cell>25.838</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" coords="15,71.75,267.06,458.38,387.45"><head>Table 5 :</head><label>5</label><figDesc>Task 2 EE-L on individual fairness dimensions.</figDesc><table coords="15,71.75,364.81,458.38,289.71"><row><cell></cell><cell>50</cell><cell></cell></row><row><cell>EE-L</cell><cell>10 20 30 40</cell><cell>UoGTrMabWeSA UoGTrMabSaWR UoGTrMabSAED tmt5_p_e 0mt5_p_e bm25_p_e UoGTrMabSaNR UogTRelvOnlyT2 0mt5_e tmt5_e ans_bm25_e</cell></row><row><cell></cell><cell>0</cell><cell>Dimension Overall age alpha gender langs occ pop src-geo sub-geo</cell></row><row><cell></cell><cell></cell><cell>Figure 5: Task 2 EE-L on subsets of the fairness dimensions.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" coords="16,71.75,263.24,458.38,360.77"><head>Table 6 :</head><label>6</label><figDesc>Task 2 EE-L on subsets of the fairness dimensions.</figDesc><table coords="16,71.75,401.12,458.38,222.89"><row><cell>EE-L</cell><cell></cell><cell></cell><cell></cell><cell>UoGTrMabWeSA UoGTrMabSaWR UoGTrMabSAED tmt5_p_e 0mt5_p_e bm25_p_e UoGTrMabSaNR UogTRelvOnlyT2 0mt5_e tmt5_e ans_bm25_e</cell></row><row><cell>Overall</cell><cell>2021</cell><cell>Dimension</cell><cell>Internal</cell><cell>Demographic</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" coords="18,72.00,616.73,468.00,75.15"><head></head><label></label><figDesc>17 See the code for more details: https://gitlab.wikimedia.org/isaacj/miscellaneous-wikimedia/-/blob/master/ wikidata-properties-spark/article-age.ipynb18 For more details, see the code: https://gitlab.wikimedia.org/isaacj/miscellaneous-wikimedia/-/blob/master/ wikidata-properties-spark/wikidata_occupation_taxonomy.ipynb 19 https://wikitech.wikimedia.org/wiki/Analytics/Data_Lake/Traffic/Webrequest For the training queries, relevance was obtained from page lists for existing WikiProjects. While WikiProjects have broad coverage of English Wikipedia and we selected for WikiProjects that had tagged new articles in the recent months in the training data as a proxy for activity, it is certain that almost all WikiProjects are incomplete in tagging relevant content (itself a strong motivation for this task). While it is not easy to measure just how incomplete they are, it should not be assumed that content that has not been tagged as relevant to a WikiProject in the training data is indeed irrelevant. 23</figDesc><table /><note coords="18,79.44,664.17,237.86,8.70;18,79.44,673.68,329.60,8.70;18,79.44,683.18,291.99,8.70;19,108.12,75.13,129.07,8.77"><p><p>20 </p>See: https://meta.wikimedia.org/wiki/Research:Page_view 21 https://wikitech.wikimedia.org/wiki/Analytics/Data_Lake/Traffic/BotDetection 22 https://wikidata-analytics.wmcloud.org/app/WD_percentUsageDashboard -WikiProject Relevance:</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8" coords="22,72.00,74.49,500.65,618.11"><head></head><label></label><figDesc>And we're off.with tqdm(total=page file size, desc='compressed input', unit='B', unit scale=True) as fpb:with open(page path, 'rb') as gzf, gzip.GzipFile(fileobj=gzf, mode='r') as decoded:</figDesc><table coords="22,72.00,119.25,414.87,573.36"><row><cell cols="2"># dtypes: int64(1), object(1) Column Dtype</cell></row><row><cell cols="2">---------memory usage: 28.2+ MB -----</cell></row><row><cell>0</cell><cell>page_id int64</cell></row><row><cell cols="3">1 occupations = pd.DataFrame.from records(occ recs, columns=['page id', 'occ']) sub_geo object for line in decoded: occupations.info() dtypes: int64(1), object(1) line = json.loads(line) page = line['page id'] memory usage: 57.6+ MB &lt;class 'pandas.core.frame.DataFrame'&gt;</cell></row><row><cell cols="3">if page in seen pages: src geo = pd.DataFrame.from records(src geo recs) RangeIndex: 2445899 entries, 0 to 2445898</cell></row><row><cell cols="2">continue Data columns (total 2 columns): src geo.info()</cell></row><row><cell cols="3">else: seen pages.add(page) # page quality qual recs.append((page, line['qual cat'])) Dtype &lt;class 'pandas.core.frame.DataFrame'&gt; # Column --------------RangeIndex: 6460210 entries, 0 to 6460209 0 page_id int64 Data columns (total 25 columns): # Column 1 occ object Dtype ---------dtypes: int64(1), object(1) -----0 page_id memory usage: 37.3+ MB int64 # page geography 1 Northern America float64 cat attrs = pd.DataFrame.from records(att recs, columns=BASIC ATTRS) for geo in line[SUB GEO ATTR]: 3 Northern Europe float64 sub geo recs.append((page, sys.intern(geo))) 2 @UNKNOWN float64 cat attrs.info()</cell></row><row><cell cols="3">4 &lt;class 'pandas.core.frame.DataFrame'&gt; Western Asia float64 # src geography 5 Western Europe float64 RangeIndex: 6460210 entries, 0 to 6460209 psg = {'page id': page} 6 Western Africa float64 Data columns (total 5 columns): for g, v in line[SRC GEO ATTR].items(): 7 Southern Europe float64 # Column Dtype if g == 'UNK': 8 Australia and New Zealand float64 --------------g = UNKNOWN 9 Central America float64 0 page_id int64 psg[sys.intern(g)] = v 10 Eastern Asia float64 1 first_letter_category object src geo recs.append(psg) 11 South America float64 2 creation_date_category object</cell></row><row><cell cols="3">12 Eastern Europe 3 relative_pageviews_category object float64 # genders 13 Northern Africa float64 4 num_sitelinks_category object for g in line[GENDER ATTR]: 14 Eastern Africa float64 dtypes: int64(1), object(4) gender recs.append((page, sys.intern(g))) 15 Southern Asia float64 memory usage: 246.4+ MB</cell></row><row><cell cols="3">16 Polynesia 17 South-eastern Asia all pages = np.array(list(seen pages)) float64 float64 18 Central Asia all pages = np.sort(all pages) float64 19 Caribbean float64 all pages = pd.Series(all pages)</cell></row><row><cell cols="2">20 Southern Africa 21 Middle Africa del src geo recs, sub geo recs 22 Antarctica del gender recs, occ recs 23 Melanesia del seen pages</cell><cell>float64 float64 float64 float64</cell></row><row><cell cols="2">24 Micronesia dtypes: float64(24), int64(1) %reset -f out</cell><cell>float64</cell></row><row><cell cols="3">memory usage: 1.2 GB Flushing output cache (1 entries)</cell></row><row><cell cols="3">gender = pd.DataFrame.from records(gender recs, columns=['page id', 'gender']) import gc gender.info() gc.collect()</cell></row><row><cell cols="3">quality = pd.DataFrame.from records(qual recs, columns=['page id', 'quality']) # Column Dtype sub geo.info() Data columns (total 2 columns): sub geo = pd.DataFrame.from records(sub geo recs, columns=['page id', 'sub geo']) &lt;class 'pandas.core.frame.DataFrame'&gt; RangeIndex: 1850219 entries, 0 to 1850218 0</cell></row><row><cell cols="3">&lt;class 'pandas.core.frame.DataFrame'&gt; --------------</cell></row><row><cell cols="3">RangeIndex: 3773443 entries, 0 to 3773442 0 page_id int64</cell></row><row><cell cols="2">Data columns (total 2 columns): 1 gender object</cell></row></table><note coords="22,134.76,442.04,67.99,9.96;22,134.76,453.99,134.53,9.96;22,155.69,465.95,207.75,9.96;22,134.76,489.86,94.15,9.96;22,134.76,501.81,437.89,9.96;22,249.83,513.77,113.60,9.96;22,134.76,537.68,298.13,9.96;22,72.00,558.52,429.23,9.96;22,72.00,584.24,322.79,9.96"><p><p><p># occupations for occ in line[OCC ATTR]: occ recs.append((page, sys.intern(occ))) # other attributes att recs.append(tuple((sys.intern(line[a]) if isinstance(line[a], str) else line[a]) for a in BASIC ATTRS)) fpb.update(gzf.tell() -fpb.n) # update the progress bar</p>{"model id":"7a8ed81f35ca4fa0b50c58c43638f3e0","version major":2,"version minor":0}</p>Reassemble DFs Now we will assemble these records into data frames.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12" coords="28,72.00,413.90,468.00,278.70"><head></head><label></label><figDesc>INFO:wptrec.save:saving CSV to data\metric-tables\page-sub-geo-align.csv.gz INFO:wptrec.save:data\metric-tables\page-sub-geo-align.csv.gz: 23.97 MiB INFO:wptrec.save:saving Parquet to data\metric-tables\page-sub-geo-align.parquet INFO:wptrec.save:data\metric-tables\page-sub-geo-align.parquet: 13.20 MiB</figDesc><table coords="28,72.00,413.90,468.00,278.70"><row><cell cols="5">70194419 14 South-eastern Asia float64 NaN</cell><cell>NaN</cell><cell>NaN</cell><cell>NaN</cell><cell>NaN</cell></row><row><cell cols="3">70194480 15 Southern Africa NaN</cell><cell cols="2">float64</cell><cell>NaN</cell><cell>NaN</cell><cell>NaN</cell><cell>NaN</cell></row><row><cell cols="3">70194481 16 Southern Asia NaN</cell><cell cols="2">float64</cell><cell>NaN</cell><cell>NaN</cell><cell>NaN</cell><cell>NaN</cell></row><row><cell cols="3">70194489 17 Southern Europe NaN</cell><cell cols="2">float64</cell><cell>NaN</cell><cell>NaN</cell><cell>NaN</cell><cell>NaN</cell></row><row><cell cols="3">70194530 18 Western Africa NaN</cell><cell cols="2">float64</cell><cell>NaN</cell><cell>NaN</cell><cell>NaN</cell><cell>NaN</cell></row><row><cell cols="2">19 Western Asia</cell><cell></cell><cell cols="2">float64</cell><cell></cell></row><row><cell cols="3">Micronesia 20 Western Europe</cell><cell cols="2">float64</cell><cell></cell></row><row><cell cols="3">12 dtypes: float64(21) NaN</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">25 memory usage: 1.1 GB NaN</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">39 290 Xarray:</cell><cell>NaN NaN</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="7">303 ... src geo xr = xr.DataArray(src geo align, dims=['page', 'src geo']) NaN ... 70194419 NaN src geo xr</cell></row><row><cell cols="7">70194480 70194481 &lt;xarray.DataArray (page: 6460210, src_geo: 21)&gt; NaN NaN 70194489 array([[0.31343284, 0. , 0. , ..., 0. NaN 70194530 0. ], NaN [0.70697674, 0. , 0. , ..., 0.00930233, 0. , 0.01492537, ,</cell></row><row><cell cols="4">0.01395349], [6460210 rows x 24 columns] [0.41666667, 0.</cell><cell cols="2">, 0.</cell><cell>, ..., 0.</cell><cell>, 0.</cell><cell>,</cell></row><row><cell></cell><cell cols="2">0.08333333], Collapse Oceania: ...,</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>[0.125</cell><cell>, 0.</cell><cell></cell><cell>,</cell><cell></cell></row><row><cell></cell><cell>And normalize.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="7">0.]]) src geo align = norm align matrix(src geo align)</cell></row><row><cell cols="7">Coordinates: * page src geo align.sort index(axis='columns', inplace=True) (page) int64 12 25 39 290 ... 70194480 70194481 70194489 70194530 * sub_geo (sub_geo) object '@UNKNOWN' 'Antarctica' ... 'Western Europe' src geo align.info()</cell></row><row><cell cols="7">&lt;class 'pandas.core.frame.DataFrame'&gt; binarysize(sub geo xr.nbytes) Int64Index: 6460210 entries, 12 to 70194530</cell></row><row><cell cols="5">'1.90 GiB' Data columns (total 21 columns):</cell><cell></cell></row><row><cell>#</cell><cell>Column</cell><cell></cell><cell>Dtype</cell><cell></cell><cell></cell></row><row><cell cols="7">output.save table(sub geo align, 'page-sub-geo-align', parquet=True) --------------</cell></row><row><cell>0</cell><cell>@UNKNOWN</cell><cell></cell><cell cols="2">float64</cell><cell></cell></row><row><cell>1</cell><cell>Antarctica</cell><cell></cell><cell cols="2">float64</cell><cell></cell></row><row><cell>2</cell><cell>Caribbean</cell><cell></cell><cell cols="2">float64</cell><cell></cell></row><row><cell>3</cell><cell cols="2">Central America</cell><cell cols="2">float64</cell><cell></cell></row><row><cell>4</cell><cell>Central Asia</cell><cell></cell><cell cols="2">float64</cell><cell></cell></row><row><cell>5</cell><cell cols="2">Eastern Africa</cell><cell cols="2">float64</cell><cell></cell></row><row><cell cols="5">A.4.3 Page Source Geography 6 Eastern Asia float64</cell><cell></cell></row><row><cell cols="7">7 We now need to do a similar setup for page source geography, which comes to us as a multinomial distribution Eastern Europe float64 8 Middle Africa float64 already. 9 Northern Africa float64</cell></row><row><cell cols="3">10 Northern America src geo.head() 11 Northern Europe</cell><cell cols="2">float64 float64</cell><cell></cell></row><row><cell cols="7">page_id Northern America @UNKNOWN Northern Europe Western Asia \ 12 Oceania float64</cell></row><row><cell cols="3">0 13 South America 12</cell><cell cols="2">50.0 float64</cell><cell>42.0</cell><cell>40.0</cell><cell>2.0</cell></row></table><note coords="31,72.00,344.95,309.43,9.96;31,72.00,356.91,275.12,9.96;31,72.00,368.86,164.44,9.96"><p>ocean = src geo align.loc[:, oc regions].sum(axis='columns') src geo align = src geo align.drop(columns=oc regions) src geo align['Oceania'] = ocean</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13" coords="32,72.00,436.92,418.43,255.68"><head></head><label></label><figDesc>Western Europe' output.save table(src geo align, 'page-src-geo-align', parquet=True) INFO:wptrec.save:saving CSV to data\metric-tables\page-src-geo-align.csv.gz INFO:wptrec.save:data\metric-tables\page-src-geo-align.csv.gz: 43.69 MiB INFO:wptrec.save:saving Parquet to data\metric-tables\page-src-geo-align.parquet INFO:wptrec.save:data\metric-tables\page-src-geo-align.parquet: 28.94 MiB Now let's work on extracting gender -this is going work a lot like page geography.</figDesc><table coords="32,72.00,458.11,94.15,234.50"><row><cell cols="3">And summarize:</cell></row><row><cell cols="3">gender['gender'].value counts()</cell></row><row><cell>male</cell><cell></cell><cell cols="2">1495445</cell></row><row><cell>female</cell><cell></cell><cell cols="2">353301</cell></row><row><cell cols="3">transgender female</cell><cell>636</cell></row><row><cell cols="2">non-binary</cell><cell></cell><cell>329</cell></row><row><cell cols="3">transgender male</cell><cell>197</cell></row><row><cell cols="2">intersex</cell><cell></cell><cell>94</cell></row><row><cell>eunuch</cell><cell></cell><cell></cell><cell>70</cell></row><row><cell cols="2">genderfluid</cell><cell></cell><cell>29</cell></row><row><cell cols="2">genderqueer</cell><cell></cell><cell>27</cell></row><row><cell cols="3">cisgender female</cell><cell>18</cell></row><row><cell cols="2">two-spiriit</cell><cell></cell><cell>11</cell></row><row><cell cols="2">travesti</cell><cell></cell><cell>10</cell></row><row><cell cols="3">transgender person</cell><cell>10</cell></row><row><cell cols="2">cisgender male</cell><cell></cell><cell>7</cell></row><row><cell cols="2">agender</cell><cell></cell><cell>6</cell></row><row><cell cols="3">transmasculine</cell><cell>6</cell></row><row><cell cols="2">neutral sex</cell><cell></cell><cell>5</cell></row><row><cell cols="2">transfeminine</cell><cell></cell><cell>4</cell></row><row><cell cols="2">bigender</cell><cell></cell><cell>4</cell></row><row><cell cols="2">third gender</cell><cell></cell><cell>2</cell></row><row><cell cols="2">demiboy</cell><cell></cell><cell>2</cell></row><row><cell cols="2">fa'afafine</cell><cell></cell><cell>2</cell></row><row><cell cols="2">neutrois</cell><cell></cell><cell>1</cell></row><row><cell cols="3">assigned female at birth</cell><cell>1</cell></row><row><cell>māhū</cell><cell></cell><cell></cell><cell>1</cell></row><row><cell>hijra</cell><cell></cell><cell></cell><cell>1</cell></row><row><cell cols="3">Name: gender, dtype: int64</cell></row><row><cell cols="2">And save:</cell><cell></cell></row><row><cell cols="3">A.4.4 Gender</cell></row><row><cell cols="2">gender.head()</cell><cell></cell></row><row><cell cols="3">page_id gender</cell></row><row><cell>0</cell><cell>307</cell><cell>male</cell></row><row><cell>1</cell><cell>308</cell><cell>male</cell></row><row><cell>2</cell><cell cols="2">339 female</cell></row><row><cell>3</cell><cell>340</cell><cell>male</cell></row><row><cell>4</cell><cell>344</cell><cell>male</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_14" coords="33,72.00,610.48,183.06,81.69"><head></head><label></label><figDesc>Now, we're going to group the remaining gender identities together under the label 'NB'. As noted above, this is a debatable exercise that collapses a lot of identity.</figDesc><table coords="33,72.00,610.48,183.06,81.69"><row><cell cols="4">two-spiriit 6460608 70194480 @UNKNOWN</cell><cell>11</cell></row><row><cell cols="4">transgender person 6460609 70194481 @UNKNOWN</cell><cell>10</cell></row><row><cell cols="4">travesti 6460610 70194489 @UNKNOWN</cell><cell>10</cell></row><row><cell cols="4">agender 6460611 70194530 @UNKNOWN</cell><cell>6</cell></row><row><cell cols="3">transmasculine</cell><cell></cell><cell>6</cell></row><row><cell cols="4">neutral sex [6460612 rows x 2 columns]</cell><cell>5</cell></row><row><cell cols="2">transfeminine</cell><cell></cell><cell></cell><cell>4</cell></row><row><cell>bigender</cell><cell></cell><cell></cell><cell></cell><cell>4</cell></row><row><cell cols="2">third gender</cell><cell></cell><cell></cell><cell>2</cell></row><row><cell>demiboy</cell><cell></cell><cell></cell><cell></cell><cell>2</cell></row><row><cell cols="2">fa'afafine</cell><cell></cell><cell></cell><cell>2</cell></row><row><cell>māhū</cell><cell></cell><cell></cell><cell></cell><cell>1</cell></row><row><cell>hijra</cell><cell></cell><cell></cell><cell></cell><cell>1</cell></row><row><cell>neutrois</cell><cell></cell><cell></cell><cell></cell><cell>1</cell></row><row><cell cols="4">assigned female at birth</cell><cell>1</cell></row><row><cell cols="4">Name: gender, dtype: int64</cell></row><row><cell cols="5">gender labels = [UNKNOWN, 'female', 'male', 'NB']</cell></row><row><cell cols="5">pgcol[˜pgcol.isin(gender labels)] = 'NB'</cell></row><row><cell cols="3">pgcol.value counts()</cell><cell></cell></row><row><cell>male</cell><cell cols="2">1495649</cell><cell></cell></row><row><cell>female</cell><cell cols="2">353955</cell><cell></cell></row><row><cell>NB</cell><cell></cell><cell>615</cell><cell></cell></row><row><cell cols="4">Name: gender, dtype: int64</cell></row><row><cell cols="5">Now put this column back in the frame and deduplicate.</cell></row><row><cell cols="5">page gender = gender.assign(gender=pgcol)</cell></row><row><cell cols="5">page gender = page gender.drop duplicates()</cell></row><row><cell>del pgcol</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="5">Now we need to add unknown genders.</cell></row><row><cell cols="5">kg mask = all pages.isin(page gender['page id'])</cell></row><row><cell cols="5">unknown = all pages[˜kg mask]</cell></row><row><cell cols="4">page gender = pd.concat([</cell></row><row><cell cols="3">page gender,</cell><cell></cell></row><row><cell cols="5">pd.DataFrame({'page id': unknown, 'gender': UNKNOWN})</cell></row><row><cell cols="3">], ignore index=True)</cell><cell></cell></row><row><cell cols="2">page gender</cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="2">page_id</cell><cell>gender</cell></row><row><cell>male 0</cell><cell></cell><cell>307</cell><cell>male</cell><cell>1495649</cell></row><row><cell>female 1</cell><cell></cell><cell>308</cell><cell>male</cell><cell>353955</cell></row><row><cell cols="2">non-binary 2</cell><cell>339</cell><cell>female</cell><cell>329</cell></row><row><cell>intersex 3</cell><cell></cell><cell>340</cell><cell>male</cell><cell>94</cell></row><row><cell>eunuch 4</cell><cell></cell><cell>344</cell><cell>male</cell><cell>70</cell></row><row><cell cols="2">genderfluid ...</cell><cell>...</cell><cell>...</cell><cell>29</cell></row><row><cell cols="4">genderqueer 6460607 70194419 @UNKNOWN</cell><cell>27</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_16" coords="38,72.00,333.52,468.00,355.12"><head>4.6 Other Attributes</head><label></label><figDesc>Everything is 1, we're good to go! output.save table(qr src geo tgt, f'task1-{DATA MODE}-src-geo-target', parquet=True) INFO:wptrec.save:saving CSV to data\metric-tables\task1-eval-src-geo-target.csv.gz INFO:wptrec.save:data\metric-tables\task1-eval-src-geo-target.csv.gz: 10.64 KiB INFO:wptrec.save:saving Parquet to data\metric-tables\task1-eval-src-geo-target.parquet INFO:wptrec.save:data\metric-tables\task1-eval-src-geo-target.parquet: 25.97 KiB</figDesc><table coords="38,72.00,333.52,468.00,355.12"><row><cell cols="6">import sys, logging @UNKNOWN [2737612 rows x 21 columns] Antarctica Caribbean Central America Central Asia \ qr src geo tgt.sum('columns').describe()</cell></row><row><cell cols="6">logging.basicConfig(level=logging.INFO, stream=sys.stderr) log = logging.getLogger('Task1Alignment') And set up an output directory: from wptrec.save import OutRepo output = OutRepo('data/metric-tables') B.2 Data and Helpers 359 0.021289 0.118833 0.017016 270 0.420047 4.477917e-08 0.003611 0.008171 find it: 270 0.037144 0.106411 0.053948 187 0.391787 4.696121e-08 0.002250 0.008070 Most data loading is outsourced to MetricInputs. First we save the data mode where metric inputs can 0.007747 0.002702 0.009914 0.002876 topic_id 187 0.161757 6.472220e-08 0.004007 0.012384 And repeat: count 5.000000e+01 0.004401 270 0.242805 5.846440e-08 0.017378 0.014851 0.005852 359 0.183666 6.303060e-08 0.017007 0.014391 0.003689 365 0.201370 6.166361e-08 0.007572 0.012774 0.004079 400 0.258172 5.727783e-08 0.004827 0.013104 0.003552 mean 1.000000e+00 qr src geo tgt = qr src geo align.groupby('topic id').mean() std 1.218255e-16 qr src geo fk = qr src geo tgt.iloc[:, 1:].sum('columns') min 1.000000e+00 qr src geo tgt.iloc[:, 1:] *= 0.5 25% 1.000000e+00 qr src geo tgt.iloc[:, 1:] += qr src geo fk.apply(lambda k: world pop * k * 0.5) 50% 1.000000e+00 qr src geo tgt.head() 75% 1.000000e+00 Eastern Africa Eastern Asia Eastern Europe Middle Africa \ topic_id 187 0.022830 0.112412 0.033440 0.008264 @UNKNOWN max 1.000000e+00 Antarctica Caribbean Central America Central Asia \ topic_id dtype: float64</cell></row><row><cell cols="4">365 359 import wptrec 0.372489 4.845126e-08 0.022296 0.104172 0.003072 400 0.020758 0.101462 365 0.364985 4.903066e-08 0.010223 wptrec.DATA MODE = DATA MODE 400 0.422769 2.798744e-07 0.002478</cell><cell>0.035950 0.008260 0.027533 0.008492 0.008311</cell><cell>0.011613 0.002821 0.007496 0.002984 0.002702</cell></row><row><cell cols="6">Northern Africa ... Northern Europe from MetricInputs import * topic_id ... Eastern Africa Eastern Asia Eastern Europe Middle Africa \ Oceania South America \</cell></row><row><cell>187 topic_id</cell><cell>0.014711 ...</cell><cell></cell><cell cols="2">0.133172 0.020594</cell><cell>0.030093</cell></row><row><cell>270 187</cell><cell>0.017165 ... 0.016153</cell><cell>0.077938</cell><cell cols="2">0.058914 0.020977 0.019365</cell><cell>0.038029 0.005790</cell></row><row><cell>359 270</cell><cell>0.011968 ... 0.015759</cell><cell>0.073673</cell><cell cols="2">0.006663 0.005588 0.019488</cell><cell>0.029521 0.005524</cell></row><row><cell cols="6">365 359 400 365 Coordinates: * page 400 * occ South-eastern Asia Southern Africa Southern Asia Southern Europe \ 0.015012 ... 0.029218 0.016421 0.036189 0.016384 0.084042 0.013101 0.005947 0.]]) 0.012440 ... 0.076621 0.023341 0.030668 0.017147 0.082518 0.018251 0.007674 0.015381 0.074893 0.018031 0.005497 (page) int64 12 25 39 290 ... 70194480 70194481 70194489 70194530 (occ) object '@UNKNOWN' 'activist' ... 'writer' parquet topic_id Northern Africa ... Northern Europe Oceania South America \</cell></row><row><cell>And save: 187 topic_id dimensions 270 187</cell><cell>0.043274 ... 0.038750 0.009195 ...</cell><cell cols="3">0.004694 0.008852 0.110871 0.011692 0.116350 0.101007</cell><cell>0.059294 0.044103 0.019483</cell></row><row><cell cols="6">359 270 [&lt;dimension "sub-geo": 21 levels&gt;, 0.035681 0.008721 ... 365 0.053554 359 0.009209 ... &lt;dimension "src-geo": 21 levels&gt;, 400 0.036634 365 0.009672 ... &lt;dimension "gender": 4 levels&gt;, 400 0.008827 ... &lt;dimension "occ": 33 levels&gt;, Western Africa Western Asia Western Europe 0.003675 0.099904 0.044787 0.010542 0.003956 0.100548 0.007908 0.003628 0.005453 0.101073 0.021657 0.012542 0.069702 0.019709 &lt;dimension "alpha": 4 levels&gt;, topic_id South-eastern Asia Southern Africa Southern Asia Southern Europe \ 0.010362 0.020577 0.065794 0.018333 0.027173 0.020322 0.019562 &lt;dimension "age": 4 levels&gt;, 187 0.020306 0.023583 0.058312 topic_id &lt;dimension "pop": 4 levels&gt;, 270 0.026599 0.022927 0.055952 187 0.029280 0.003079 0.081422 0.019888 &lt;dimension "langs": 3 levels&gt;] 359 0.018935 0.014239 0.012154 270 0.026281 0.003505 0.073534 0.018938 The other attributes don't require as much re-processing -they can be used as-is as categorical variables. Let's save! 365 0.024046 0.029213 0.031859 359 0.027301 0.002669 0.076759 0.007120 B.2.1 qrel join 400 0.018965 0.018795 0.056502 365 0.038885 0.002730 0.078353 0.039960</cell></row><row><cell cols="6">pages = cat attrs.set index('page id') 400 0.027291 0.003381 We want a function to join alignments with qrels: [5 rows x 21 columns] pages def qr join(align): return qrels.join(align, on='page id').set index(['topic id', 'page id']) 0.078346 0.015888 Western Africa Western Asia Western Europe Make sure the rows are distributions: topic_id first_letter_category creation_date_category \ page_id 12 a-d 2001-2006 25 a-d 2001-2006 39 a-d 2001-2006 290 a-d 2001-2006 303 a-d 2001-2006 ... ... ... 70194419 l-r 2017-2022 187 0.014278 0.013633 0.033541 qr sub geo tgt.sum('columns').describe() 270 0.013802 0.011568 0.061875 B.2.2 norm dist And a function to normalize to a distribution: count 359 0.014524 0.010901 0.010185 5.000000e+01 mean 365 0.015051 0.020196 0.029345 1.000000e+00 std 1.409697e-16 400 0.013821 0.012813 0.025499 def norm dist df(mat): sums = mat.sum('columns') min 1.000000e+00 25% 1.000000e+00 [5 rows x 21 columns] return mat.divide(sums, 'rows') 50% 1.000000e+00 Make sure the rows are distributions:</cell></row></table><note coords="38,72.00,413.22,310.89,9.96;38,72.00,435.14,371.35,9.96;38,72.00,447.09,355.66,9.96;38,72.00,459.05,397.51,9.96;38,72.00,471.00,360.90,9.96;38,72.00,497.54,10.59,8.77;41,72.00,290.13,371.35,9.96;41,72.00,302.09,371.35,9.96;41,72.00,314.04,366.13,9.96;41,72.00,326.00,350.43,9.96;41,72.00,337.95,360.89,9.96;41,72.00,349.91,350.43,9.96;41,72.00,361.86,350.43,9.96;41,72.00,373.82,324.28,9.96"><p>output.save table(occ align, 'page-occ-align', parquet=True) INFO:wptrec.save:saving CSV to data\metric-tables\page-occ-align.csv.gz INFO:wptrec.save:data\metric-tables\page-occ-align.csv.gz: 26.18 MiB INFO:wptrec.save:saving Parquet to data\metric-tables\page-occ-align.parquet INFO:wptrec.save:data\metric-tables\page-occ-align.parquet: 12.67 MiB A.INFO:MetricInputs:reading data\metric-tables\page-sub-geo-align.parquet INFO:MetricInputs:reading data\metric-tables\page-src-geo-align.parquet INFO:MetricInputs:reading data\metric-tables\page-gender-align.parquet INFO:MetricInputs:reading data\metric-tables\page-occ-align.parquet INFO:MetricInputs:reading data\metric-tables\page-alpha-align.parquet INFO:MetricInputs:reading data\metric-tables\page-age-align.parquet INFO:MetricInputs:reading data\metric-tables\page-pop-align.parquet INFO:MetricInputs:reading data\metric-tables\page-langs-align.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_17" coords="48,72.00,469.70,449.81,222.90"><head></head><label></label><figDesc>We now want the ability to create an indexer to look up the subset of the alignment frame corresponding to a case. Let's write that function:</figDesc><table coords="48,72.00,469.70,449.81,222.90"><row><cell cols="4">B.7 Remaining Attributes avg cases.pop()</cell><cell></cell><cell></cell></row><row><cell cols="7">The remaining attributes don't need any further processing, as they aren't averaged. avg cases</cell></row><row><cell cols="6">[(True, True, True), qr occ align = qr join(occ align) (True, True, False), qr occ tgt = qr occ align.groupby('topic id').sum() (True, False, True), qr occ tgt = norm dist df(qr occ tgt) (True, False, False), qr occ tgt.head() (False, True, True),</cell></row><row><cell cols="6">@UNKNOWN activist agricultural worker (False, True, False), topic_id (False, False, True)]</cell><cell>artist</cell><cell>athlete \</cell></row><row><cell>187</cell><cell></cell><cell cols="2">0.891108 0.000192</cell><cell></cell><cell cols="2">0.000049 0.005105 0.000383</cell></row><row><cell>270</cell><cell></cell><cell cols="2">0.379033 0.000143</cell><cell></cell><cell cols="2">0.000153 0.000569 0.597543</cell></row><row><cell>359</cell><cell></cell><cell cols="2">0.355009 0.000216</cell><cell></cell><cell cols="2">0.000048 0.000564 0.587417</cell></row><row><cell cols="4">365 400 def case selector(case): 0.427646 0.000081 0.044346 0.004397 def mksel(known):</cell><cell></cell><cell cols="2">0.000016 0.000186 0.499385 0.000387 0.316302 0.003669</cell></row><row><cell cols="2">topic_id 187 270 359 365</cell><cell cols="5">biologist businessperson if known: # select all but 1st column chemist civil servant clergyperson \ 0.000193 0.002763 0.000005 0.000194 return slice(1, None, None) 0.000081 0.000145 0.001116 0.000123 0.000671 else: 0.000110 0.000045 0.004931 0.000062 0.000336 # select 1st column 0.000046 0.000023 0.001868 0.000047 0.000207 0.000094 return 0</cell></row><row><cell>400</cell><cell cols="5">0.001530 return tuple(mksel(k) for k in case) 0.019926 0.000269</cell><cell>0.002284</cell><cell>0.001724</cell></row><row><cell cols="7">... military personnel musician performing artist physicist \ Let's test this function quick:</cell></row><row><cell cols="6">topic_id ... 187 ... case selector(avg cases[0]) 0.000335 0.000128</cell><cell>0.000110</cell><cell>0.000052</cell></row><row><cell cols="7">270 359 (slice(1, None, None), slice(1, None, None), slice(1, None, None)) ... 0.000867 0.000404 0.001072 0.000024 ... 0.001501 0.000922 0.002827 0.000010</cell></row><row><cell cols="6">365 400 case selector(avg cases[-1]) ... 0.000696 0.000274 ... 0.002074 0.010823</cell><cell>0.001756 0.128105</cell><cell>0.000000 0.000393</cell></row><row><cell cols="7">politician scientist social scientist sportsperson (non-athlete) \ (0, 0, slice(1, None, None))</cell></row><row><cell cols="2">topic_id</cell><cell></cell><cell></cell><cell></cell><cell cols="2">).mean()</cell></row><row><cell cols="7">qr gender fk = qr gender tgt.iloc[:, 1:].sum('columns') 187 0.001044 0.001168 0.000461</cell><cell>0.000040</cell></row><row><cell cols="4">qr gender tgt.iloc[:, 1:] *= 0.5 270 0.002388 0.000277</cell><cell></cell><cell>0.000275</cell><cell>0.008550</cell></row><row><cell cols="7">qr gender tgt.iloc[:, 1:] += qr gender fk.apply(lambda k: gender tgt * k * 0.5) 359 0.001808 0.000037 0.000045 0.031237</cell></row><row><cell cols="3">qr gender tgt.head() 365 0.001031</cell><cell>0.000063</cell><cell></cell><cell>0.000070</cell><cell>0.061864</cell></row><row><cell>400</cell><cell></cell><cell>@UNKNOWN 0.007384</cell><cell>female 0.003000</cell><cell>male</cell><cell>NB 0.003345</cell><cell>0.001635</cell></row><row><cell cols="2">topic_id 187 270 topic_id 359 187 365 270 400 359 365</cell><cell cols="4">transportation occupation 0.888195 0.033910 0.077336 0.000574 writer 0.371833 0.257322 0.367774 0.003231 0.000031 0.001421 0.340156 0.170558 0.486007 0.003299 0.000281 0.000811 0.424643 0.183396 0.389116 0.002877 0.000059 0.001414 0.011697 0.408054 0.575302 0.005275 0.000094 0.000777</cell></row><row><cell cols="7">output.save table(qr gender tgt, f'task1-{DATA MODE}-gender-target', parquet=True) 400 0.000520 0.249432</cell></row><row><cell cols="7">INFO:wptrec.save:saving CSV to data\metric-tables\task1-eval-gender-target.csv.gz INFO:wptrec.save:data\metric-tables\task1-eval-gender-target.csv.gz: 2.22 KiB [5 rows x 33 columns]</cell></row><row><cell cols="7">INFO:wptrec.save:saving Parquet to data\metric-tables\task1-eval-gender-target.parquet INFO:wptrec.save:data\metric-tables\task1-eval-gender-target.parquet: 6.90 KiB output.save table(qr occ tgt, f'task1-{DATA MODE}-occ-target', parquet=True)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_18" coords="59,72.00,227.92,541.50,448.32"><head></head><label></label><figDesc>7. Re-normalize to preserve the original sum Let's define the whole process as a function: INFO:wptrec.save:saving CSV to data\metric-tables\task2-eval-sub-geo-target.csv.gz INFO:wptrec.save:data\metric-tables\task2-eval-sub-geo-target.csv.gz: 10.67 KiB INFO:wptrec.save:saving Parquet to data\metric-tables\task2-eval-sub-geo-target.parquet INFO:wptrec.save:data\metric-tables\task2-eval-sub-geo-target.parquet: 25.97 KiB Make sure the rows are distributions: qr src geo tgt = norm dist df(qr src geo tgt) output.save table(qr src geo tgt, f'task2-{DATA MODE}-src-geo-target', parquet=True) INFO:wptrec.save:saving CSV to data\metric-tables\task2-eval-src-geo-target.csv.gz INFO:wptrec.save:data\metric-tables\task2-eval-src-geo-target.csv.gz: 10.62 KiB INFO:wptrec.save:saving Parquet to data\metric-tables\task2-eval-src-geo-target.parquet INFO:wptrec.save:data\metric-tables\task2-eval-src-geo-target.parquet: 25.97 KiB Now we're going to grab the gender alignments. Works the same way. .save table(qr occ tgt, f'task2-{DATA MODE}-occ-target', parquet=True) INFO:wptrec.save:saving CSV to data\metric-tables\task2-eval-occ-target.csv.gz INFO:wptrec.save:data\metric-tables\task2-eval-occ-target.csv.gz: 14.69 KiB INFO:wptrec.save:saving Parquet to data\metric-tables\task2-eval-occ-target.parquet INFO:wptrec.save:data\metric-tables\task2-eval-occ-target.parquet: 37.48 KiBC.8 Remaining AttributesThe remaining attributes don't need any further processing, as they are completely known.qr age align = qr join(age align).multiply(qp exp, axis='rows') qr age tgt = norm dist df(qr age align.groupby('topic id').sum()) output.save table(qr age tgt, f'task2-{DATA MODE}-age-target', parquet=True)['sub-geo', 'src-geo', 'gender']    And a list of dimensions to use as-is:</figDesc><table coords="59,72.00,271.75,541.50,404.48"><row><cell>187 270</cell><cell>da = metrics.discount(tot) 758.390795 0.000309 19.328449 0.001724 0.000190 0.001045</cell><cell cols="2">59.318134 0.000168</cell><cell>21.122305</cell></row><row><cell>270 359</cell><cell cols="4">qwp = qwc.shift(1, fill value=0) 967.129024 0.000233 69.231601 Eastern Africa Eastern Asia Eastern Europe Middle Africa \ 59.217295 23.466741 0.007293 0.000094 0.000495 0.000071</cell></row><row><cell cols="2">qwc s = qwc.cumsum() 641.628435 topic_id 359 365 0.003116 0.000089 0.000220 59.452325 0.000365</cell><cell cols="2">50.316697 0.000151</cell><cell>12.890808</cell></row><row><cell cols="5">qwp s = qwp.cumsum() res = pd.Series( [np.mean(da[s:e]) for (s, e) in zip(qwp s, qwc s)], index=qwc.index ) return res 481.821710 0.000148 18.649567 31.101461 2137.392223 0.000465 39.636681 106.665337 Eastern Africa Eastern Asia Eastern Europe Middle Africa \ 9.853304 28.905838 topic_id 365 400 187 109.070472 538.041050 160.059755 39.543253 270 147.703296 423.954414 216.488611 39.756533 187 76.133518 368.324160 91.512896 27.292950 270 62.403539 291.840082 76.966103 400 0.020481 0.000277 0.002385 0.001815 raw dims = [ 21.889625 359 55.966959 288.368964 44.738826 20.314799 365 40.687112 195.637555 43.383442 18.290350 400 124.063329 603.794372 146.012407 44.342043 Northern Africa ... Northern Europe Oceania South America \ DR(d.name, d.page align xr) computer scientist ... military personnel musician \ topic_id for d in dimensions ... 187 0.000127 ... if d.name not in dim backgrounds 0.003020 0.001195 270 0.000015 ... ] 0.001331 0.000621 359 0.000000 ... [d.name for d in raw dims] 0.002207 0.001371 We'll then apply this to each topic, to determine the per-topic target exposures: qw pp target = qwork.groupby('topic id').apply(qw tgt exposure) 359 74.364014 418.392361 59.464259 27.060083 365 53.778891 251.973232 88.152130 28.231344 topic_id ... 187 43.321614 ... 518.410807 53.513703 92.059446 365 0.000024 ... 0.001284 0.000451 400 0.000278 ... 0.002132 0.011309 ['occ</cell></row><row><cell cols="3">qw pp target.name = 'tgt exposure' 400 168.787290 825.397926 270 34.559267 ... 175.354880 224.909498 40.800385</cell><cell cols="2">61.032641 81.370613</cell></row><row><cell cols="4">qw pp target 359 performing artist physicist politician scientist \ 31.459874 ... 27.303292 12.455743</cell><cell>62.663487</cell></row><row><cell cols="5">def avg with bg(tm, verbose=False): tm = tm.copy() Northern Africa ... Northern Europe 365 22.941681 ... 51.127647 topic_id C:\Users\michaelekstrand\scoop\apps\mambaforge\current\envs\wptrec\lib\site-packages\numpy\core\fromnume Oceania South America \ 29.052902 48.157030 topic_id ... 400 71.306778 ... 564.339012 159.334304 158.261887 187 0.000999 0.000467 0.009501 0.010534 return _methods._mean(a, axis=axis, dtype=dtype, 187 70.002691 ... 629.703684 93.268184 144.134466 270 0.001608 0.000035 0.003671 0.000428 C:\Users\michaelekstrand\scoop\apps\mambaforge\current\envs\wptrec\lib\site-packages\numpy\core\_methods 270 68.587236 ... 234.564466 82.918686 151.424207 South-eastern Asia Southern Africa Southern Asia Southern Europe \ 359 0.004169 0.000014 0.002663 0.000054 ret = ret.dtype.type(ret / rcount) 359 41.801031 ... 23.286746 19.606259 102.636117 topic_id 365 0.002861 0.000000 0.001718 0.000100</cell></row><row><cell cols="5"># then impute that where we don't have mass tm imputed = xr.where(tail mass &gt; 0, tm, tail marg) # and re-compute the tail mass tail mass = tm imputed.sum(tail names) # and finally we compute the rescaled matrix tail scale = tm imputed / tail mass 36.627649 ... 70.381866 38.938076 137.914296 14.561724 383.654770 0.133634 0.000404 0.007652 0.003079 topic_id quality 365 187 400 187 Stub 400 101.411871 ... 623.047574 189.240030 270 104.008024 13.928225 291.129055 0.075443 Start 359 93.284401 9.119594 262.223930 social scientist sportsperson (non-athlete) \ 0.065321 C South-eastern Asia Southern Africa Southern Asia Southern Europe \ 88.112552 94.527498 250.638365 74.411532 24.364869 365 91.720399 6.467410 185.621213 93.737043 topic_id 0.063307 B topic_id 400 220.074822 27.370868 631.930727 129.760455 187 0.004196 0.000352 0.062546 GA 187 206.460548 22.555736 554.706743 289.109630 270 0.000431 0.013288 0.062307 270 154.497647 35.594573 402.112346 174.454966 Western Africa Western Asia Western Europe 359 0.000069 0.047321 ... 2872 Start 359 124.679452 12.871306 348.961634 36.449902 topic_id 365 0.000131 0.106472 0.062570 C 365 128.244847 9.595809 242.239786 158.985835 187 67.295433 64.363892 158.997834 400 0.003482 0.001700 0.061352 B 400 297.782968 44.412480 820.697054 224.451157 270 54.628367 45.613038 244.158227 0.060958 GA 359 49.612454 37.221849 34.950278 transportation occupation writer 0.060853 FA Western Africa Western Asia Western Europe 365 35.679642 47.403614 70.055359 topic_id 0.060827 topic_id 400 111.504376 103.379965 207.421067 187 0.000268 0.012910 Name: tgt_exposure, Length: 300, dtype: float32 187 97.058510 112.506820 279.935254 270 0.000434 0.001255 We can now merge the relevant document work categories with this exposure, to compute the target 270 106.516209 91.341129 224.075828 [5 rows x 21 columns] 359 0.000085 0.002104 exposure for each relevant document: 359 66.136114 49.743391 42.552754 365 0.000160 0.001281 del tm imputed for case in avg cases: # for deugging: get names if verbose: 954 0.063307 qr sub geo tgt = norm dist df(qr sub geo tgt) print('processing known:', known names) 187 682 0.062546 These are not distributions, let's fix that! topic_id page_id known names = [d.name for (d, known) in zip(avg dims, case) if known] 365 58.330269 70.821535 78.130276 400 0.000531 0.262259 qp exp = qpw.join(qw pp target, on=['topic id', 'quality']) 400 154.170802 152.891150 466.963698 qp exp = qp exp.set index(['topic id', 'page id'])['tgt exposure'] [5 rows x 21 columns] qp exp [5 rows x 32 columns]</cell></row><row><cell cols="5"># Step 1: background 1170 0.063307 1315 output.save table(qr sub geo tgt, f'task2-{DATA MODE}-sub-geo-target', parquet=True) 0.062546 bg = reduce(operator.mul, [ 1322 0.062546 d.background for (d, known) in zip(avg dims, case) ... 2872 69877511 C.6 Gender 0.071035 if known 69878912 0.061352 ]) 69879322 0.062570 if not np.allclose(bg.sum(), 1.0): warnings.warn('background distribution for {} sums to {}, expected 1'.format(known names, bg 69881345 0.071035 69883661 qr gender align = qr join(gender align) 0.062570 Name: tgt_exposure, Length: 2737612, dtype: float32 qr gender align.head()</cell></row></table><note coords="59,92.92,307.62,201.06,9.96;59,92.92,331.53,324.28,9.96;59,92.92,343.48,153.98,9.96;59,92.92,367.39,502.12,9.96;59,92.92,379.35,271.98,9.96;59,92.92,391.30,94.15,9.96;59,92.92,403.26,237.67,9.96;71,72.00,663.67,141.24,10.38;71,72.00,682.64,169.01,9.96;76,72.00,536.86,31.38,9.96"><p><p><p>tail names = [d.name for d in raw dims] # compute the tail mass for each coordinate (can be done once) tail mass = tm.sum(tail names) # now some things don't have any mass, but we still need to distribute background distributions. # solution: we impute the marginal tail distribution # first compute it tail marg = tm.sum([d.name for d in avg dims])</p>C.5 Source Geography</p>Source geography works the same way. output</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_19" coords="79,92.92,166.15,520.58,524.03"><head></head><label></label><figDesc>avg with bg(tm, verbose=False): tm = tm.copy() tail names = [d.name for d in raw dims] # compute the tail mass for each coordinate (can be done once) tail mass = tm.sum(tail names) # now some things don't have any mass, but we still need to distribute background distributions. # solution: we impute the marginal tail distribution # first compute it tail marg = tm.sum([d.name for d in avg dims]) # then impute that where we don't have mass tm imputed = xr.where(tail mass &gt; 0, tm, tail marg) # and re-compute the tail mass tail mass = tm imputed.sum(tail names) # and finally we compute the rescaled matrix tail scale = tm imputed / tail mass del tm imputed if not np.allclose(bg.sum(), 1.0): warnings.warn('background distribution for {} sums to {}, expected 1'.format(known names, bg</figDesc><table coords="79,113.84,441.12,245.83,201.24"><row><cell>if verbose:</cell></row><row><cell>print('processing known:', known names)</cell></row><row><cell># Step 1: background</cell></row><row><cell>bg = reduce(operator.mul, [</cell></row><row><cell>d.background</cell></row><row><cell>for (d, known) in zip(avg dims, case)</cell></row><row><cell>if known</cell></row><row><cell>])</cell></row><row><cell># Step 2: selector</cell></row><row><cell>sel = case selector(case)</cell></row><row><cell># Steps 3: sum in preparation for normalization</cell></row><row><cell>c sum = tm[sel].sum()</cell></row></table><note coords="79,92.92,405.25,113.60,9.96;79,113.84,417.21,130.76,9.96;79,113.84,429.16,357.97,9.96;79,113.84,656.31,162.14,9.96;79,113.84,668.26,204.82,9.96;79,113.84,680.22,221.98,9.96"><p>for case in avg cases: # for deugging: get names known names = [d.name for (d, known) in zip(avg dims, case) if known] # Step 5: spread the background bg spread = bg * tail scale[sel] * c sum if not np.allclose(bg spread.sum(), c sum):</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0" coords="1,87.24,675.47,173.60,6.71"><p>https://en.wikipedia.org/wiki/WikiProject</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1" coords="3,87.24,680.27,195.77,6.71"><p>https://www.globus.org/globus-connect-personal</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2" coords="4,87.24,623.57,199.50,6.71"><p>https://creativecommons.org/licenses/by-sa/3.0/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3" coords="5,87.24,684.62,414.89,7.26"><p>For more information, see: https://public.paws.wmcloud.org/User:Isaac_(WMF)/TREC/TREC_2022_Data.ipynb</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4" coords="7,87.24,668.57,434.01,7.26"><p>Obtained from https://en.wikipedia.org/wiki/List_of_continents_and_continental_subregions_by_population</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5" coords="14,87.24,675.16,21.40,7.04;14,127.80,675.71,412.21,6.71;14,72.00,685.17,101.62,6.71"><p>Code: https://github.com/geohci/miscellaneous-wikimedia/blob/master/wikidata-properties-spark/wikidata_ gender_information.ipynb</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_6" coords="17,87.24,596.71,258.28,6.71"><p>https://www.wikidata.org/wiki/Property_talk:P21#Documentation</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_7" coords="17,87.24,606.21,220.17,6.71"><p>https://www.wikidata.org/wiki/Wikidata:Living_people</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_8" coords="17,87.24,615.72,300.63,6.71;17,87.24,625.22,262.52,6.71;17,87.24,634.17,374.36,7.26;17,87.24,644.23,228.64,6.71;17,87.24,653.73,220.17,6.71;17,87.24,663.24,195.77,6.71;17,87.24,672.74,208.47,6.71;17,87.24,681.70,268.73,7.26"><p>https://en.wikipedia.org/wiki/Wikipedia:Manual_of_Style/Gender_identity https://www.wikidata.org/wiki/Wikidata:WikiProject_LGBT/gender Code: https://github.com/geohci/wiki-region-groundtruth/blob/main/wiki-region-data.ipynb https://en.wikipedia.org/wiki/United_Nations_geoscheme https://www.wikidata.org/wiki/Wikidata:Verifiability https://humaniki.wmcloud.org/gender-by-country https://github.com/geohci/wiki-region-groundtruth See code for more details: https://github.com/geohci/geo-provenance</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="23" xml:id="foot_9" coords="19,87.24,651.48,452.76,7.26;19,72.00,661.49,211.71,6.71"><p>Current Wikiproject tags were extracted from the database tables maintained by the PageAssessments extension: https: //www.mediawiki.org/wiki/Extension:PageAssessments</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="24" xml:id="foot_10" coords="19,87.24,670.45,106.29,7.04;19,209.74,671.00,330.26,6.71;19,72.00,680.46,119.05,6.71"><p>For further details, see: https://meta.wikimedia.org/wiki/Research:Prioritization_of_Wikipedia_Articles/ Language-Agnostic_Quality#V2</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Page Alignments</head><p>This notebook computes the page alignments from the Wikipedia metadata. These are then used by the task-specific alignment notebooks to compute target distributions and page alignment subsets for retrieved pages.</p><p>Warning: this notebook takes quite a bit of memory to run.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.1 Setup</head><p>We begin by loading necessary libraries: And set up an output directory:</p><p>from wptrec.save import OutRepo output = OutRepo('data/metric-tables')</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 Loading Data</head><p>Now we need to load the data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2.1 Static Data</head><p>We need a set of subregions that are folded into Oceania: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.5 Working with Alignments</head><p>At this point, we have computed an alignment matrix for each of our attributes, and extracted the qrels. We will use the data saved from this in separate notebooks to compute targets and alignments for tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B Task 1 Alignment</head><p>This notebook computes the target distributions and retrieved page alignments for Task 1. It depends on the output of the PageAlignments notebook. This notebook can be run in two modes: 'train', to process the training topics, and 'eval' for the eval topics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DATA MODE = 'eval'</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.1 Setup</head><p>We begin by loading necessary libraries: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.3 Prep Overview</head><p>Now that we have our alignments and qrels, we are ready to prepare the Task 1 metrics.</p><p>We're first going to prepare the target distributions; then we will compute the alignments for the retrieved pages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.4 Subject Geography</head><p>Subject geography targets the average of the relevant set alignments and the world population. For purely geographic fairness, we just need to average the unknowns with the world pop:</p><p>qr sub geo tgt = qr sub geo align.groupby('topic id' And a list of dimensions to use as-is: <ref type="bibr" coords="51,98.15,419.82,177.83,9.96">', 'alpha', 'age', 'pop', 'langs']</ref> Now: these dimension are in the original order -dimensions has the averaged dimensions before the non-averaged ones. This is critical for the rest of the code to work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.8.2 Demo</head><p>To demonstrate how the logic works, let's first work it out in cells for one query <ref type="bibr" coords="51,424.18,497.00,11.62,9.96">(1)</ref>.</p><p>What are its documents? * page (page) int64 682 954 1170 1315 ... 69891122 69891390 69892653 * sub-geo (sub-geo) object '@UNKNOWN' 'Antarctica' ... 'Western Europe' * src-geo (src-geo) object '@UNKNOWN' 'Antarctica' ... 'Western Europe' * gender (gender) object '@UNKNOWN' 'female' 'male' 'NB'</p><p>We can similarly do this for the dimensions without targets: Now, we need to combine this with the other matrix to produce a complete alignment matrix, which we then will collapse into a query target matrix. However, we don't have memory to do the whole thing at one go. Therefore, we will do it page by page.</p><p>The mean outer function does this: from wptrec.dimension import mean outer q tam = mean outer(q xta, q raw xta) q tam [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],</p><p>[[0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],</p><p>[[0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],</p><p>[[0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0. In 2021, we ignored fully-unknown for Task 1. However, it isn't clear hot to properly do that with some attributes that are never fully unknown -they still need to be counted. Therefore, we consistently treat fully-unknown as a distinct category for both Task 1 and Task 2 metrics.</p><p>Data Subsetting Before we average, we need to be able to select data by its known/unknown status.</p><p>Let's start by making a list of cases -the known/unknown status of each dimension.  <ref type="bibr" coords="58,213.22,480.97,240.60,9.96;58,82.46,492.92,26.15,9.96;58,140.00,492.92,26.15,9.96">2001-2006' '2007-2011' '2012-2016' '2017-2022' * pop (pop)</ref> object 'High' 'Low' 'Medium-High' 'Medium-Low' * langs (langs) object '2-4 languages' '5+ languages' 'English only'</p><p>Fantastic! Given a case (known and unknown statuses), we can select the subset of the target matrix with exactly those.</p><p>Averaging Ok, now we have to -very carefully -average with our target modifier. For each dimension that is not fully-unknown, we average with the intersectional target defined over the known dimensions.</p><p>At all times, we also need to respect the fraction of the total it represents. We'll use the selection capabilities above to handle this. First, let's make sure that our target matrix sums to 1 to start with:  <ref type="bibr" coords="60,98.15,551.13,141.22,9.96">([[[[[[[[3.90778732e-05, 9.</ref> We can unravel this value into a single-dimensional array representing the multidimensional target:</p><p>q target.values.ravel()</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.8.4 Computing Query Targets</head><p>Now with that function, we can compute the alignment vector for each query. Extract queries into a dictionary: queries = { t: df['page id'].values for (t, df) in qrels.groupby('topic id') } Make an index that we'll need later for setting up the XArray dimension: q ids = pd.Index(queries.keys(), name='topic id') q ids Int64Index <ref type="bibr" coords="63,124.30,577.06,350.43,9.96;63,140.00,589.01,334.74,9.96;63,134.76,600.97,339.97,9.96;63,134.76,612.92,339.97,9.96;63,134.76,624.88,183.06,9.96">([ 187, 270, 359, 365, 400, 404, 480, 517, 568, 596, 715, 807, 834, 881, 883, 949, 951, 955, 995, 1018, 1180, 1233, 1328, 1406, 1417, 1448, 1449, 1479, 1499, 1548, 1558, 1647, 1685, 1806, 1821, 1877, 1884, 1890, 2000, 2028, 2106, 2153, 2160, 2229, 2244, 2448, 2483, 2758, 2867, 2872]</ref>, dtype='int64', name='topic_id') Now let's create targets for each of these: q tgts = [query xalign <ref type="bibr" coords="63,184.14,680.67,57.53,9.96">(queries[q]</ref>) for q in tqdm(q ids)]</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.1 Setup</head><p>We begin by loading necessary libraries: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.2 Data and Helpers</head><p>Most data loading is outsourced to MetricInputs. First we save the data mode where metric inputs can find it: [&lt;dimension "sub-geo": 21 levels&gt;, &lt;dimension "src-geo": 21 levels&gt;, &lt;dimension "gender": 4 levels&gt;, &lt;dimension "occ": 33 levels&gt;, &lt;dimension "alpha": 4 levels&gt;, &lt;dimension "age": 4 levels&gt;, &lt;dimension "pop": 4 levels&gt;, &lt;dimension "langs": 3 levels&gt;]</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.2.1 qrel join</head><p>We want a function to join alignments with qrels: def qr join(align): return qrels.join(align, on='page id').set index(['topic id', 'page id'])</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.2.2 norm dist</head><p>And a function to normalize to a distribution: def norm dist df(mat): sums = mat.sum('columns') return mat.divide(sums, 'rows')</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.3 Work and Target Exposure</head><p>The first thing we need to do to prepare the metric is to compute the work-needed for each topic's pages, and use that to compute the target exposure for each (relevant) page in the topic. This is because an ideal ranking orders relevant documents in decreasing order of work needed, followed by irrelevant documents. All relevant documents at a given work level should receive the same expected exposure.</p><p>First, look up the work for each query page ('query page work', or qpw): </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.4 Subject Geography</head><p>Subject geography targets the average of the relevant set alignments and the world population.  Int64Index <ref type="bibr" coords="80,124.30,599.42,350.43,9.96;80,140.00,611.38,334.74,9.96;80,134.76,623.34,339.97,9.96;80,134.76,635.29,339.97,9.96;80,134.76,647.25,183.06,9.96">([ 187, 270, 359, 365, 400, 404, 480, 517, 568, 596, 715, 807, 834, 881, 883, 949, 951, 955, 995, 1018, 1180, 1233, 1328, 1406, 1417, 1448, 1449, 1479, 1499, 1548, 1558, 1647, 1685, 1806, 1821, 1877, 1884, 1890, 2000, 2028, 2106, 2153, 2160, 2229, 2244, 2448, 2483, 2758, 2867, 2872]</ref>, dtype='int64', name='topic_id') q tgts = [query xalign <ref type="bibr" coords="80,184.14,681.12,71.76,9.96">(qp exp.loc[q]</ref>) for q in tqdm(q ids)] * occ (occ) object '@UNKNOWN' 'activist' ... 'writer' * alpha (alpha) object 'a-d' 'e-k' 'l-r' 's-' * age (age) object <ref type="bibr" coords="82,213.22,98.40,245.83,9.96;82,82.46,110.36,26.15,9.96;82,145.23,110.36,26.15,9.96">'2001-2006' '2007-2011' '2012-2016' '2017-2022' * pop (pop)</ref>   For 2022, we are using a diffrent version of the metric. Equity of Underexposure looks at each page's underexposure (system exposure is less than target exposure), and looks for underexposure to be equitably distributed between groups.</p><p>On its own, this isn't too difficult; averaging with background distributions, however, gets rather subtle. Background distributions are at the roup level, but we need to propgagate that into the page level, so we can compute the difference between system and target exposure at the page level, and then aggregate the underexposure within each group.</p><p>The idea of equity of underexposure is that we ϵ = E π [η] and ϵ * = E τ [η]. We then compute u = min(ϵ * -ϵ, 0), and restrict it to be negative, and aggregate it by group; if A is our page alignment matrix and ⃗ u, we compute the group underexposure by A T ⃗ u.</p><p>That's the key idea. However, we want to use ϵ † that has the equivalent of averaging group-aggregated ϵ * with global target distributions w g . We can do this in a few stages. First, we compute the total attention of each group This is all on a per-topic basis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.10.1 Demo Topic</head><p>We're going to reuse demo topic data from before:</p><p>Compute the total for each attribute: The massive values are only where we have no relevant items, so they'll never actually be used. We can now compute the query-aligned target matrix.</p><p>qp gt = (q xa * (Wh * qp exp <ref type="bibr" coords="83,214.06,358.25,15.69,9.96">[1]</ref>.sum())).sum(axis= <ref type="bibr" coords="83,323.89,358.25,15.69,9.96">(1,</ref><ref type="bibr" coords="83,339.59,358.25,10.46,9.96" target="#b1">2)</ref>).to series() qp gt.index.name = 'page id' qp gt qp exp <ref type="bibr" coords="83,101.92,403.81,15.69,9.96">[1]</ref> qp tgt = 0.5 * (qp exp <ref type="bibr" coords="83,184.14,425.46,15.69,9.96">[1]</ref> + qp gt) qp tgt</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.10.2 Setting Up Matrix</head><p>Now that we have the math worked out, we can create actual global target frames for each query.  </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct coords="19,87.50,392.27,452.50,9.96;19,87.50,404.23,397.71,9.96" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="19,384.18,392.27,155.82,9.96;19,87.50,404.23,77.99,9.96">Evaluating stochastic rankings with expected exposure</title>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Diaz</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Mitra</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><forename type="middle">D</forename><surname>Ekstrand</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><forename type="middle">J</forename><surname>Biega</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Carterette</surname></persName>
		</author>
		<ptr target="https://arxiv.org/abs/2004.13157" />
	</analytic>
	<monogr>
		<title level="m" coord="19,186.92,404.83,69.37,8.80">Proc. CIKM &apos;20</title>
		<meeting>CIKM &apos;20</meeting>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="19,87.50,424.15,452.50,9.96;19,87.50,436.11,102.14,9.96" xml:id="b1">
	<monogr>
		<title level="m" type="main" coord="19,168.65,424.15,208.39,9.96">Keybert: Minimal keyword extraction with bert</title>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Grootendorst</surname></persName>
		</author>
		<idno type="DOI">10.5281/zenodo.4461265</idno>
		<ptr target="https://doi.org/10.5281/zenodo.4461265" />
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="19,87.50,456.03,452.50,9.96;19,87.50,467.99,452.50,9.96;19,87.50,479.94,452.50,9.96;19,87.50,491.90,171.63,9.96" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="19,386.31,456.03,153.69,9.96;19,87.50,467.99,118.81,9.96">Algorithmic fairness: Choices, assumptions, and definitions</title>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">E</forename><surname>Potash</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Barocas</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>D'amour</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">K</forename><surname>Lum</surname></persName>
		</author>
		<idno type="DOI">10.1146/annurev-statistics-042720-125902</idno>
		<ptr target="https://www.annualreviews.org/doi/abs/10.1146/annurev-statistics-042720-125902" />
	</analytic>
	<monogr>
		<title level="j" coord="19,221.69,468.59,217.71,8.80">Annual Review of Statistics and Its Application</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<date type="published" when="2020-11">Nov. 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="19,87.50,511.82,452.50,9.96;19,87.50,523.78,452.51,9.96" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="19,268.38,511.82,147.23,9.96">Discrimination-aware data mining</title>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Pedreshi</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Ruggieri</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Turini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="19,438.79,512.43,101.21,8.80;19,87.50,524.39,353.89,8.80">Proceedings of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining</title>
		<meeting>the 14th ACM SIGKDD international conference on Knowledge discovery and data mining</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="560" to="568" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="19,87.50,543.70,452.50,9.96;19,87.50,555.66,452.50,9.96;19,87.50,567.61,22.69,9.96" xml:id="b4">
	<monogr>
		<title level="m" type="main" coord="19,308.53,543.70,231.47,9.96;19,87.50,555.66,293.20,9.96">Much ado about gender: Current practices and future recommendations for appropriate gender-aware information access</title>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Pinney</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Raj</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Hanna</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><forename type="middle">D</forename><surname>Ekstrand</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2301.04780</idno>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct coords="19,87.50,587.54,452.50,9.96;19,87.50,599.49,164.91,9.96" xml:id="b5">
	<monogr>
		<title level="m" type="main" coord="19,320.10,587.54,136.40,9.96">Comparing fair ranking metrics</title>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Raj</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Wood</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Montoly</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><forename type="middle">D</forename><surname>Ekstrand</surname></persName>
		</author>
		<ptr target="http://arxiv.org/abs/2009.01311" />
		<imprint>
			<date type="published" when="2020-09">Sept. 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="19,87.50,619.42,452.50,9.96;19,87.50,631.37,277.29,9.96" xml:id="b6">
	<monogr>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Redi</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Gerlach</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">I</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Morgan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">L</forename><surname>Zia</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2008.12314</idno>
		<title level="m" coord="19,340.64,619.42,199.35,9.96;19,87.50,631.37,34.40,9.96">A taxonomy of knowledge gaps for wikimedia projects</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>second draft</note>
</biblStruct>

<biblStruct coords="20,87.50,74.49,452.50,9.96;20,87.50,86.45,452.50,9.96;20,87.50,98.40,166.83,9.96" xml:id="b7">
	<analytic>
		<title level="a" type="main" coord="20,403.50,74.49,136.50,9.96;20,87.50,86.45,222.40,9.96">Quantifying the impact of user attentionon fair group representation in ranked lists</title>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Sapiezynski</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Mislove</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Wilson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="20,328.60,87.05,211.39,8.80;20,87.50,99.01,68.06,8.80">Companion Proceedings of The 2019 World Wide Web Conference</title>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="553" to="562" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="20,87.50,118.33,452.50,9.96;20,87.50,130.28,113.46,9.96" xml:id="b8">
	<monogr>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Tripodi</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Ms</surname></persName>
		</author>
		<title level="m" coord="20,212.48,118.33,300.55,9.96">Gender, notability, and inequality on wikipedia. New Media &amp; Society</title>
		<imprint>
			<date type="published" when="2021">2021</date>
			<biblScope unit="page">14614448211023772</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="29,349.21,110.36,10.46,9.96;29,417.20,110.36,15.69,9.96;29,87.69,134.27,402.74,9.96;29,145.23,146.22,15.69,9.96;29,228.91,146.22,15.69,9.96;29,317.83,146.22,15.69,9.96;29,459.05,146.22,15.69,9.96;29,145.23,158.18,15.69,9.96;29,228.91,158.18,15.69,9.96;29,317.83,158.18,15.69,9.96;29,459.05,158.18,15.69,9.96;29,145.23,170.13,15.69,9.96;29,228.91,170.13,15.69,9.96;29,317.83,170.13,15.69,9.96;29,459.05,170.13,15.69,9.96;29,145.23,182.09,15.69,9.96;29,228.91,182.09,15.69,9.96;29,317.83,182.09,15.69,9.96;29,459.05,182.09,15.69,9.96;29,145.23,194.04,15.69,9.96;29,228.91,194.04,15.69,9.96;29,317.83,194.04,15.69,9.96;29,459.05,194.04,15.69,9.96;29,87.69,217.95,360.89,9.96;29,150.46,229.91,41.84,9.96;29,255.06,229.91,15.69,9.96;29,312.60,229.91,15.69,9.96;29,417.20,229.91,15.69,9.96;29,150.46,241.86,41.84,9.96;29,255.06,241.86,15.69,9.96;29,312.60,241.86,15.69,9.96;29,417.20,241.86,15.69,9.96;29,150.46,253.82,41.84,9.96;29,255.06,253.82,15.69,9.96;29,312.60,253.82,15.69,9.96;29,417.20,253.82,15.69,9.96;29,150.46,265.77,41.84,9.96;29,255.06,265.77,15.69,9.96;29,312.60,265.77,15.69,9.96;29,417.20,265.77,15.69,9.96;29,150.46,277.73,41.84,9.96;29,255.06,277.73,15.69,9.96;29,312.60,277.73,15.69,9.96;29,417.20,277.73,15.69,9.96;29,87.69,301.64,366.13,9.96;29,134.76,313.59,15.69,9.96;29,192.30,313.59,15.69,9.96;29,281.21,313.59,15.69,9.96;29,359.67,313.59,15.69,9.96;29,422.43,313.59,15.69,9.96;29,134.76,325.55,15.69,9.96;29,192.30,325.55,15.69,9.96;29,281.21,325.55,15.69,9.96;29,359.67,325.55,15.69,9.96;29,422.43,325.55,15.69,9.96;29,134.76,337.50,15.69,9.96;29,192.30,337.50,15.69,9.96;29,281.21,337.50,15.69,9.96;29,359.67,337.50,15.69,9.96;29,422.43,337.50,15.69,9.96;29,134.76,349.46,15.69,9.96;29,192.30,349.46,15.69,9.96;29,281.21,349.46,15.69,9.96;29,359.67,349.46,15.69,9.96;29,422.43,349.46,15.69,9.96;29,134.76,361.42,15.69,9.96;29,192.30,361.42,15.69,9.96;29,281.21,361.42,15.69,9.96;29,359.67,361.42,15.69,9.96;29,422.43,361.42,15.69,9.96;29,87.69,385.33,109.84,9.96;29,119.07,397.28,15.69,9.96;29,181.84,397.28,15.69,9.96;29,119.07,409.24,15.69,9.96;29,181.84,409.24,15.69,9.96;29,119.07,421.19,15.69,9.96;29,181.84,421.19,15.69,9.96;29,119.07,433.15,15.69,9.96;29,181.84,433.15,15.69,9.96;29,119.07,445.10,15.69,9.96;29,181.84,445.10,15.69,9.96;29,72.00,469.01,109.84,9.96;29,86.94,490.22,75.00,9.96;29,72.00,511.42,215.28,9.96;29,86.94,532.63,286.78,9.96;29,72.00,553.84,285.58,9.96;29,72.00,565.79,334.12,9.96" xml:id="b9">
	<monogr>
		<title level="m" type="main" coord="29,86.94,490.22,75.00,9.96;29,72.00,511.42,215.28,9.96;29,86.94,532.63,286.78,9.96;29,72.00,553.84,115.91,9.96">Set up the index: src geo.set index(&apos;page id&apos;, inplace=True) Expand, then put 1 in UNKNOWN for everything that&apos;s missing: src geo align = src geo</title>
		<idno>NaN 3.0 2.0 NaN NaN 5.0 NaN NaN NaN 1.0</idno>
		<editor>NaN NaN NaN 4.0 NaN NaN NaN Central America ... Southern Asia Polynesia South-eastern Asia \ NaN ... NaN NaN NaN NaN ... NaN NaN NaN NaN ... NaN NaN NaN NaN ... NaN NaN NaN NaN ..</editor>
		<imprint>
			<pubPlace>NaN NaN NaN Central Asia Caribbean Southern Africa Middle Africa Antarctica \ NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN Melanesia Micronesia NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN</pubPlace>
		</imprint>
		<respStmt>
			<orgName>NaN Western Europe Western Africa Southern Europe Australia and New Zealand \ NaN NaN NaN</orgName>
		</respStmt>
	</monogr>
	<note>5 rows x 25 columns. reindex(all pages, fill value=0) src geo align.loc[src geo align.sum(&apos;columns&apos;) == 0, UNKNOWN</note>
</biblStruct>

<biblStruct coords="29,338.75,658.73,10.46,9.96;29,406.74,658.73,15.69,9.96;29,72.00,670.69,15.69,9.96;29,192.30,670.69,15.69,9.96;29,244.60,670.69,15.69,9.96;29,333.52,670.69,15.69,9.96;29,406.74,670.69,15.69,9.96;29,192.30,682.64,15.69,9.96;29,244.60,682.64,15.69,9.96;29,333.52,682.64,15.69,9.96;29,406.74,682.64,15.69,9.96;30,192.30,74.49,15.69,9.96;30,244.60,74.49,15.69,9.96;30,333.52,74.49,15.69,9.96;30,406.74,74.49,15.69,9.96;30,192.30,86.45,15.69,9.96;30,244.60,86.45,15.69,9.96;30,333.52,86.45,15.69,9.96;30,406.74,86.45,15.69,9.96;30,192.30,98.40,15.69,9.96;30,244.60,98.40,15.69,9.96;30,333.52,98.40,15.69,9.96;30,406.74,98.40,15.69,9.96;30,192.30,110.36,15.69,9.96;30,244.60,110.36,15.69,9.96;30,333.52,110.36,15.69,9.96;30,406.74,110.36,15.69,9.96;30,124.30,134.27,261.52,9.96;30,181.84,146.22,15.69,9.96;30,265.52,146.22,15.69,9.96;30,354.44,146.22,15.69,9.96;30,181.84,158.18,15.69,9.96;30,265.52,158.18,15.69,9.96;30,354.44,158.18,15.69,9.96;30,181.84,170.13,15.69,9.96;30,265.52,170.13,15.69,9.96;30,354.44,170.13,15.69,9.96;30,181.84,182.09,15.69,9.96;30,265.52,182.09,15.69,9.96;30,354.44,182.09,15.69,9.96;30,181.84,194.04,15.69,9.96;30,265.52,194.04,15.69,9.96;30,354.44,194.04,15.69,9.96;30,72.00,206.00,15.69,9.96;30,181.84,206.00,15.69,9.96;30,265.52,206.00,15.69,9.96;30,354.44,206.00,15.69,9.96;30,181.84,217.95,15.69,9.96;30,265.52,217.95,15.69,9.96;30,354.44,217.95,15.69,9.96;30,181.84,229.91,15.69,9.96;30,265.52,229.91,15.69,9.96;30,354.44,229.91,15.69,9.96;30,181.84,241.86,15.69,9.96;30,265.52,241.86,15.69,9.96;30,354.44,241.86,15.69,9.96;30,181.84,253.82,15.69,9.96;30,265.52,253.82,15.69,9.96;30,354.44,253.82,15.69,9.96;30,181.84,265.77,15.69,9.96;30,265.52,265.77,15.69,9.96;30,354.44,265.77,15.69,9.96;30,124.30,289.68,334.74,9.96;30,239.37,301.64,15.69,9.96;30,328.29,301.64,15.69,9.96;30,401.51,301.64,41.84,9.96;30,239.37,313.59,15.69,9.96;30,328.29,313.59,15.69,9.96;30,401.51,313.59,41.84,9.96;30,239.37,325.55,15.69,9.96;30,328.29,325.55,15.69,9.96;30,401.51,325.55,41.84,9.96;30,239.37,337.50,15.69,9.96;30,328.29,337.50,15.69,9.96;30,401.51,337.50,41.84,9.96;30,239.37,349.46,15.69,9.96;30,328.29,349.46,15.69,9.96;30,401.51,349.46,41.84,9.96;30,72.00,361.42,15.69,9.96;30,239.37,361.42,15.69,9.96;30,328.29,361.42,15.69,9.96;30,401.51,361.42,41.84,9.96;30,239.37,373.37,15.69,9.96;30,328.29,373.37,15.69,9.96;30,401.51,373.37,41.84,9.96;30,239.37,385.33,15.69,9.96;30,328.29,385.33,15.69,9.96;30,401.51,385.33,41.84,9.96;30,239.37,397.28,15.69,9.96;30,328.29,397.28,15.69,9.96;30,401.51,397.28,41.84,9.96" xml:id="b10">
	<monogr>
		<title level="m" type="main" coord="30,333.52,86.45,15.69,9.96;30,406.74,86.45,15.69,9.96;30,192.30,98.40,15.69,9.96;30,244.60,98.40,15.69,9.96;30,333.52,98.40,15.69,9.96;30,406.74,98.40,15.69,9.96;30,192.30,110.36,15.69,9.96;30,244.60,110.36,15.69,9.96;30,333.52,110.36,15.69,9.96;30,406.74,110.36,15.69,9.96;30,124.30,134.27,261.52,9.96;30,181.84,146.22,15.69,9.96;30,265.52,146.22,15.69,9.96;30,354.44,146.22,15.69,9.96;30,181.84,158.18,15.69,9.96;30,265.52,158.18,15.69,9.96;30,354.44,158.18,15.69,9.96;30,181.84,170.13,15.69,9.96;30,265.52,170.13,15.69,9.96;30,354.44,170.13,15.69,9.96;30,181.84,182.09,15.69,9.96;30,265.52,182.09,15.69,9.96;30,354.44,182.09,15.69,9.96;30,181.84,194.04,5.23,9.96">NaN NaN NaN 2.0 NaN NaN 8.0 NaN NaN NaN Western Europe Western Africa Southern Europe \ NaN NaN NaN 3.0 2.0 NaN 5.0 NaN NaN 1.0 NaN NaN 4</title>
		<author>
			<orgName type="collaboration" coords="30,187.07,194.04,10.46,9.96;30,265.52,194.04,15.69,9.96;30,354.44,194.04,15.69,9.96;30,72.00,206.00,15.69,9.96;30,181.84,206.00,15.69,9.96;30,265.52,206.00,15.69,9.96;30,354.44,206.00,10.46,9.96;30,197.53,289.68,261.52,9.96;30,239.37,301.64,15.69,9.96;30,328.29,301.64,15.69,9.96;30,401.51,301.64,41.84,9.96;30,239.37,313.59,15.69,9.96;30,328.29,313.59,15.69,9.96;30,401.51,313.59,41.84,9.96;30,239.37,325.55,15.69,9.96;30,328.29,325.55,15.69,9.96;30,401.51,325.55,41.84,9.96;30,239.37,337.50,15.69,9.96;30,328.29,337.50,15.69,9.96;30,401.51,337.50,41.84,9.96;30,239.37,349.46,15.69,9.96;30,328.29,349.46,15.69,9.96;30,401.51,349.46,41.84,9.96;30,72.00,361.42,15.69,9.96;30,239.37,361.42,15.69,9.96;30,328.29,361.42,15.69,9.96;30,401.51,361.42,41.84,9.96;30,239.37,373.37,15.69,9.96;30,328.29,373.37,15.69,9.96;30,401.51,373.37,15.69,9.96">.0 NaN NaN ... ... ... .. ; New Zealand Central America Eastern Asia ... \ NaN NaN NaN ... NaN NaN NaN ... NaN NaN NaN ... NaN NaN NaN ... NaN NaN NaN ... ... ... ... ... ... NaN NaN NaN</orgName>
		</author>
		<idno>0 NaN ... ... ... ... ... NaN 1.0 NaN NaN NaN 1.0 NaN NaN 7.0 1.0</idno>
		<imprint>
			<pubPlace>NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN Australia; NaN NaN NaN; NaN NaN NaN</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="30,249.83,409.24,5.23,9.96;30,328.29,409.24,15.69,9.96;30,401.51,409.24,41.84,9.96;30,239.37,421.19,15.69,9.96;30,328.29,421.19,15.69,9.96;30,401.51,421.19,41.84,9.96;30,124.30,445.10,319.05,9.96;30,176.61,457.06,15.69,9.96;30,234.14,457.06,15.69,9.96;30,338.75,457.06,15.69,9.96;30,411.97,457.06,15.69,9.96;30,176.61,469.01,15.69,9.96;30,234.14,469.01,15.69,9.96;30,338.75,469.01,15.69,9.96;30,411.97,469.01,15.69,9.96;30,176.61,480.97,15.69,9.96;30,234.14,480.97,15.69,9.96;30,338.75,480.97,15.69,9.96;30,411.97,480.97,15.69,9.96;30,176.61,492.92,15.69,9.96;30,234.14,492.92,15.69,9.96;30,338.75,492.92,15.69,9.96;30,411.97,492.92,15.69,9.96;30,176.61,504.88,15.69,9.96;30,234.14,504.88,15.69,9.96;30,338.75,504.88,15.69,9.96;30,411.97,504.88,15.69,9.96;30,72.00,516.83,15.69,9.96;30,176.61,516.83,15.69,9.96;30,234.14,516.83,15.69,9.96;30,338.75,516.83,15.69,9.96;30,411.97,516.83,15.69,9.96;30,176.61,528.79,15.69,9.96;30,234.14,528.79,15.69,9.96;30,338.75,528.79,15.69,9.96;30,411.97,528.79,15.69,9.96;30,176.61,540.74,15.69,9.96;30,234.14,540.74,15.69,9.96;30,338.75,540.74,15.69,9.96;30,411.97,540.74,15.69,9.96;30,176.61,552.70,15.69,9.96;30,234.14,552.70,15.69,9.96;30,338.75,552.70,15.69,9.96;30,411.97,552.70,15.69,9.96;30,176.61,564.65,15.69,9.96;30,234.14,564.65,15.69,9.96;30,338.75,564.65,15.69,9.96;30,411.97,564.65,15.69,9.96;30,176.61,576.61,15.69,9.96;30,234.14,576.61,15.69,9.96;30,338.75,576.61,15.69,9.96;30,411.97,576.61,15.69,9.96;30,124.30,600.52,350.43,9.96;30,155.69,612.47,15.69,9.96;30,244.60,612.47,15.69,9.96;30,323.06,612.47,15.69,9.96;30,385.82,612.47,15.69,9.96;30,443.36,612.47,15.69,9.96;30,155.69,624.43,15.69,9.96;30,244.60,624.43,15.69,9.96;30,323.06,624.43,15.69,9.96;30,385.82,624.43,15.69,9.96;30,443.36,624.43,15.69,9.96;30,155.69,636.38,15.69,9.96;30,244.60,636.38,15.69,9.96;30,323.06,636.38,15.69,9.96;30,385.82,636.38,15.69,9.96;30,443.36,636.38,15.69,9.96;30,155.69,648.34,15.69,9.96;30,244.60,648.34,15.69,9.96;30,323.06,648.34,15.69,9.96;30,385.82,648.34,15.69,9.96;30,443.36,648.34,15.69,9.96;30,155.69,660.29,15.69,9.96;30,244.60,660.29,15.69,9.96;30,323.06,660.29,15.69,9.96;30,385.82,660.29,15.69,9.96;30,443.36,660.29,15.69,9.96;30,72.00,672.25,15.69,9.96;30,155.69,672.25,15.69,9.96;30,244.60,672.25,15.69,9.96;30,323.06,672.25,15.69,9.96;30,385.82,672.25,15.69,9.96;30,443.36,672.25,15.69,9.96;36,72.00,74.49,387.05,9.96;36,72.00,86.45,371.36,9.96;36,72.00,98.40,413.20,9.96;36,72.00,110.36,350.43,9.96" xml:id="b11">
	<monogr>
		<title level="m" type="main" coord="36,72.00,74.49,387.05,9.96;36,72.00,86.45,277.21,9.96">INFO:wptrec.save:saving CSV to data\metric-tables\page-gender-align.csv.gz INFO:wptrec.save:data\metric-tables\page-gender-align</title>
		<author>
			<orgName type="collaboration" coords="30,338.75,504.88,15.69,9.96;30,411.97,504.88,15.69,9.96;30,72.00,516.83,15.69,9.96;30,176.61,516.83,15.69,9.96;30,234.14,516.83,15.69,9.96;30,338.75,516.83,15.69,9.96;30,411.97,516.83,10.46,9.96;30,385.82,660.29,15.69,9.96;30,443.36,660.29,15.69,9.96;30,72.00,672.25,15.69,9.96;30,155.69,672.25,15.69,9.96;30,244.60,672.25,15.69,9.96;30,323.06,672.25,15.69,9.96;30,385.82,672.25,15.69,9.96;30,443.36,672.25,15.69,9.96">NaN NaN ... ... ... ... .. ; NaN NaN ... ... ... ... ... ...</orgName>
		</author>
		<editor>0 NaN NaN ... NaN NaN NaN ... Southern Asia Polynesia South-eastern Asia Central Asia \ NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN</editor>
		<imprint>
			<biblScope unit="page">33</biblScope>
			<pubPlace>NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN Caribbean Southern Africa Middle Africa Antarctica Melanesia \ NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN</pubPlace>
		</imprint>
	</monogr>
	<note>csv.gz: 18.80 MiB INFO:wptrec.save:saving Parquet to data\metric-tables\page-gender-align.parquet INFO:wptrec.save:data\metric-tables\page-gender-align.parquet: 9</note>
</biblStruct>

<biblStruct coords="36,427.66,110.36,15.69,9.96;36,72.00,136.89,94.76,8.77;36,72.00,154.64,293.07,9.96;36,86.94,166.60,90.27,9.96;36,72.00,188.51,441.65,9.96;36,72.00,200.47,82.22,9.96;36,72.00,222.39,15.69,9.96;36,119.07,222.39,313.82,9.96;36,72.00,234.34,36.61,9.96;36,72.00,246.30,15.69,9.96;36,145.23,246.30,15.69,9.96;36,255.06,246.30,15.69,9.96;36,296.91,246.30,15.69,9.96;36,343.98,246.30,15.69,9.96;36,401.51,246.30,15.69,9.96;36,72.00,258.25,15.69,9.96;36,145.23,258.25,15.69,9.96;36,255.06,258.25,15.69,9.96;36,296.91,258.25,15.69,9.96;36,343.98,258.25,15.69,9.96;36,401.51,258.25,15.69,9.96;36,72.00,270.21,15.69,9.96;36,145.23,270.21,15.69,9.96;36,255.06,270.21,15.69,9.96;36,296.91,270.21,15.69,9.96;36,343.98,270.21,15.69,9.96;36,401.51,270.21,15.69,9.96;36,72.00,282.16,15.69,9.96;36,145.23,282.16,15.69,9.96;36,255.06,282.16,15.69,9.96;36,296.91,282.16,15.69,9.96;36,343.98,282.16,15.69,9.96;36,401.51,282.16,15.69,9.96;36,72.00,294.12,15.69,9.96;36,145.23,294.12,15.69,9.96;36,255.06,294.12,15.69,9.96;36,296.91,294.12,15.69,9.96;36,343.98,294.12,15.69,9.96;36,401.51,294.12,15.69,9.96;36,72.00,318.03,15.69,9.96;36,119.07,318.03,287.67,9.96;36,72.00,329.98,36.61,9.96;36,72.00,341.94,15.69,9.96;36,176.61,341.94,15.69,9.96;36,223.68,341.94,15.69,9.96;36,302.14,341.94,15.69,9.96;36,375.36,341.94,15.69,9.96;36,72.00,353.89,15.69,9.96;36,176.61,353.89,15.69,9.96;36,223.68,353.89,15.69,9.96;36,302.14,353.89,15.69,9.96;36,375.36,353.89,15.69,9.96;36,72.00,365.85,15.69,9.96;36,176.61,365.85,15.69,9.96;36,223.68,365.85,15.69,9.96;36,302.14,365.85,15.69,9.96;36,375.36,365.85,15.69,9.96;36,72.00,377.80,15.69,9.96;36,176.61,377.80,15.69,9.96;36,223.68,377.80,15.69,9.96;36,302.14,377.80,15.69,9.96;36,375.36,377.80,15.69,9.96;36,72.00,389.76,15.69,9.96;36,176.61,389.76,15.69,9.96;36,223.68,389.76,15.69,9.96;36,302.14,389.76,15.69,9.96;36,375.36,389.76,15.69,9.96;36,72.00,413.67,15.69,9.96;36,119.07,413.67,292.90,9.96;36,72.00,425.63,36.61,9.96;36,223.68,425.63,15.69,9.96;36,72.00,437.58,15.69,9.96;36,197.53,437.58,41.84,9.96;36,328.29,437.58,15.69,9.96;36,380.59,437.58,15.69,9.96;36,72.00,449.54,15.69,9.96;36,197.53,449.54,41.84,9.96;36,328.29,449.54,15.69,9.96;36,380.59,449.54,15.69,9.96;36,72.00,461.49,15.69,9.96;36,197.53,461.49,41.84,9.96;36,328.29,461.49,15.69,9.96;36,380.59,461.49,15.69,9.96;36,72.00,473.45,15.69,9.96;36,197.53,473.45,41.84,9.96;36,328.29,473.45,15.69,9.96;36,380.59,473.45,15.69,9.96;36,72.00,485.40,15.69,9.96;36,197.53,485.40,41.84,9.96;36,328.29,485.40,15.69,9.96;36,380.59,485.40,15.69,9.96;36,72.00,509.31,15.69,9.96;36,119.07,509.31,282.44,9.96;36,72.00,521.27,36.61,9.96;36,72.00,533.22,15.69,9.96;36,192.30,533.22,15.69,9.96;36,249.83,533.22,15.69,9.96;36,312.60,533.22,15.69,9.96;36,370.13,533.22,15.69,9.96;36,72.00,545.18,15.69,9.96;36,192.30,545.18,15.69,9.96;36,249.83,545.18,15.69,9.96;36,312.60,545.18,15.69,9.96;36,370.13,545.18,15.69,9.96;36,72.00,557.13,15.69,9.96;36,192.30,557.13,15.69,9.96;36,249.83,557.13,15.69,9.96;36,312.60,557.13,15.69,9.96;36,370.13,557.13,15.69,9.96;36,72.00,569.09,15.69,9.96;36,192.30,569.09,15.69,9.96;36,249.83,569.09,15.69,9.96;36,312.60,569.09,15.69,9.96;36,370.13,569.09,15.69,9.96;36,72.00,581.04,15.69,9.96;36,192.30,581.04,15.69,9.96;36,249.83,581.04,15.69,9.96;36,312.60,581.04,15.69,9.96;36,370.13,581.04,15.69,9.96;36,72.00,604.95,15.69,9.96;36,119.07,604.95,245.83,9.96;36,72.00,616.91,36.61,9.96;36,72.00,628.86,15.69,9.96;36,187.07,628.86,15.69,9.96;36,333.52,628.86,15.69,9.96;36,72.00,640.82,15.69,9.96;36,187.07,640.82,15.69,9.96;36,333.52,640.82,15.69,9.96;36,72.00,652.77,15.69,9.96;36,187.07,652.77,15.69,9.96;36,333.52,652.77,15.69,9.96;36,72.00,664.73,15.69,9.96;36,187.07,664.73,15.69,9.96;36,333.52,664.73,15.69,9.96;36,72.00,676.68,15.69,9.96;36,187.07,676.68,15.69,9.96;36,333.52,676.68,15.69,9.96;39,72.00,74.49,41.84,9.96;39,213.22,74.49,15.69,9.96;39,302.14,74.49,47.07,9.96;39,72.00,86.45,41.84,9.96;39,213.22,86.45,15.69,9.96;39,302.14,86.45,47.07,9.96;39,72.00,98.40,41.84,9.96;39,213.22,98.40,15.69,9.96;39,302.14,98.40,47.07,9.96;39,72.00,110.36,41.84,9.96;39,213.22,110.36,15.69,9.96;39,302.14,110.36,47.07,9.96;39,119.07,134.27,261.52,9.96;39,72.00,146.22,36.61,9.96;39,72.00,158.18,10.46,9.96;39,239.37,158.18,20.92,9.96;39,317.83,158.18,62.76,9.96;39,72.00,170.13,10.46,9.96;39,239.37,170.13,20.92,9.96;39,317.83,170.13,62.76,9.96;39,72.00,182.09,10.46,9.96;39,239.37,182.09,20.92,9.96;39,317.83,182.09,62.76,9.96;39,72.00,194.04,15.69,9.96;39,239.37,194.04,20.92,9.96;39,317.83,194.04,62.76,9.96;39,72.00,206.00,15.69,9.96;39,239.37,206.00,20.92,9.96;39,317.83,206.00,62.76,9.96;39,72.00,217.95,15.69,9.96;39,244.60,217.95,15.69,9.96;39,364.90,217.95,15.69,9.96;39,72.00,229.91,41.84,9.96;39,244.60,229.91,15.69,9.96;39,312.60,229.91,68.00,9.96;39,72.00,241.86,41.84,9.96;39,244.60,241.86,15.69,9.96;39,317.83,241.86,62.76,9.96;39,72.00,253.82,41.84,9.96;39,244.60,253.82,15.69,9.96;39,317.83,253.82,62.76,9.96;39,72.00,265.77,41.84,9.96;39,244.60,265.77,15.69,9.96;39,312.60,265.77,68.00,9.96;39,72.00,277.73,41.84,9.96;39,244.60,277.73,15.69,9.96;39,317.83,277.73,62.76,9.96;39,72.00,301.64,135.99,9.96;39,86.94,323.56,396.98,9.96;39,72.00,345.47,307.96,9.96;39,72.00,367.39,331.81,9.96" xml:id="b12">
	<monogr>
		<title level="m" type="main" coord="36,109.94,136.89,56.82,8.77;36,72.00,154.64,288.76,9.96;36,72.00,222.39,15.69,9.96;36,119.07,222.39,313.82,9.96;36,72.00,234.34,36.61,9.96;36,72.00,246.30,15.69,9.96;36,145.23,246.30,15.69,9.96;36,255.06,246.30,15.69,9.96;36,296.91,246.30,15.69,9.96;36,343.98,246.30,15.69,9.96;36,401.51,246.30,15.69,9.96;36,72.00,258.25,15.69,9.96;36,145.23,258.25,15.69,9.96;36,255.06,258.25,15.69,9.96;36,296.91,258.25,15.69,9.96;36,343.98,258.25,15.69,9.96;36,401.51,258.25,15.69,9.96;36,72.00,270.21,15.69,9.96;36,145.23,270.21,15.69,9.96;36,255.06,270.21,15.69,9.96;36,296.91,270.21,15.69,9.96;36,343.98,270.21,15.69,9.96;36,401.51,270.21,15.69,9.96;36,72.00,282.16,15.69,9.96;36,145.23,282.16,15.69,9.96;36,255.06,282.16,15.69,9.96;36,296.91,282.16,15.69,9.96;36,343.98,282.16,15.69,9.96;36,401.51,282.16,15.69,9.96;36,72.00,294.12,15.69,9.96;36,145.23,294.12,15.69,9.96;36,255.06,294.12,15.69,9.96;36,296.91,294.12,15.69,9.96;36,343.98,294.12,15.69,9.96;36,401.51,294.12,15.69,9.96;36,72.00,318.03,15.69,9.96;36,119.07,318.03,287.67,9.96;36,72.00,329.98,36.61,9.96;36,72.00,341.94,15.69,9.96;36,176.61,341.94,15.69,9.96;36,223.68,341.94,15.69,9.96;36,302.14,341.94,15.69,9.96;36,375.36,341.94,15.69,9.96;36,72.00,353.89,15.69,9.96;36,176.61,353.89,15.69,9.96;36,223.68,353.89,15.69,9.96;36,302.14,353.89,15.69,9.96;36,375.36,353.89,15.69,9.96;36,72.00,365.85,15.69,9.96;36,176.61,365.85,15.69,9.96;36,223.68,365.85,15.69,9.96;36,302.14,365.85,15.69,9.96;36,375.36,365.85,15.69,9.96;36,72.00,377.80,15.69,9.96;36,176.61,377.80,15.69,9.96;36,223.68,377.80,15.69,9.96;36,302.14,377.80,15.69,9.96;36,375.36,377.80,15.69,9.96;36,72.00,389.76,15.69,9.96;36,176.61,389.76,15.69,9.96;36,223.68,389.76,15.69,9.96;36,302.14,389.76,15.69,9.96;36,375.36,389.76,15.69,9.96;36,72.00,413.67,15.69,9.96;36,119.07,413.67,292.90,9.96;36,72.00,425.63,36.61,9.96;36,328.29,485.40,15.69,9.96;36,380.59,485.40,15.69,9.96;36,72.00,509.31,15.69,9.96;36,119.07,509.31,282.44,9.96;36,72.00,521.27,36.61,9.96;36,72.00,533.22,15.69,9.96;36,192.30,533.22,15.69,9.96;36,72.00,604.95,15.69,9.96;36,119.07,604.95,245.83,9.96;36,72.00,616.91,36.61,9.96;36,72.00,628.86,15.69,9.96">occ activist agricultural worker artist athlete biologist \ page_id 307 NaN 1.0 NaN NaN NaN 308 NaN NaN NaN NaN 1.0 339 NaN NaN NaN NaN NaN 340 NaN NaN NaN NaN NaN 344 NaN NaN 1.0 NaN NaN occ businessperson chemist civil servant clergyperson \ page_id 307 NaN NaN NaN NaN 308 NaN NaN NaN NaN 339 NaN NaN NaN NaN 340 1.0 NaN NaN NaN 344 1.0 NaN NaN NaN occ computer scientist ... military personnel musician \ page_id</title>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Mib</surname></persName>
		</author>
		<idno>NaN 1.0 NaN 308 NaN 1.0 NaN 1.0 339</idno>
		<imprint>
			<date type="published" when="2017">2017-2022 70194481 a-d 2017-2022 70194489 l-r 2017-2022 70194530 a-d 2017-2022</date>
			<pubPlace>NaN NaN NaN NaN 340 NaN NaN NaN NaN 344 NaN NaN NaN NaN; NaN NaN 308 NaN NaN 339 NaN NaN 340 NaN NaN 344 NaN NaN</pubPlace>
		</imprint>
	</monogr>
	<note>occ social scientist sportsperson (non-athlete) \ page_id 307. relative_pageviews_category num_sitelinks_category page_id 12 High 5+ languages 25 High 5+ languages 39 High 5+ languages 290 High 5+ languages 303 High 5+ languages ... ... ... 70194419 Low 2-4 languages 70194480 Low English only 70194481 Low English only 70194489 Low 2-4 languages 70194530 Low English only [6460210 rows x 4 columns] Now each of these needs to become another table. The get dummies function is our friend. alpha align = pd.get dummies(pages[&apos;first letter category&apos;]) output.save table(alpha align, &apos;page-alpha-align</note>
</biblStruct>

<biblStruct coords="39,72.00,389.31,381.82,9.96;39,72.00,401.27,366.13,9.96;39,72.00,413.22,407.97,9.96;39,72.00,425.18,371.36,9.96;39,72.00,447.09,310.89,9.96" xml:id="b13">
	<analytic>
		<title level="a" type="main" coord="39,98.15,389.31,355.66,9.96;39,72.00,401.27,366.13,9.96;39,72.00,413.22,407.97,9.96;39,72.00,425.18,271.98,9.96">wptrec.save:saving CSV to data\metric-tables\page-alpha-align.csv.gz INFO:wptrec.save:data\metric-tables\page-alpha-align.csv.gz: 19.47 MiB INFO:wptrec.save:saving Parquet to data\metric-tables\page-alpha-align.parquet INFO:wptrec.save:data\metric-tables\page-alpha-align</title>
		<author>
			<persName coords=""><surname>Info</surname></persName>
		</author>
		<idno>parquet: 10.52</idno>
	</analytic>
	<monogr>
		<title level="m" coord="39,427.66,425.18,15.69,9.96;39,72.00,447.09,180.13,9.96">MiB alpha xr = xr.DataArray(alpha align</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct coords="39,72.00,469.01,302.73,9.96;39,72.00,480.97,310.89,9.96" xml:id="b14">
	<monogr>
		<title level="m" type="main" coord="39,72.00,469.01,302.73,9.96;39,72.00,480.97,227.21,9.96">age align = pd.get dummies(pages[&apos;creation date category&apos;]) output.save table(age align, &apos;page-age-align</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct coords="39,72.00,502.88,371.35,9.96;39,72.00,514.84,355.66,9.96;39,72.00,526.79,397.51,9.96;39,72.00,538.75,355.66,9.96;39,72.00,560.67,279.51,9.96" xml:id="b15">
	<monogr>
		<title level="m" type="main" coord="39,98.15,502.88,345.20,9.96;39,72.00,514.84,355.66,9.96;39,72.00,526.79,397.51,9.96;39,72.00,538.75,261.52,9.96">wptrec.save:saving CSV to data\metric-tables\page-age-align.csv.gz INFO:wptrec.save:data\metric-tables\page-age-align.csv.gz: 17.29 MiB INFO:wptrec.save:saving Parquet to data\metric-tables\page-age-align.parquet INFO:wptrec.save:data\metric-tables\page-age-align</title>
		<author>
			<persName coords=""><surname>Info</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>parquet: 7.53 MiB age xr = xr.DataArray(age align</note>
</biblStruct>

<biblStruct coords="39,72.00,582.59,328.89,9.96;39,72.00,594.54,310.89,9.96" xml:id="b16">
	<monogr>
		<title level="m" type="main" coord="39,72.00,582.59,328.89,9.96;39,72.00,594.54,227.21,9.96">pop align = pd.get dummies(pages[&apos;relative pageviews category&apos;]) output.save table(pop align, &apos;page-pop-align</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct coords="39,72.00,616.46,371.35,9.96;39,72.00,628.41,355.66,9.96;39,72.00,640.37,397.51,9.96;39,72.00,652.32,355.66,9.96;39,72.00,674.24,279.51,9.96" xml:id="b17">
	<monogr>
		<title level="m" type="main" coord="39,98.15,616.46,345.20,9.96;39,72.00,628.41,355.66,9.96;39,72.00,640.37,397.51,9.96;39,72.00,652.32,261.52,9.96">wptrec.save:saving CSV to data\metric-tables\page-pop-align.csv.gz INFO:wptrec.save:data\metric-tables\page-pop-align.csv.gz: 18.69 MiB INFO:wptrec.save:saving Parquet to data\metric-tables\page-pop-align.parquet INFO:wptrec.save:data\metric-tables\page-pop-align</title>
		<author>
			<persName coords=""><surname>Info</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>parquet: 9.52 MiB pop xr = xr.DataArray(pop align</note>
</biblStruct>

<biblStruct coords="40,72.00,74.49,313.19,9.96;40,72.00,86.45,331.81,9.96" xml:id="b18">
	<monogr>
		<title level="m" type="main" coord="40,72.00,74.49,313.19,9.96;40,72.00,86.45,248.13,9.96">langs align = pd.get dummies(pages[&apos;num sitelinks category&apos;]) output.save table(langs align, &apos;page-langs-align</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct coords="40,72.00,108.36,381.82,9.96;40,72.00,120.32,366.13,9.96;40,72.00,132.27,407.97,9.96;40,72.00,144.23,366.13,9.96;40,72.00,166.15,310.89,9.96" xml:id="b19">
	<monogr>
		<title level="m" type="main" coord="40,98.15,108.36,355.66,9.96;40,72.00,120.32,366.13,9.96;40,72.00,132.27,366.12,9.96">wptrec.save:saving CSV to data\metric-tables\page-langs-align.csv.gz INFO:wptrec.save:data\metric-tables\page-langs-align.csv.gz: 18.64 MiB INFO:wptrec.save:saving Parquet to data\metric-tables\page-langs-align</title>
		<author>
			<persName coords=""><surname>Info</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>parquet INFO:wptrec.save:data\metric-tables\page-langs-align.parquet: 9.80 MiB langs xr = xr.DataArray(langs align, dims=[&apos;page&apos;, &apos;langs&apos;</note>
</biblStruct>

<biblStruct coords="50,72.00,74.49,407.97,9.96;50,72.00,86.45,392.28,9.96;50,72.00,98.40,434.12,9.96;50,72.00,110.36,397.51,9.96;50,72.00,132.27,166.74,9.96;50,72.00,144.23,329.72,9.96;50,72.00,156.18,391.15,9.96;50,72.00,178.10,407.97,9.96;50,72.00,190.06,387.05,9.96;50,72.00,202.01,434.12,9.96;50,72.00,213.97,392.28,9.96;50,72.00,235.89,187.67,9.96;50,72.00,247.84,350.64,9.96;50,72.00,259.80,412.07,9.96;50,72.00,281.71,418.43,9.96;50,72.00,293.67,397.51,9.96;50,72.00,305.62,444.58,9.96;50,72.00,317.58,402.74,9.96;50,72.00,339.50,187.67,9.96;50,72.00,351.45,350.64,9.96;50,72.00,363.41,412.07,9.96;50,72.00,385.33,418.43,9.96;50,72.00,397.28,397.51,9.96;50,72.00,409.24,444.58,9.96;50,72.00,421.19,402.74,9.96;50,72.00,443.11,166.74,9.96;50,72.00,455.06,329.72,9.96;50,72.00,467.02,391.15,9.96;50,72.00,488.94,407.97,9.96;50,72.00,500.89,387.05,9.96;50,72.00,512.85,434.12,9.96;50,72.00,524.80,371.36,9.96" xml:id="b20">
	<monogr>
		<title level="m" type="main" coord="50,453.82,110.36,15.69,9.96;50,72.00,132.27,166.74,9.96;50,72.00,144.23,329.72,9.96;50,72.00,156.18,391.15,9.96;50,72.00,178.10,407.97,9.96;50,72.00,190.06,387.05,9.96;50,72.00,202.01,434.12,9.96;50,72.00,213.97,392.28,9.96;50,72.00,235.89,187.67,9.96;50,72.00,247.84,350.64,9.96;50,72.00,259.80,412.07,9.96;50,72.00,281.71,418.43,9.96;50,72.00,293.67,397.51,9.96;50,72.00,305.62,444.58,9.96;50,72.00,317.58,402.74,9.96;50,72.00,339.50,187.67,9.96;50,72.00,351.45,350.64,9.96;50,72.00,363.41,412.07,9.96;50,72.00,385.33,418.43,9.96;50,72.00,397.28,397.51,9.96;50,72.00,409.24,444.58,9.96;50,72.00,421.19,402.74,9.96;50,72.00,443.11,166.74,9.96;50,72.00,455.06,329.72,9.96;50,72.00,467.02,391.15,9.96;50,72.00,488.94,371.36,9.96">KiB qr age align = qr join(age align) qr age tgt = norm dist df(qr age align.groupby(&apos;topic id&apos;).sum()) output.save table(qr age tgt, f&apos;task1-{DATA MODE}-age-target&apos;, parquet=True) INFO:wptrec.save:saving CSV to data\metric-tables\task1-eval-age-target.csv.gz INFO:wptrec.save:data\metric-tables\task1-eval-age-target.csv.gz: 2.13 KiB INFO:wptrec.save:saving Parquet to data\metric-tables\task1-eval-age-target.parquet INFO:wptrec.save:data\metric-tables\task1-eval-age-target.parquet: 6.23 KiB qr alpha align = qr join(alpha align) qr alpha tgt = norm dist df(qr alpha align.groupby(&apos;topic id&apos;).sum()) output.save table(qr alpha tgt, f&apos;task1-{DATA MODE}-alpha-target&apos;, parquet=True) INFO:wptrec.save:saving CSV to data\metric-tables\task1-eval-alpha-target.csv.gz INFO:wptrec.save:data\metric-tables\task1-eval-alpha-target.csv.gz: 2.11 KiB INFO:wptrec.save:saving Parquet to data\metric-tables\task1-eval-alpha-target.parquet INFO:wptrec.save:data\metric-tables\task1-eval-alpha-target.parquet: 5.10 KiB qr langs align = qr join(langs align) qr langs tgt = norm dist df(qr langs align.groupby(&apos;topic id&apos;).sum()) output.save table(qr langs tgt, f&apos;task1-{DATA MODE}-langs-target&apos;, parquet=True) INFO:wptrec.save:saving CSV to data\metric-tables\task1-eval-langs-target.csv.gz INFO:wptrec.save:data\metric-tables\task1-eval-langs-target.csv.gz: 1.67 KiB INFO:wptrec.save:saving Parquet to data\metric-tables\task1-eval-langs-target.parquet INFO:wptrec.save:data\metric-tables\task1-eval-langs-target.parquet: 5.20 KiB qr pop align = qr join(pop align) qr pop tgt = norm dist df(qr pop align.groupby(&apos;topic id&apos;).sum()) output.save table(qr pop tgt, f&apos;task1-{DATA MODE}-pop-target&apos;, parquet=True) INFO:wptrec.save:saving CSV to data\metric-tables\task1-eval-pop-target</title>
		<idno>parquet: 6.15</idno>
		<imprint/>
	</monogr>
	<note>csv.gz INFO:wptrec.save:data\metric-tables\task1-eval-pop-target.csv.gz: 2.17 KiB INFO:wptrec.save:saving Parquet to data\metric-tables\task1-eval-pop-target.parquet INFO:wptrec.save:data\metric-tables\task1-eval-pop-target</note>
</biblStruct>

<biblStruct coords="50,448.59,524.80,15.69,9.96;50,72.00,552.10,201.92,10.38;50,72.00,571.08,468.00,9.96;50,72.00,583.04,414.28,9.96;50,86.94,594.99,370.00,9.96;50,86.94,606.95,170.94,9.96" xml:id="b21">
	<monogr>
		<title level="m" type="main" coord="50,85.35,552.10,188.58,10.38;50,72.00,571.08,468.00,9.96;50,72.00,583.04,414.28,9.96;50,86.94,594.99,365.92,9.96">8 Multidimensional Alignment Now, we need to set up the multidimensional alignment. The basic version is just to multiply the targets, but that doesn&apos;t include the target averaging we want to do for geographic and gender targets. Doing that averaging further requires us to very carefully handle the unknown cases</title>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Kib</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>We are going to proceed in three steps</note>
</biblStruct>

<biblStruct coords="50,88.05,628.86,430.33,9.96;50,84.18,640.82,399.75,9.96;50,84.18,652.77,131.28,9.96;53,124.30,343.48,73.22,9.96;53,129.53,355.44,67.99,9.96;53,129.53,367.39,67.99,9.96;53,129.53,379.35,73.22,9.96;53,124.30,403.26,73.22,9.96;53,129.53,415.21,67.99,9.96;53,129.53,427.17,67.99,9.96;53,129.53,439.12,73.22,9.96;53,124.30,463.03,73.22,9.96;53,129.53,474.99,67.99,9.96;53,129.53,486.94,67.99,9.96;53,129.53,498.90,78.46,9.96;53,72.00,522.81,15.69,9.96;53,119.07,546.72,78.46,9.96;53,129.53,558.68,67.99,9.96;53,129.53,570.63,67.99,9.96;53,129.53,582.59,73.22,9.96;53,124.30,606.50,73.22,9.96;53,129.53,618.45,67.99,9.96;53,129.53,630.41,67.99,9.96;53,129.53,642.36,73.22,9.96;53,124.30,666.27,73.22,9.96;53,129.53,678.23,67.99,9.96;54,72.00,359.85,387.05,9.96;54,171.38,371.81,135.99,9.96;54,72.00,383.76,324.28,9.96;54,140.00,395.72,256.29,9.96;54,140.00,407.67,256.29,9.96;54,140.00,419.63,261.52,9.96;54,134.76,443.54,261.52,9.96;54,140.00,455.49,256.29,9.96;54,140.00,467.45,256.29,9.96;54,140.00,479.40,261.52,9.96;54,134.76,503.31,261.52,9.96;54,140.00,515.27,256.29,9.96;54,140.00,527.22,256.29,9.96;54,140.00,539.18,261.52,9.96;54,134.76,563.09,261.52,9.96;54,140.00,575.04,256.29,9.96;54,140.00,587.00,256.29,9.96;54,140.00,598.95,266.75,9.96;54,72.00,622.86,15.69,9.96;54,129.53,646.78,266.75,9.96;54,140.00,658.73,256.29,9.96;54,140.00,670.69,256.29,9.96;54,140.00,682.64,261.52,9.96;55,134.76,86.45,261.52,9.96;55,140.00,98.40,256.29,9.96;55,140.00,110.36,256.29,9.96;55,140.00,122.31,261.52,9.96;55,134.76,146.22,261.52,9.96;55,140.00,158.18,256.29,9.96;55,140.00,170.13,256.29,9.96;55,140.00,182.09,261.52,9.96;55,134.76,206.00,261.52,9.96;55,140.00,217.95,256.29,9.96;55,140.00,229.91,256.29,9.96;55,140.00,241.86,183.06,9.96" xml:id="b22">
	<monogr>
		<idno>0.00000000e+00, 0.00000000e+00, 0.00000000e+00</idno>
		<title level="m" coord="50,96.91,628.86,136.99,9.96;54,72.00,359.85,387.05,9.96;54,171.38,371.81,135.99,9.96;54,72.00,383.76,26.15,9.96">&lt;xarray.DataArray (sub-geo: 21, src-geo: 21, gender: 4, occ: 33, alpha: 4, age: 4, pop: 4, langs: 3)&gt; array</title>
		<imprint>
			<date type="published" when="2000">0., 0., 0.], [0., 0., 0.], [0., 0., 0.], [0., 0., 0</date>
		</imprint>
	</monogr>
	<note>Define the averaged dimensions. 1.07309246e-03, 1.09248385e-03, 8.45444299e-04. 2.37733808e-04, 9.16356065e-04, 5.09862192e-05. 3.91334003e-04, 3.40654865e-04, 1.97493559e-04. 8.32428068e-06, 4.32454542e-05, 2.61467791e-06. 4.90345161e-04, 3.17004794e-04, 7.68906390e-04. 7.80659667e-05, 1.96644900e-04, 1.78047115e-05. 2.89383842e-04, 2.64631783e-04, 3.21959246e-04. 2.03267319e-06, 7.67543443e-06, 0.00000000e+00. 3.34556557e-04, 1.53049653e-04, 5.17167629e-04. 4.49973617e-05, 2.80944473e-05, 2.21113706e-05. 8.65276618e-05, 7.67250106e-05, 1.43730437e-04. 2.70602185e-05, 4.39063929e-06, 7.07563858e-06. 2.58404302e-04, 9.37175266e-05, 7.87475979e-04. 9.01797073e-06, 1.61861013e-06, 4.82104549e-05. 1.18014878e-04, 2.01703724e-05, 9.15858957e-05. 0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00. 0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00]], [[0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0</note>
</biblStruct>

<biblStruct coords="62,86.94,108.36,291.93,9.96" xml:id="b23">
	<monogr>
		<title level="m" type="main" coord="62,86.94,108.36,287.81,9.96">Now we have all the pieces to compute this for each of our queries</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct coords="62,72.00,134.89,154.32,8.77;62,72.00,152.64,468.00,9.96;62,72.00,164.60,239.66,9.96;62,72.00,186.51,124.06,9.96;62,92.92,198.47,146.45,9.96;62,92.92,210.42,373.66,9.96;62,92.92,222.38,373.66,9.96" xml:id="b24">
	<analytic>
		<title level="a" type="main" coord="62,109.43,134.89,116.89,8.77;62,72.00,152.64,468.00,9.96;62,72.00,164.60,239.66,9.96;62,72.00,186.51,82.22,9.96">Implementing Function To perform this combination for every query, we&apos;ll use a function that takes a data frame for a query&apos;s relevant docs and performs all of the above operations: def query xalign</title>
	</analytic>
	<monogr>
		<title level="m" coord="62,92.92,198.47,146.45,9.96;62,92.92,210.42,160.68,9.96"># compute targets to average avg pages = reduce(operator.mul</title>
		<imprint/>
	</monogr>
	<note>d.align.loc[pages] for d in avg dims. raw pages = reduce(operator.mul. d.align.loc[pages] for d in raw dims</note>
</biblStruct>

<biblStruct coords="62,92.92,246.29,162.14,9.96;62,92.92,258.24,194.36,9.96;62,92.92,282.15,203.98,9.96;62,92.92,294.11,112.14,9.96;62,92.92,318.02,120.30,9.96;62,92.92,329.98,52.30,9.96;62,86.94,351.89,85.68,9.96;62,72.00,373.80,164.44,9.96;62,72.00,395.72,387.05,9.96;62,171.38,407.67,135.99,9.96;62,72.00,419.63,324.28,9.96;62,140.00,431.58,256.29,9.96;62,140.00,443.54,256.29,9.96;62,140.00,455.49,261.52,9.96;62,134.76,479.40,261.52,9.96;62,140.00,491.36,256.29,9.96;62,140.00,503.31,256.29,9.96;62,140.00,515.27,261.52,9.96;62,134.76,539.18,261.52,9.96;62,140.00,551.13,256.29,9.96;62,140.00,563.09,256.29,9.96;62,140.00,575.04,261.52,9.96;62,134.76,598.95,261.52,9.96;62,140.00,610.91,256.29,9.96;62,140.00,622.86,256.29,9.96;62,140.00,634.82,266.75,9.96;62,72.00,658.73,15.69,9.96;62,129.53,682.64,266.75,9.96;63,140.00,74.49,256.29,9.96;63,140.00,86.45,256.29,9.96;63,140.00,98.40,261.52,9.96;63,134.76,122.31,261.52,9.96;63,140.00,134.27,256.29,9.96;63,140.00,146.22,256.29,9.96;63,140.00,158.18,261.52,9.96;63,134.76,182.09,261.52,9.96;63,140.00,194.04,256.29,9.96;63,140.00,206.00,256.29,9.96;63,140.00,217.95,261.52,9.96;63,134.76,241.86,261.52,9.96;63,140.00,253.82,256.29,9.96;63,140.00,265.77,256.29,9.96;63,140.00,277.73,183.06,9.96" xml:id="b25">
	<monogr>
		<idno>0.00000000e+00, 0.00000000e+00, 0.00000000e+00</idno>
		<title level="m" coord="62,92.92,246.29,162.14,9.96;62,92.92,258.24,194.36,9.96;62,92.92,282.15,203.98,9.96;62,92.92,294.11,112.14,9.96;62,92.92,318.02,120.30,9.96;62,92.92,329.98,52.30,9.96;62,86.94,351.89,85.68,9.96;62,72.00,373.80,164.44,9.96;62,72.00,395.72,387.05,9.96;62,171.38,407.67,135.99,9.96;62,72.00,419.63,26.15,9.96"># convert to query distribution tgt = mean outer(avg pages, raw pages) # average with background distributions tgt = avg with bg(tgt) # and return the result return tgt Make sure it works: query xalign(qdf.page id.values) &lt;xarray.DataArray (sub-geo: 21, src-geo: 21, gender: 4, occ: 33, alpha: 4, age: 4, pop: 4, langs: 3)&gt; array</title>
		<imprint>
			<date>2.03267319e-06, 7.67543443e-06, 0.00000000e+00</date>
		</imprint>
	</monogr>
	<note>3.90778732e-05, 9.13512756e-04, 0.00000000e+00. 1.07309246e-03, 1.09248385e-03, 8.45444299e-04. 2.37733808e-04, 9.16356065e-04, 5.09862192e-05. 3.91334003e-04, 3.40654865e-04, 1.97493559e-04. 8.32428068e-06, 4.32454542e-05, 2.61467791e-06. 4.90345161e-04, 3.17004794e-04, 7.68906390e-04. 7.80659667e-05, 1.96644900e-04, 1.78047115e-05. 2.89383842e-04, 2.64631783e-04, 3.21959246e-04. 3.34556557e-04, 1.53049653e-04, 5.17167629e-04. 4.49973617e-05, 2.80944473e-05, 2.21113706e-05. 8.65276618e-05, 7.67250106e-05, 1.43730437e-04. 2.70602185e-05, 4.39063929e-06, 7.07563858e-06. 2.58404302e-04, 9.37175266e-05, 7.87475979e-04. 9.01797073e-06, 1.61861013e-06, 4.82104549e-05. 1.18014878e-04, 2.01703724e-05, 9.15858957e-05. 7.50104470e-13, 3.37547011e-12, 0.00000000e+00], [0.00000000e+00, 3.18794400e-12, 0.00000000e+00], [0.00000000e+00, 1.63415617e-12, 0.00000000e+00. 0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [7.76358126e-12, 2.32532386e-12, 2.25031341e-12. 0.00000000e+00, 4.50062682e-13, 0.00000000e+00. 7.50104470e-13, 0.00000000e+00, 0.00000000e+00. 1.87526117e-12, 0.00000000e+00, 2.43783953e-12. 0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00. 0.00000000e+00, 0.00000000e+00, 0.00000000e+00. 2.25031341e-12, 5.62578352e-13, 3.00041788e-12], [0.00000000e+00, 0.00000000e+00, 0.00000000e+00], [0.00000000e+00, 0.00000000e+00, 0</note>
</biblStruct>

<biblStruct coords="63,72.00,289.68,62.76,9.96;64,72.00,74.49,429.23,9.96;64,86.94,96.41,129.74,9.96;64,72.00,118.33,168.21,9.96" xml:id="b26">
	<monogr>
		<title level="m" type="main" coord="63,72.00,289.68,62.76,9.96;64,72.00,74.49,50.59,9.96">Coordinates: {&quot;model id</title>
		<imprint/>
	</monogr>
	<note>d7cf659921754083b3c99d2a487c1f52&quot;,&quot;version major&quot;:2,&quot;version minor&quot;:0} Assemble a composite xarray: q tgts = xr.concat(q tgts, q ids</note>
</biblStruct>

<biblStruct coords="64,72.00,666.27,62.76,9.96;64,82.46,678.23,47.07,9.96;64,145.23,678.23,319.05,9.96;77,72.00,74.49,407.97,9.96;77,72.00,86.45,387.05,9.96;77,72.00,98.40,434.12,9.96;77,72.00,110.36,392.28,9.96;77,72.00,130.73,343.11,9.96;77,72.00,142.69,350.64,9.96;77,72.00,154.64,412.07,9.96;77,72.00,175.02,418.43,9.96;77,72.00,186.97,397.51,9.96;77,72.00,198.93,444.58,9.96;77,72.00,210.88,402.74,9.96;77,72.00,231.26,343.11,9.96;77,72.00,243.21,350.64,9.96;77,72.00,255.17,412.07,9.96;77,72.00,275.54,418.43,9.96;77,72.00,287.50,402.74,9.96;77,72.00,299.45,444.58,9.96;77,72.00,311.41,402.74,9.96;77,72.00,331.78,322.19,9.96;77,72.00,343.74,329.72,9.96;77,72.00,355.69,391.15,9.96;77,72.00,376.07,407.97,9.96;77,72.00,388.02,387.05,9.96;77,72.00,399.98,434.12,9.96;77,72.00,411.93,371.36,9.96" xml:id="b27">
	<analytic>
		<title level="a" type="main" coord="64,385.82,678.23,73.23,9.96;77,134.76,110.36,329.51,9.96;77,72.00,130.73,343.11,9.96;77,72.00,142.69,350.64,9.96;77,72.00,154.64,412.07,9.96;77,72.00,175.02,418.43,9.96;77,72.00,186.97,397.51,9.96;77,72.00,198.93,444.58,9.96;77,72.00,210.88,402.74,9.96;77,72.00,231.26,343.11,9.96;77,72.00,243.21,350.64,9.96;77,72.00,255.17,412.07,9.96;77,72.00,275.54,418.43,9.96;77,72.00,287.50,308.59,9.96;77,464.28,287.50,10.46,9.96;77,72.00,299.45,444.58,9.96;77,72.00,311.41,402.74,9.96;77,72.00,331.78,322.19,9.96;77,72.00,343.74,329.72,9.96;77,72.00,355.69,391.15,9.96;77,72.00,376.07,371.36,9.96">save:data\metric-tables\task2-eval-age-target.parquet: 5.24 KiB qr alpha align = qr join(alpha align).multiply(qp exp, axis=&apos;rows&apos;) qr alpha tgt = norm dist df(qr alpha align.groupby(&apos;topic id&apos;).sum()) output.save table(qr alpha tgt, f&apos;task2-{DATA MODE}-alpha-target&apos;, parquet=True) INFO:wptrec.save:saving CSV to data\metric-tables\task2-eval-alpha-target.csv.gz INFO:wptrec.save:data\metric-tables\task2-eval-alpha-target.csv.gz: 1.16 KiB INFO:wptrec.save:saving Parquet to data\metric-tables\task2-eval-alpha-target.parquet INFO:wptrec.save:data\metric-tables\task2-eval-alpha-target.parquet: 5.00 KiB qr langs align = qr join(langs align).multiply(qp exp, axis=&apos;rows&apos;) qr langs tgt = norm dist df(qr langs align.groupby(&apos;topic id&apos;).sum()) output.save table(qr langs tgt, f&apos;task2-{DATA MODE}-langs-target&apos;, parquet=True) INFO:wptrec.save:saving CSV to data\metric-tables\task2-eval-langs-target.csv.gz INFO:wptrec.save:data\metric-tables\task2-eval-langs-target</title>
		<author>
			<persName coords=""><forename type="first">'@</forename><surname>Sub-Geo) Object</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">'</forename><surname>Unknown' 'antarctica</surname></persName>
		</author>
		<idno>parquet: 5.15</idno>
	</analytic>
	<monogr>
		<title level="m" coord="64,72.00,666.27,62.76,9.96;64,82.46,678.23,47.07,9.96">Coordinates: * sub-geo</title>
		<imprint/>
	</monogr>
	<note>iB INFO:wptrec.save:saving Parquet to data\metric-tables\task2-eval-langs-target.parquet INFO:wptrec.save:data\metric-tables\task2-eval-langs-target.parquet: 4.46 KiB qr pop align = qr join(pop align).multiply(qp exp, axis=&apos;rows&apos;) qr pop tgt = norm dist df(qr pop align.groupby(&apos;topic id&apos;).sum()) output.save table(qr pop tgt, f&apos;task2-{DATA MODE}-pop-target&apos;, parquet=True) INFO:wptrec.save:saving CSV to data\metric-tables\task2-eval-pop-target. csv.gz INFO:wptrec.save:data\metric-tables\task2-eval-pop-target.csv.gz: 1.24 KiB INFO:wptrec.save:saving Parquet to data\metric-tables\task2-eval-pop-target.parquet INFO:wptrec.save:data\metric-tables\task2-eval-pop-target</note>
</biblStruct>

<biblStruct coords="77,448.59,411.93,15.69,9.96;77,72.00,438.97,202.08,10.38;77,72.00,457.95,468.00,9.96;77,72.00,484.21,148.50,8.77;77,72.00,501.96,285.07,9.96;77,72.00,522.34,97.66,9.96;77,92.92,534.29,108.37,9.96;77,92.92,546.25,108.37,9.96;77,92.92,558.20,108.37,9.96;77,72.00,570.83,4.98,8.74;77,86.94,590.53,262.30,9.96" xml:id="b28">
	<monogr>
		<title level="m" type="main" coord="77,85.45,438.97,188.63,10.38;77,72.00,457.95,468.00,9.96;77,72.00,484.21,148.50,8.77;77,72.00,501.96,285.07,9.96;77,72.00,522.34,97.66,9.96;77,92.92,534.29,108.37,9.96;77,92.92,546.25,108.37,9.96;77,92.92,558.20,108.37,9.96;77,72.00,570.83,4.98,8.74;77,86.94,590.53,30.55,9.96">9 Multidimensional Alignment Now let&apos;s dive into the multidmensional alignment. This is going to proceed a lot like the Task 1 alignment. C.9.1 Dimension Definitions Let&apos;s define background distributions for some of our dimensions: dim backgrounds = { &apos;sub-geo&apos;: world pop, &apos;src-geo&apos;: world pop, &apos;gender&apos;: gender tgt, } Now we</title>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Kib</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>ll make a list of dimensions to treat with averaging</note>
</biblStruct>

<biblStruct coords="77,72.00,610.91,392.28,9.96;77,72.00,622.86,61.30,9.96;77,92.92,634.82,419.27,9.96" xml:id="b29">
	<monogr>
		<title/>
		<author>
			<persName coords=""><surname>Dr = Namedtuple</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>avg dims = [ DR(d.name, d.page align xr, xr.DataArray(dim backgrounds. d.name. d.name</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
