<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,77.74,102.85,439.80,18.14;1,224.65,127.76,145.98,18.14">Imago: open-source toolkit for 2D chemical structure image recognition</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName coords="1,133.92,167.57,88.96,12.58"><forename type="first">Viktor</forename><surname>Smolov</surname></persName>
							<email>vsmolov@ggasoftware.com</email>
						</author>
						<author>
							<persName coords="1,236.15,167.57,86.11,12.58"><forename type="first">Fedor</forename><surname>Zentsev</surname></persName>
						</author>
						<author>
							<persName coords="1,354.26,167.57,107.10,12.58"><forename type="first">Mikhail</forename><surname>Rybalkin</surname></persName>
						</author>
						<title level="a" type="main" coord="1,77.74,102.85,439.80,18.14;1,224.65,127.76,145.98,18.14">Imago: open-source toolkit for 2D chemical structure image recognition</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">2A95765BD51934DC0BDB450FA2C5CE1E</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-08-05T15:06+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Different chemical databases contain molecule structures with links to articles and patents, where such molecules are presented as images. Keeping such a database in a consistent state is a challenging problem, and, thus, efficient and accurate molecule image recognition algorithms are very important for solving this task.</p><p>We present an open-source toolkit for 2D chemical structure image recognition, called Imago. The main aim of this paper is to describe the algorithm approach implemented in Imago, and to share our ideas of possible improvements in the algorithm after we have summarized the results from the participation in the Image2Structure task at TREC-CHEM 2011.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="595.276" lry="841.89"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="595.276" lry="841.89"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="595.276" lry="841.89"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="595.276" lry="841.89"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="595.276" lry="841.89"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="595.276" lry="841.89"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="595.276" lry="841.89"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="595.276" lry="841.89"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Significant amount of information about chemical structure properties can be found in the scientific literature. On the one hand, there are efficient modern full text search techniques that provide the ability to search for text over a huge amount of text data. For example, the biggest database, that provides a chemical-specific text search (with automatic synonyms detection) over more than 21 million citations for biomedical literature, is the PubMed database <ref type="bibr" coords="1,501.68,513.20,11.71,10.48" target="#b0">[1]</ref>. On the other hand, there are efficient methods, that are used to search for a chemical structure with required properties (that contains special query substructure) over o huge amount of molecule structures. For example, another popular database, that provides (sub)structure search functionality over more than 31 million chemical molecules, is the PubChem database <ref type="bibr" coords="1,522.98,570.99,11.71,10.48" target="#b1">[2]</ref>. But chemical articles contains both text and molecule structure images; we can only imagine what opportunities would we get by combining text data mining methods and cheminformatics search techniques. This search problem is very similar to the so called Deep Web indexing problem: indexing the web content, that is not suitable for indexing by standard search engines. For example, Deep Web includes image and video files. According to rough estimates Deep Web is much larger than the web content, indexed by search engines.</p><p>Development of a universal chemical search engine, that could search by both text and (sub)structures, is a challenging problem. This problem involves subproblems from different scientific areas, which include natural language processing to find the meaning of a sentence describing the interaction between different structures, and optical image recognition to find molecule structure by its image from an article. This paper is focused on the problem of recognizing a 2D chemical structure image and transforming this molecule image into a diagram graph structure, which can be used in different software applications, including search systems.</p><p>In this paper, we presents the description of the algorithm used in our open-source toolkit for 2D chemical structure image recognition -Imago. When we started to develop our chemical structure recognition toolkit, one of the main technical goals was to provide an open-source cross-platform library without any dependency on the third-party code in order to use this library in a wide range of applications, including mobile devices. The core part of Imago is written from scratch in modern C++ and does not use any third-party code. Our objective is to use the best known algorithms for optical recognition so that to guarantee Imago's outstanding portability and performance. Imago contains a GUI program and a command-line utility, as well as a documented API for developers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Basic Recognition Routine</head><p>The current version of Imago implements a rather straightforward workflow with the following steps:</p><p>1. Binarize the whole image with a predefined threshold value.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Segmentate (divide image into the connected components) using the two steps below:</head><p>(a) Perform global segmentation in the SuperSegmentation procedure: locate the actual chemical structure in the image by using 15 √ó 15 window to find the pixel's neighbors.</p><p>(b) Apply the standard (with 3 √ó 3 window) segmentation to the largest segment from the step a), where the structure is assumed to be depicted.</p><p>3. Find and remove the single down (dashed triangle) stereo bonds in order to prevent incorrect recognition of that small line segments in the classification procedure.</p><p>4. The next and the most significant step is to classify the list of image segments into the two layers: symbols layer with the atom labels, and graphics layer with the bonds. After the separation, all symbols are grouped into atom labels and superatoms. All the graphics segments from the graphics layer are used to construct a molecule graph, called skeleton. Single up (solid triangle) stereo bond are processed after the skeleton is constructed.</p><p>5. For all atoms and superatoms, determine the appropriate skeleton nodes and conducts the optical character recognition. The resulting structure can now be saved in the MDL Molfile format.</p><p>The pseudocode for the whole algorithm is listed in Pseudocode 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Detailed Description</head><p>In this section, we provide a detailed description of each step, used in our molecule image-tostructure recognition algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Separation</head><p>Separation of symbols and graphics is based on the approximate value of the capital letter height. If this value is found, then all segments are classified by this height with checking some exceptional cases, such as small single bonds. But the calculation of capital letter height is not a trivial procedure, if the image contains both bonds and text.</p><p>To solve this problem, we use a criterion based on the following approach: symbols form a set of image segments with the same height and with the aspect ratio (width to height ratio) in the experimentally-calculated range [MinSymRatio, MaxSymRatio]. Unfortunately, not only the symbols satisfy this criterion, but also some image segments, which contain only one line segment (e.g. part of the double bond). But such image segments with only one single line are checked with a trivial algorithm. Fig. <ref type="figure" coords="3,253.91,660.24,5.85,10.48" target="#fig_1">1</ref> presents a sample molecule with 2 separated layers.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Single down bonds</head><p>According to the IUPAC recommendations, a single down bond is a set of ùëò (ùëò ‚â• 3) parallel and equidistant to each other single line segments.</p><p>Pseudocode 3 contains the AddSingleDownBond procedure that calculates the coordinates of the bond ends and also the bond's orientation. If single-down bond was depicted not as a dashed triangle, but as a dashed rectangle, then the FixStereoCenters procedure (not included in this paper) will determine the orientation of this bond on a later stage of the algorithm execution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Molecule skeleton construction</head><p>The goal of this step is to transform all raster graphics information into its vector representation. This operation is split into three substeps:</p><p>1. Thinning. All graphic elements are thinned using neighborhood maps <ref type="bibr" coords="4,461.05,762.59,11.71,10.48" target="#b7">[8]</ref>, so that the thickness of any line in the image equals to 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pseudocode 3 Single down bonds recognition</head><p>ExtractSingleDownBonds(ùëÜ) 2. Removing crossings. Each black pixel with more than 2 black pixels in its 8-neighbors becomes white. After this step, only polylines are present on the image.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.</head><p>Vectorization. Each polyline is smoothed using the Douglas-Peucker algorithm <ref type="bibr" coords="5,505.65,370.03,11.71,10.48" target="#b4">[5]</ref>.  Sometimes, when the molecule is poorly drawn, thick straight lines might become wavy after thinning. The vectorization will then give an excessive and wavy result. It this case, Imago conducts one additional modification step on the skeleton: some edges can be removed or shrunk depending on their length, lengths of adjacent vertices, and angles between these vertices and the bond.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Superatoms and character recognition</head><p>To group symbols (image segments) into superatoms, we build a relative neighborhood graph <ref type="bibr" coords="6,56.69,104.32,12.36,10.48" target="#b3">[4]</ref> of segments and then remove edges that are longer than the space size from this graph. All connected components in the graph are considered as superatom groups.</p><p>For character recognition, we use a simple classification procedure based on Fourier descriptors <ref type="bibr" coords="6,56.69,154.88,12.36,10.48" target="#b2">[3,</ref><ref type="bibr" coords="6,73.07,154.88,9.11,10.48" target="#b6">7]</ref> of symbols' outer and inner contours. Also, because we start with the grouped symbols, some heuristics can be used to predict the next character and to improve the recognition rate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Single up bonds</head><p>To find single up bonds in the image, we exploit one side effect of thinning -solid triangles are thinned to the line segments (see Fig. <ref type="figure" coords="6,257.56,255.04,10.08,10.48" target="#fig_3">2b</ref>). So, for each single bond in the molecule skeleton, we check whether it was a triangle after thinning. The code for this operation is listed in Pseudocode 4. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pseudocode 4 Single up bonds recognition</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Abbreviation Expansion</head><p>Usually, the depicted molecule images in the articles contain abbreviations for the well-known substructures: COOH, CN, Ph, etc. But chemical databases should contain only atoms without any abbreviations. To solve the problem of abbreviation expansion, Imago contains a list with the common abbreviations and expanded structures in SMILES notation. After recognizing the image, Imago replaces such superatoms with the expanded structures. To find positions of the expanded atoms, Imago uses the algorithm of 2D coordinates generation from the open-source organic chemistry toolkit Indigo [9] developed by GGA Software. This algorithm provides functionality to find the position of the set of atoms without changing positions of other atoms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussion</head><p>One of the aim of the Image2Structure task at TREC-CHEM 2011 is to share the ideas about 2D chemical structure image recognition. In this section we will summarize pros and cons of our implementation, and will share our ideas on how the image recognition can be done in more efficient way.</p><p>The Imago algorithm described above is straightforward, which leads to an efficient fast implementation. If the structure was rendered according to the common rules, and if the image resolution is high, then the result structure is correct in the most cases. But if there is a lot of noise in the image, or if the resolution is low, then such straightforward implementation gives incorrect results. The following situations should be taken into account for developing an advanced chemical structure image recognition algorithm:</p><p>1. When the image resolution is low, then it is common that atom label(s) are not separated from the bonds. Our separation method does not work well in such case.</p><p>2. When there are few symbols in the image, the average bond length can be calculated with large error. This may lead to the situation when specific atom symbols are treated as a bonds chain.</p><p>3. If the atom label contains more than one symbol, these symbols can be rendered without space pixels between then. Our implementation also does not give good results in this case.</p><p>We also believe that the image recognition program should output a degree of confidence of the image being recognized correctly. If the recognition program outputs only the recognized molecule, then we have to check all molecules manually to ensure that recognition was correct. But if the program outputs the degree of confidence, then we have to check only images with low level of confidence. The presence of such an essential feature would be a basis for automatic batch image recognition in a production environment. How to estimate this level of confidence is an open question though. This question is very similar to the problem of verifying the results provided by an arbitrary chemical structure image recognition program.</p><p>Considering all the problems listed above, and all our experience in molecule image recognition, we believe, that the following ideas and techniques should be used for designing an advanced recognition algorithm:</p><p>1. The overall recognition procedure should be designed as an optimization procedure to maximize the level of confidence that the recognized structure is correct.</p><p>2. The whole image should be divided into primitives, and each primitive or set of primitives should be mapped onto a set of chemical primitives with some probability. For example, a Iodine atom can be mapped to an atom with probability 80%, and to a single bond with probability 20%, depending on the relative size of the primitive. Or, a set of atoms can be represented as a superatom with some probability.</p><p>3. Some probabilistic criteria should be developed to estimate the validity of the recognized structure.</p><p>4. When all the primitives are collected, the most well-recognized ones should be processed first. The first step in our current implementation is separation of the image into bonds and atoms layers based on labels height, but it seems that such separation should be done by splitting bonds first.</p><p>5. The current implementation of Imago has strict straightforward structure: filtration, segmentation, and recognition. These steps should be dependent, and if some set of parameters leads to low level of confidence, then this set of parameters should be adjusted. For example, the recognition process can be organized as a multi-pass workflow, where each iteration attempts to adjust parameters in order to maximize the confidence level.</p><p>These points relate only to the image recognition algorithm, but when dealing with chemical articles and patents, the recognition problem becomes much more complicated: it is very important to separate the molecule images from the text. This problem becomes very complicated for recognizing combinatorial libraries, where a single combinatorial library is represented as separate molecules with captions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions</head><p>We presented the description of the algorithm implemented in our open-source toolkit for 2D chemical structure image recognition -Imago, licensed under GPLv3. It has both GUI application, that can used to open images and to extract molecules from images, and a command-line utility to process molecule images in a batch mode. The open-source library has a well documented API for developers.</p><p>Automatic image-to-structure conversion tools are very important for the automatic retrieval of chemical information. Huge amount of chemical papers and patents contains information that can be used in the next-generation search databases and expert systems. But development of a such search system is a challenging problem. To solve it, methods from the different areas should be used, including natural language processing, text searching, and optical character recognition. GGA's Imago implementation is a step towards achieving this goal.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="4,62.31,197.27,144.57,8.74;4,62.31,209.23,144.57,8.74;4,62.31,221.18,56.01,8.74;4,218.58,200.66,151.34,8.74;4,218.58,212.61,47.93,8.74;4,419.35,200.66,75.91,8.74"><head></head><label></label><figDesc>(a) Depicted molecule with up and down stereo bonds, and with pseudoatoms (b) Graphics layer. Aromatic ring is excluded (c) Symbols layer</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="4,214.07,243.48,167.13,10.48"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Example of a molecule</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="5,69.08,509.60,144.57,8.74;5,230.21,509.60,13.28,8.74;5,286.67,509.60,78.40,8.74;5,409.07,509.60,89.70,8.74"><head></head><label></label><figDesc>(a) Example of the graphics layer (b) image after step 2 (c) Vectorized image</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3" coords="5,217.05,531.90,161.18,10.48;5,69.08,412.58,144.57,91.47"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Skeleton construction</figDesc><graphic coords="5,69.08,412.58,144.57,91.47" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4" coords="6,56.69,328.35,136.91,7.61;6,57.57,340.72,202.13,9.96;6,57.57,353.34,4.98,8.74;6,57.57,365.27,94.10,9.33;6,57.57,377.25,4.98,8.74;6,97.60,377.22,288.70,9.33;6,57.57,389.21,4.98,8.74;6,123.77,389.18,135.41,9.33;6,57.57,401.13,59.80,8.77"><head>FetchSingleUpBonds(I, M) 1 ¬£</head><label>1</label><figDesc>ùêº -image of the structure, ùëÄ -skeleton 2 3 for B ‚àà M.bonds 4 do if (B.type = SINGLE) ‚àß (IsTriangle(I, b.begin, b.end)) 5 then B.type ‚Üê SINGLE-UP 6 return ùëÄ</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" coords="2,56.69,59.58,474.01,412.35"><head></head><label></label><figDesc>Pseudocode 1 Overall recognition procedure Locating single down stereo bonds. All corresponding segments are removed from ùëÜ. 14 ùëÄ ‚Üê ExtractSingleDownBonds(S) 15 16 ¬£ All image segments in ùëÜ are separated in two lists: symbols (ùêø ùë† ) and graphics (ùêø ùëî ). 17 ùêø ùë† , ùêø ùëî ‚Üê Separation(S) 18 19 ¬£ All symbols combine into groups (atom labels, superatoms). No recognition is done yet. 20 ùëÄ ‚Üê GroupLabels(ùêø ùë† ) 21 22 ¬£ Detecting line segments, aromatic circles in ùêø ùëî . Constructing molecule skeleton. 23 ùëÄ ‚Üê ExtractGraph(ùêø ùëî ) 24 25 ¬£ Finding single-up bonds in ùêº ùëÄ and marking corresponding bonds in the molecule. 26 ùëÄ ‚Üê FetchSingleUpBonds(ùêº ùëÄ )</figDesc><table coords="2,56.69,78.99,474.01,392.95"><row><cell>Recognize(I)</cell></row><row><cell>1 ¬£ ùêº -depiction of a structure, ùëÄ -reconstructed molecule</cell></row><row><cell>2 ùëÄ = ‚àÖ</cell></row><row><cell>3</cell></row><row><cell>4 ¬£ Simple filtering steps (blur, binarization)</cell></row><row><cell>5 ProcessFilters(I)</cell></row><row><cell>6</cell></row><row><cell>7 ¬£ Finding the molecule-like part of the image.</cell></row><row><cell>8 ¬£ All further steps use ùêº ùëÄ .</cell></row><row><cell>9 ùêº ùëÄ = SuperSegmentation(I)</cell></row><row><cell>10</cell></row><row><cell>11 ùëÜ = Segmentation(ùêº ùëÄ )</cell></row><row><cell>12</cell></row><row><cell>13 ¬£ 27</cell></row><row><cell>28 AttachAndRecognizeLabels(M)</cell></row><row><cell>29</cell></row><row><cell>30 ¬£ Repairing or figuring out stereo bonds orientation and aromatizing molecule if circles were presented.</cell></row><row><cell>31 ùëÄ ‚Üê FixStereoCenters()</cell></row><row><cell>32 Aromatize(M)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" coords="4,56.69,281.21,436.96,210.31"><head></head><label></label><figDesc>This procedure of the symbols height estimation is listed in Pseudocode 2.</figDesc><table coords="4,56.69,306.32,436.96,185.21"><row><cell cols="2">Pseudocode 2 Average symbols height estimation</cell></row><row><cell cols="2">EstimateCapHeight(L)</cell></row><row><cell cols="2">1 ¬£ ùêø -list of image segments</cell></row><row><cell>2</cell><cell></cell></row><row><cell cols="2">3 ¬£ Group segments by height, allowing some small deviation</cell></row><row><cell cols="2">4 ùêø ùëî = GroupByHeight(L)</cell></row><row><cell>5</cell><cell></cell></row><row><cell cols="2">6 repeat</cell></row><row><cell>7</cell><cell>ùëô ùëî = LargestGroup(ùêø ùëî )</cell></row><row><cell>8</cell><cell>¬£ Check if there is an image segment in the group, which contains single line segment</cell></row><row><cell>9</cell><cell>if CheckSequence(ùëô ùëî )</cell></row><row><cell>10</cell><cell>then ùëêùëéùëù ‚Ñéùëíùëñùëî‚Ñéùë° = InterQuartileMeanHeight(ùëô ùëî )</cell></row><row><cell>11</cell><cell>return</cell></row><row><cell>12</cell><cell>Delete(ùëô ùëî )</cell></row><row><cell>13</cell><cell>until true</cell></row></table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct coords="8,74.91,326.34,92.24,10.48;8,74.90,341.64,215.31,9.96" xml:id="b0">
	<monogr>
		<ptr target="http://www.ncbi.nlm.nih.gov/pubmed/" />
		<title level="m" coord="8,74.91,326.34,92.24,10.48">PubMed database</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct coords="8,74.91,362.45,99.72,10.48;8,74.90,377.76,196.87,9.96" xml:id="b1">
	<monogr>
		<ptr target="http://pubchem.ncbi.nlm.nih.gov/" />
		<title level="m" coord="8,74.91,362.45,99.72,10.48">PubChem database</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct coords="8,76.28,395.54,462.30,13.51;8,74.90,413.01,169.49,10.48" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="8,244.74,398.57,293.84,10.48;8,74.90,413.01,30.58,10.48">Feature extraction methods for character recognition -a survey</title>
		<author>
			<persName coords=""><surname>Due Trier</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Tax</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="8,114.48,413.01,97.60,10.48">Pattern recognition</title>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,74.91,434.68,463.67,10.48;8,74.90,449.13,79.99,10.48" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="8,161.51,434.68,266.34,10.48">The relative neighborhood graph of a finite planar set</title>
		<author>
			<persName coords=""><forename type="first">G</forename><forename type="middle">T</forename><surname>Toussaint</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="8,435.68,434.68,102.90,10.48">Pattern Recognition</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="261" to="268" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,74.91,470.79,463.68,10.48;8,74.90,485.24,441.13,10.48" xml:id="b4">
	<analytic>
		<title level="a" type="main" coord="8,205.48,470.79,333.11,10.48;8,74.90,485.24,208.68,10.48">Algorithms for the reduction of the number of points required to represent a digitized line or its caricature</title>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Douglas</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Peucker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="8,292.32,485.24,145.03,10.48">The Canadian Cartographer</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="112" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,74.90,506.91,359.07,10.48;8,74.90,521.35,170.15,10.48;8,74.90,536.66,295.29,9.96" xml:id="b5">
	<monogr>
		<ptr target="http://www.iupac.org/publications/pac/80/2/0277/" />
		<title level="m" coord="8,74.90,506.91,359.07,10.48;8,74.90,521.35,137.28,10.48">Graphical Representation Standards For Chemical Structure Diagrams (IUPAC Recommendations</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,74.91,557.47,463.67,10.48;8,74.90,571.92,290.56,10.48" xml:id="b6">
	<analytic>
		<title level="a" type="main" coord="8,272.74,557.47,227.91,10.48">Fourier Descriptors for Plane Closed Curves</title>
		<author>
			<persName coords=""><forename type="first">T</forename><surname>Charles</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Ralph</forename><forename type="middle">Z</forename><surname>Zahn</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Roskies</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="8,510.47,557.47,28.12,10.48;8,74.90,571.92,135.40,10.48">IEEE Transactions on computers</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="1972-03">march 1972</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,74.91,593.58,463.68,10.48;8,74.90,608.03,163.98,10.48" xml:id="b7">
	<monogr>
		<title level="m" type="main" coord="8,183.39,593.58,355.19,10.48;8,74.90,608.03,43.49,10.48">Efficient Binary Image Thinning using Neighborhood Maps&quot; Graphics Gems IV</title>
		<author>
			<persName coords=""><forename type="first">Joseph</forename><forename type="middle">M</forename><surname>Cychosz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
			<publisher>Academic Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
