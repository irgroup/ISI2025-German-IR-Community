<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,139.58,74.79,332.82,14.04">Latent Semantic Indexing with Selective Query Expansion</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName coords="1,277.61,91.10,57.02,11.04"><forename type="first">Andy</forename><surname>Garron</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics and Computer Science</orgName>
								<orgName type="institution">Ursinus College Collegeville PA</orgName>
								<address>
									<postCode>19426</postCode>
								</address>
							</affiliation>
						</author>
						<author>
							<persName coords="1,266.09,104.54,79.90,11.04"><forename type="first">April</forename><surname>Kontostathis</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics and Computer Science</orgName>
								<orgName type="institution">Ursinus College Collegeville PA</orgName>
								<address>
									<postCode>19426</postCode>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,139.58,74.79,332.82,14.04">Latent Semantic Indexing with Selective Query Expansion</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">70C5D26E7954A3B4AFAB20BC6E8E46B5</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-08-05T15:06+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This article describes our experiments during participation in the Legal Track of the 2011 Text REtrieval Conference. We incorporated machine learning, via selective query expansion, into our existing EDLSI system. We also were able to expand the number of dimensions used within our EDLSI system.</p><p>Our results show that EDLSI is an effective technique for E-Discovery. We also have shown that selective query expansion can be a useful mechanism for improving retrieval results when a specific initial query is provided. We believe that queries that are stated in general terms, however, may suffer from "expansion in the wrong direction" when certain iterative approaches to incorporating relevance feedback information are incorporated into the search process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I.</head></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="9" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="10" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Legal professionals are often presented with massive document sets that are potentially relevant to a case at hand. Any document can be used as important evidence at trial, but these datasets are generally too large to analyze manually. E-discovery refers to the use of electronic search engines to assist with, or automate, the legal discovery process. Finding an effective and efficient search algorithm for E-discovery is an interesting open problem.</p><p>To provide a framework for studying this problem, the Text REtrieval Conference (TREC) Legal Track was created. This track attempts to emulate E-Discovery (including the use of real legal datasets and attorneys). Each system is designed to retrieve documents that are relevant to a specific request for information (in 2011, there were 3 topics). The E-Discovery simulation includes an opportunity for machine learning based on relevance feedback -i.e. training systems to improve search results over multiple iterations after consulting with a Topic Authority (TA). The TA is a legal expert who can answer questions about a particular topic.</p><p>This paper describes the results produced by the Ursinus team during the 2011 competition. The system we implemented for both 2010 and 2011 is based on Latent Semantic Indexing (LSI), a search method that attempts to draw out the meaning of terms. In particular, we implemented Essential Dimensions of LSI (EDLSI), which combines standard Vector Space retrieval with LSI in a "best of both worlds" approach. In 2011, teams are allowed multiple submissions for each query ("runs"), after each run they receive relevance judgments for a number of documents. This procedure lends itself intuitively to selective query expansion. In selective query expansion, we modify the query using information from documents that are known to be relevant in order to train the system to produce better retrieval results. We implemented selective query expansion as a machine learning feature in our system.</p><p>Results from the 2011 competition suggest that EDLSI with selective query expansion is competitive with other methods in large-scale E-Discovery applications. The official comparison metric is estimated F1. Our system was consistently near the median when compared to all teams participating on a given topic. Our learning method experienced diminishing returns, however, and our system was clearly better for one topic than for the other two. We believe this was due to query characteristics that move queries away from relevant documents in the query expansion cycle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Background/Related Work</head><p>In this section we describe the basic algorithms used in our system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>a. Vector Space Retrieval</head><p>In Standard Vector Space Retrieval, documents are represented as vectors of dimension m x 1, where m is the count of terms in the dataset and position [i,1] of each vector represents how many times term i appears in the document. Queries are represented in the same way (vectors of termcounts), and it is assumed that documents with vectors closer to the query vector are more relevant to the query. One limitation of standard vector space retrieval is that if none of the query terms appear in a document, that document will not be returned as relevant. This can be counterintuitive when you are searching (for example) for car, and there exist documents in the dataset that are about automobile, but which never explicitly contain the term car. This problem is called synonymy. Another common problem is polysemy (words having multiple meanings, i.e. "plant" referring to either a green thing with leaves or some sort of factory). If the majority of the documents in a dataset mentioning plant also mention roots, leaves, stems, etc., searching for "plant" will return the documents about the green life forms as more relevant than those primarily about production facilities.</p><p>In the next section, we describe Latent Semantic Indexing (LSI). LSI has been shown to use second-order and higher-order word co-occurrence to overcome the synonymy and polysemy problems in some corpora <ref type="bibr" coords="2,147.24,356.09,11.28,11.04" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>b. Latent Semantic Indexing</head><p>LSI is an extension of the Vector Space search model. It is designed to extract the "meaning" of words by using their co-occurrences with other words that appear in the documents of a corpus <ref type="bibr" coords="2,502.90,423.17,11.36,11.04" target="#b1">[2]</ref>. Latent Semantic Indexing uses the term-document matrix of a dataset, i.e. the matrix that contains a dataset's terms in its rows and documents in its columns, with position [i,j] representing how many times term i appears in document j (See Fig. <ref type="figure" coords="2,270.87,463.51,3.93,11.04">1</ref>). Fig. <ref type="figure" coords="2,249.77,643.42,4.29,11.04">1</ref>: Term Document Matrix <ref type="bibr" coords="2,367.99,643.42,12.38,11.04" target="#b1">[2]</ref> LSI got its name from its ability to draw out the "latent semantics" in a dataset. That is to say, information about what a term might mean with respect to other terms that appear often in the same documents. This is accomplished by computing the Singular Value Decomposition (SVD) of the term-document matrix. The SVD is a matrix factorization method that splits a matrix, A, into 3 separate matrices U, S, and V (see Fig. <ref type="figure" coords="3,203.28,87.50,3.94,11.04" target="#fig_0">2</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A=U*S*V T</head><p>The eigenvalues of A T A are computed, and the square roots are taken to obtain the singular values of A. These values are then arranged in descending order on the diagonal of S. U and V are then computed accordingly. In LSI, U is known as the term matrix, and V is known as the document matrix. Factoring the matrix into this format is not sufficient, because no information has been gained. Multiplying the matrices back together produces the original term-document matrix. The power of LSI comes from truncating the U, S, and V matrices to k dimensions (See Fig. <ref type="figure" coords="3,398.95,409.25,3.89,11.04" target="#fig_1">3</ref>). Multiplying U k S k V k ' produces the best rank-k approximation of the original term-document matrix <ref type="bibr" coords="3,511.18,650.50,11.36,11.04" target="#b3">[4]</ref>. This recalculated matrix A k is very dense whereas A is very sparse, which poses problems in actual computation, but conceptually is where the power of LSI comes through: A k contains all the information regarding the higher-order relationships between terms in the dataset <ref type="bibr" coords="3,388.99,690.82,11.27,11.04" target="#b4">[5]</ref>. In practice, fast algorithms are used to compute the partial SVD to k dimensions (rather than decomposing the entire matrix and truncating) <ref type="bibr" coords="4,124.10,87.50,11.36,11.04" target="#b2">[3]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>c. Running Queries</head><p>In both LSI and vector space retrieval, documents in the dataset are represented as vectors, with each vector position representing the weight for each term in the corpus. Queries are represented in the same way. To "run" a query, each document vector is compared to the query vector. The most common metric for comparison is cosine similarity, where the cosine of the angle between each document vector and the query vector is computed. The result of this calculation is referred to as the document weight or the relevance to the query. The documents with cosine similarities near one are very close to the query vector, and are assumed to be more relevant to the query (See Fig. <ref type="figure" coords="4,478.25,221.78,3.94,11.04" target="#fig_2">4</ref>).</p><p>In LSI, we have to first transform the query vector into the same space as the document vectors before we can compute the cosine. Each document vector is taken from a column of V', and the equation for transforming the query vector is:</p><formula xml:id="formula_0" coords="4,283.25,273.47,45.53,13.56">q=q T U k S k -1</formula><p>Each document vector then has its cosine similarity taken with the query vector, and that result is recorded as the final relevance score for the document/query pair <ref type="bibr" coords="4,370.27,315.77,11.37,11.04" target="#b0">[1]</ref>. One of the disadvantages of LSI is that k (how far we calculate the dimensions of the SVD matrices) must be large enough to contain enough information to accurately represent the dataset we are using. It has been shown that if only a few dimensions of the SVD are computed, they contain all of the most important data that the LSI extracts from the dataset, but not enough to accurately run searches <ref type="bibr" coords="4,113.66,675.82,11.36,11.04" target="#b3">[4]</ref>. These "Essential Dimensions of LSI" can still be used, however, in conjunction with the original term-document matrix. We can use the LSI scores on documents to try and draw out the latent semantics in a dataset, while also using the raw power of vector-space retrieval, by simply adding together the results from LSI and the results from vector-space. Weights are applied to balance the contributions from each source. The final relevance score, w, for a document, d, is computed as: w EDLSI = (1-x) w LSI + (x) w vector where w LSI is the relevance score from traditional LSI, w vector is the relevance score from traditional vector space retrieval, and x is a weighting factor (0&lt;= x &lt;= 1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. Methodology for TREC Legal 2011</head><p>The primary objective of the TREC Legal Track in 2011 was to use of machine learning to improve retrieval. Teams attempted to implement information retrieval systems that will be able to learn when relevance feedback is available. For each query, we were allowed to submit subsets of the dataset for relevance judgment to a TA. When those judgments were returned, teams updated their systems using that information in an attempt to improve future queries.</p><p>For 2010, we created a system that could use LSI methods on the competition dataset. We developed a system to parse the data, create a term-document matrix, take the SVD, and run the queries. In 2011 we improved our base system by implementing the R package, irlba, to increase the number of dimensions we could obtain with LSI, and by implementing a new method of machine learning, selective query expansion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>a. Preprocessing</head><p>In 2009, 2010, and 2011, the TREC Legal Track used the Enron email dataset. The Enron email dataset contains 685,592 documents in many formats (including .txt, .pst, .ppt, etc.) that take up 3.71 gigabytes of disk space. We removed all documents that fit any of the following criteria:</p><p>-Were not in .txt format -Contained no text other than the information universal to all documents (disclaimers, etc.) -Contained only junk terms o terms longer than 17 characters o terms with characters not from the English alphabet o terms with 3 or more of the same character in a row o terms that appeared in greater than 100,000 documents</p><p>After culling documents and terms, we were left with 456,968 documents and 302,119 unique terms.</p><p>Each document was then added to a Lemur index (an efficient way of storing large amounts of data for fast retrieval) in order to create the term-document matrix for the dataset. The Lemur Toolkit is designed to take a set of documents and add them quickly to an index <ref type="bibr" coords="5,387.67,570.91,11.27,11.04" target="#b5">[6]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>b. Calculating the Term Document Matrix</head><p>The main challenge in creating the term-document matrix is working with limited storage space. When the Enron email dataset is trimmed of useless terms and documents, there are 456,968 documents and 302,119 terms. Our storage needs are computed as follows: 456,968 documents * 302,119 terms = 138,058,715,192 values At double precision (8 bytes each) = 1,104,469,721,536 bytes = 1028 gigabytes This exceeds the memory available on our research systems. However, because most terms appear in few documents, the matrix will be very sparse. In sparse matrix format, the term-document size for the TREC dataset is 30,252,865 nonzeroes, requiring to 0.2254 gigabytes of storage space, a much more manageable size. The Lemur toolkit also applies the term-weighting scheme while it creates the termdocument matrix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>c. Tf-idf Term Weighting</head><p>Term weighting can improve search results dramatically <ref type="bibr" coords="6,360.19,181.46,11.36,11.04" target="#b7">[8]</ref>. We chose the tf-idf term weighting scheme. The scheme is simple. The score of a term in a document (what goes into position i,j of the term-document matrix, where i is the term number and j is the document number) is computed as shown in Fig. <ref type="figure" coords="6,132.86,221.78,4.21,11.04" target="#fig_3">5</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>d. Computing the SVD</head><p>In 2010, we used the SVDLIB toolset <ref type="bibr" coords="6,271.49,450.07,12.25,11.04" target="#b6">[7]</ref> to compute the partial SVD of the termdoc matrix to k dimensions. The ideal values for k varies among datasets, and there is no way to determine the optimal value except by experimentation. It is safe to assume, however, that 75 singular values for a matrix the size of the TREC termdoc is too small; in 2010, we were unable to calculate more than 75 dimensions due to memory restrictions on our research machines.</p><p>A package for the R language called "irlba" was recently released. It is designed to allow for further calculation of the partial SVD on massive matrices. We used this library to calculate the SVD of the ENRON corpus to 200 dimensions. Though we never tested exclusively for improvements due to dimensionality expansion, we believe this boosted the performance of the LSI component of our system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>e. Submitting Runs</head><p>No relevance information is available until after the first run; therefore, at least one blind run had to be used. For this run we developed queries based on the request for information. Our queries are shown in Fig. <ref type="figure" coords="6,150.02,638.14,4.21,11.04" target="#fig_6">8</ref>. We used EDLSI with a parameter of x = .2 to run these queries. Previous work has shown that x = .2 is optimal for a variety of collections <ref type="bibr" coords="6,315.39,651.58,11.37,11.04" target="#b3">[4]</ref>.</p><p>The documents with the top 100 relevance scores from the blind run were sent to the TA for relevance determination. When the judgments for these 100 documents were returned by the TA, we modified our query based on this new information. We refer to this process as selective query expansion, because we are expanding the query with terms from documents we have selected Score = (term frequency) x (inverse document frequency) Term frequency = (number of times term i appears in document j)/ (total count of terms in document j)</p><p>Inverse document frequency = log ( (total number of documents)/(number of documents containing term i) ) specifically because they are known to be relevant. It is reasonable to assume that we can use these known-relevant documents as query vectors to return other documents that are similar, and hopefully relevant to the query. We implemented selective query expansion by taking the known-relevant documents, adding their vectors, dividing by the number of relevant documents, and using this new vector as the query vector in a new EDLSI run.</p><p>We had time to repeat this process multiple times before a final submission was required. In each iteration, we submitted an additional 100 non-judged documents to the TA and used the judgment information to expand our queries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>f. TREC Submission Details</head><p>Our runs were all produced by our EDLSI system. All submissions used a k of 200 and an x of 0.2. The first submission for each topic was an EDLSI search with no machine-learning implemented. The query vectors we used were lists of terms we believed would be commonly found in relevant documents, and were drawn from terms we saw in the request for information or in related literature. The following submission for each topic used the same EDLSI parameters along with selective query expansion. The documents we used for query expansion were all documents judged to be relevant by the TA. In each iteration, we sent the top 100 unjudged documents returned in the previous search to the TA. Documents that were known to be relevant were given a .999 relevance probability, documents known to be irrelevant were given a .001 probability, documents with unknown relevance received a probability equal to the cosine similarity score. We repeated the process twice. Thus our final submission for each topic used relevance judgments from 200 documents. The mop-up run used the same EDLSI parameters and selective query expansion using all the relevance judgments collected from all teams.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. Results</head><p>The results released at the TREC conference show that the EDLSI system is a promising algorithm for use in E-discovery tasks and the results also allow us to identify interesting future research paths. The initial submission results from topic 401 are shown in Fig. <ref type="figure" coords="7,385.51,669.58,4.21,11.04" target="#fig_4">6</ref>. They show that our initial submission had the second-highest hypothetical F1 and third-highest actual F1. Similarly, on topic 402 (not shown), only teams "ot" and "mlb" outperformed the URS system on the initial run with respect to estimated F1. This shows that, at least on some topics, our EDLSI system is competitive with other systems with respect to both recall and precision. Topic 403 was our worst attempt, with 4 unique teams with higher hypothetical F1 scores. Interestingly, both our team and team HEL used LSI-based techniques, and both teams had relatively high recall on the initial run, and significant decreases in recall on the mopup run for topic 403. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>b. Expansion in the Wrong Direction</head><p>The initial query used for topic 401 (Fig. <ref type="figure" coords="8,287.60,638.14,4.43,11.04" target="#fig_6">8</ref>) consisted of terms specifically related to Enron's online systems. These are terms you would expect to find only in documents that discuss Enron's online systems, and these terms are likely co-occur with terms such as: link, search, servers, etc. that are also likely to be relevant to the request for information. Thus the machine learning can be expected to be effective.</p><p>Unlike topic 401, topics 402 and 403 used terms that are common throughout the dataset, and this appears to have caused issues with the machine learning (see Fig. <ref type="figure" coords="9,386.47,87.50,5.60,11.04" target="#fig_6">8</ref> for the query terms for these topics). It is likely that terms common to large subsets of the dataset may have returned documents that trained the machine learning system away from other relevant documents. Intuitively, as suggested by the graphic in Fig. <ref type="figure" coords="9,214.64,127.82,4.20,11.04">9</ref>, given an initial query with terms that prove to be good discriminators, we would experience an increase in recall (especially in early iterations of the learning process) while precision stays the same or decreases slightly as the learning process is repeated. However, a more general initial query (one that has many terms that are not good discriminators), may return relevant documents that contain a lot of non-relevant terms in them. When these documents are used for query expansion, the non-relevant terms may be given too much weight. We refer to this process as "expansion in the wrong direction." This is precisely what we see over multiple runs for queries 402 and 403 (see Fig. <ref type="figure" coords="9,149.64,221.78,3.93,11.04" target="#fig_5">7</ref>), and we believe this "expansion in the wrong direction" actually occurred.</p><p>This possibility raises the question: what can be done to prevent this from happening? One option would be to use negative relevance feedback (such as that provided by the topic authority) to negatively weight the terms that are found in non-relevant documents, but not in the relevant documents. Thus, the expansion would be focused on terms that are likely to be more relevant and which will improve precision and recall. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusions and Future Research</head><p>For TREC 2011, we improved our EDLSI system by increasing the number of dimensions we use in LSI, and by implementing selective query expansion. Opportunities for future work include:</p><p>-Continuing k-optimization: The selection of k in LSI and EDLSI is critical. If k is too low, the LSI portion of the results will be inaccurate. If k is too high, computation time increases substantially, and the latent semantic effect is watered-down. Finding an optimal k for a dataset is an area of ongoing research. -Negative weight analysis: Because we have selective query expansion working, we can see the positive effect using a known-relevant document for query expansion can have on a query. Going in the other direction, using a known-irrelevant document could help weed out irrelevant documents that might otherwise be returned as relevant. -Topic/Query analysis: Continued analysis of the characteristics of the topics with less successful results could lead to a better machine learning process; perhaps different algorithms should be used for different queries. Automatically determining the best algorithm based on query characteristics would be particularly useful, both for E-discovery and for many other retrieval tasks.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="3,195.50,355.61,221.23,11.04;3,81.00,165.99,451.32,187.74"><head>Fig 2 :</head><label>2</label><figDesc>Fig 2: Full SVD of termdoc matrix X (T=U, D=V)<ref type="bibr" coords="3,404.35,355.61,12.38,11.04" target="#b1">[2]</ref> </figDesc><graphic coords="3,81.00,165.99,451.32,187.74" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="3,220.37,623.74,171.51,11.04;3,89.25,434.06,435.61,187.76"><head>Fig 3 :</head><label>3</label><figDesc>Fig 3: SVD reduced to k dimensions [2]</figDesc><graphic coords="3,89.25,434.06,435.61,187.76" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="4,179.90,568.39,252.30,11.04;4,178.88,340.56,255.85,225.84"><head>Fig. 4 :</head><label>4</label><figDesc>Fig.4: Documents and Query Represented as Vectors<ref type="bibr" coords="4,419.95,568.39,12.25,11.04" target="#b0">[1]</ref> </figDesc><graphic coords="4,178.88,340.56,255.85,225.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3" coords="6,227.57,356.09,157.04,11.04"><head>Fig 5 :</head><label>5</label><figDesc>Fig 5: tf-idf term weighting formula</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4" coords="7,186.86,642.70,274.28,11.04;7,162.00,474.83,288.75,165.75"><head>Fig. 6 :</head><label>6</label><figDesc>Fig. 6: Initial Submission Results from TREC 2011 for all teams</figDesc><graphic coords="7,162.00,474.83,288.75,165.75" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5" coords="8,150.98,503.83,346.24,11.04;8,51.00,152.55,468.00,336.75"><head>Fig. 7 :</head><label>7</label><figDesc>Fig. 7: Ursinus System Estimated Precision per Cutoff across all runs, all topics</figDesc><graphic coords="8,51.00,152.55,468.00,336.75" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6" coords="9,259.73,490.39,128.50,11.04;9,79.68,308.76,482.40,168.12"><head>Fig 8 :</head><label>8</label><figDesc>Fig 8: Initial Queries by Topic</figDesc><graphic coords="9,79.68,308.76,482.40,168.12" type="bitmap" /></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct coords="10,108.02,342.65,387.29,11.04;10,108.02,356.09,229.71,11.04" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="10,343.53,342.65,151.79,11.04;10,108.02,356.09,92.08,11.04">Using linear algebra for intelligent information retrieval</title>
		<author>
			<persName coords=""><forename type="first">M</forename><forename type="middle">W</forename><surname>Berry</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><forename type="middle">T</forename><surname>Dumais</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">G</forename><forename type="middle">W</forename><surname>O'brien</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="10,206.57,356.09,55.66,11.04">SIAM Review</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="575" to="595" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,108.02,369.53,430.03,11.04;10,108.02,382.97,425.70,11.04;10,108.02,396.41,19.56,11.04" xml:id="b1">
	<analytic>
		<title level="a" type="main" coord="10,500.07,369.53,37.98,11.04;10,108.02,382.97,122.51,11.04">Indexing by Latent Semantic Analysis</title>
		<author>
			<persName coords=""><forename type="first">S</forename><forename type="middle">C</forename><surname>Deerwester</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><forename type="middle">T</forename><surname>Dumais</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><forename type="middle">K</forename><surname>Landauer</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">G</forename><forename type="middle">W</forename><surname>Furnas</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><forename type="middle">A</forename><surname>Harshman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="10,237.41,382.97,240.76,11.04">Journal of the American Society of Information Science</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="391" to="407" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,108.02,409.73,421.87,11.04;10,108.02,423.17,381.61,11.04;10,108.02,436.63,428.20,11.04;10,108.02,450.07,400.74,11.04;10,108.02,463.51,390.83,11.04;10,108.02,476.95,275.11,11.04" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="10,108.02,436.63,250.32,11.04">Prospectus for the next LAPACK and ScaLAPACK libraries</title>
		<author>
			<persName coords=""><forename type="first">J</forename><forename type="middle">W</forename><surname>Demmel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Dongarra</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">B</forename><surname>Parlett</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W</forename><surname>Kahan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Bindel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Y</forename><surname>Hida</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">O</forename><surname>Marques</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">E</forename><forename type="middle">J</forename><surname>Riedy</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Vömel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Langou</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Luszczek</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Kurzak</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Buttari</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Langou</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Tomov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,375.91,436.63,160.31,11.04;10,108.02,450.07,365.37,11.04">Proceedings of the 8th international Conference on Applied Parallel Computing: State of the Art in Scientific Computing</title>
		<title level="s" coord="10,425.39,463.51,73.46,11.04;10,108.02,476.95,79.43,11.04">Lecture Notes In Computer Science</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Kågström</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">E</forename><surname>Elmroth</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Dongarra</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Waśniewski</surname></persName>
		</editor>
		<meeting>the 8th international Conference on Applied Parallel Computing: State of the Art in Scientific Computing<address><addrLine>Umeå, Sweden; Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="11" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,108.02,490.39,430.84,11.04;10,108.02,503.83,257.84,11.04" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="10,212.70,490.39,237.27,11.04">Essential dimensions of latent semantic indexing (LSI)</title>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Kontostathis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,456.19,490.39,82.67,11.04;10,108.02,503.83,253.40,11.04">Proceedings of the 40th Hawaii International Conference on System Sciences</title>
		<meeting>the 40th Hawaii International Conference on System Sciences</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,108.02,517.27,420.41,11.04;10,108.02,530.71,349.98,11.04" xml:id="b4">
	<monogr>
		<title level="m" type="main" coord="10,309.10,517.27,219.33,11.04;10,108.02,530.71,182.67,11.04">A framework for understanding LSI performance. Information Processing and Management</title>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Kontostathis</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">W</forename><forename type="middle">M</forename><surname>Pottenger</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="56" to="73" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,108.02,544.03,425.23,11.04;10,108.02,557.47,238.42,11.04" xml:id="b5">
	<analytic>
		<title level="a" type="main" coord="10,244.03,544.03,163.34,11.04">Experiments Using the Lemur Toolkit</title>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Ogilvie</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Callan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="10,422.59,544.03,110.66,11.04;10,108.02,557.47,159.97,11.04">Proceedings of the Tenth Text Retrieval Conference (TREC-10)</title>
		<meeting>the Tenth Text Retrieval Conference (TREC-10)</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="103" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,108.02,570.91,281.55,11.04" xml:id="b6">
	<monogr>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Rohde</surname></persName>
		</author>
		<ptr target="http://tedlab.mit.edu/~dr/SVDLIBC/" />
		<title level="m" coord="10,185.58,570.91,35.13,11.04">SVDLIBC</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,108.02,584.35,391.46,11.04;10,108.02,597.79,223.11,11.04" xml:id="b7">
	<analytic>
		<title level="a" type="main" coord="10,252.45,584.35,242.98,11.04">Term-weighting approaches in automatic text retrieval</title>
		<author>
			<persName coords=""><forename type="first">G</forename><surname>Salton</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Buckley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="10,108.02,597.79,144.16,11.04">Information Process Management</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="513" to="523" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
