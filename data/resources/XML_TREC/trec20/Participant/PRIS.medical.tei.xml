<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" coord="1,135.20,81.73,330.95,16.20">PRIS at TREC 2011 Medical Record Track</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName coords="1,156.02,107.06,61.71,10.80"><forename type="first">Jiayue</forename><surname>Zhang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Information and Communication Engineering</orgName>
								<orgName type="institution">Beijing University of Posts and Telecommunications</orgName>
							</affiliation>
						</author>
						<author>
							<persName coords="1,226.34,107.06,61.07,10.80"><forename type="first">Xueneng</forename><surname>Lin</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Information and Communication Engineering</orgName>
								<orgName type="institution">Beijing University of Posts and Telecommunications</orgName>
							</affiliation>
						</author>
						<author>
							<persName coords="1,294.94,107.06,44.52,10.80"><forename type="first">Yang</forename><surname>Zou</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Information and Communication Engineering</orgName>
								<orgName type="institution">Beijing University of Posts and Telecommunications</orgName>
							</affiliation>
						</author>
						<author>
							<persName coords="1,348.04,107.06,47.08,10.80"><forename type="first">Shuai</forename><surname>Zhu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Information and Communication Engineering</orgName>
								<orgName type="institution">Beijing University of Posts and Telecommunications</orgName>
							</affiliation>
						</author>
						<author>
							<persName coords="1,403.72,107.06,44.05,10.80"><forename type="first">Jing</forename><surname>Xiao</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Information and Communication Engineering</orgName>
								<orgName type="institution">Beijing University of Posts and Telecommunications</orgName>
							</affiliation>
						</author>
						<author>
							<persName coords="1,216.08,122.66,49.07,10.80"><forename type="first">Weiran</forename><surname>Xu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Information and Communication Engineering</orgName>
								<orgName type="institution">Beijing University of Posts and Telecommunications</orgName>
							</affiliation>
						</author>
						<author>
							<persName coords="1,274.04,122.66,57.61,10.80"><forename type="first">Guang</forename><surname>Chen</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Information and Communication Engineering</orgName>
								<orgName type="institution">Beijing University of Posts and Telecommunications</orgName>
							</affiliation>
						</author>
						<author>
							<persName coords="1,340.32,122.66,40.33,10.80"><forename type="first">Jun</forename><surname>Guo</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Information and Communication Engineering</orgName>
								<orgName type="institution">Beijing University of Posts and Telecommunications</orgName>
							</affiliation>
						</author>
						<title level="a" type="main" coord="1,135.20,81.73,330.95,16.20">PRIS at TREC 2011 Medical Record Track</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">08F489068039FE31B92F73930B3A0FC9</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-08-05T15:06+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Our method to accomplish the Medical Record Track is described in this paper. For ad hoc retrieval, Indri and Xapian are used for indexing, searching, and initial query expansion. The main query expansion is achieved using LSI. The evaluation results show the performance of our system is above the average.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="595.32" lry="841.92"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="595.32" lry="841.92"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="595.32" lry="841.92"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="595.32" lry="841.92"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="595.32" lry="841.92"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="595.32" lry="841.92"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="595.32" lry="841.92"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The goal of the Medical Records track is to foster research on providing content-based access to the free-text fields of electronic medical records. This year the task is to retrieve reports from the given test document collection, which is a set of de-identified medical records made available for research use through a university lab. The retrieval task for the track is an ad hoc search task as might be used to identify cohorts for comparative effectiveness research. The topics given specify a particular disease/condition set and a particular treatment/intervention set, and participants should return a list of visits ranked by decreasing likelihood that the visit satisfies the specification. To accomplish the task, Indri and Xapian are used for index building and query searching first, and query expansion is achieved by Indri, Xapian and LSI.</p><p>The remainder of the paper is organized as follows. Section 2 introduces the procedure of ad hoc search with Indri, and section 3 with Xapian. Section 4 describes the query expansion algorithm using LSI, and the evaluation results are given in section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Ad hoc Retrieval with Indri</head><p>According to the feature of documents and the task's request, we build a system to do the retrieval jobs, which includes preprocessing, building index, term expansion, retrieving and ranking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Preprocessing</head><p>The test document collection is more than one hundred thousand electronic medical reports. Each report has some "&lt;tag&gt;", but "visitid" is not contained. However, the task uses the "visited" (each report associating a "visitid", while most "visited" having more than one report) as the response unit. That is, our retrieval system must return visitreports_visited's. Since a simple ASCII table called the Report-to-Visit Mapping Key that specifies which reports belong to the same visit is provided, the preprocessing system add the tag "visitid" to each medical report. In order to do that, the set of reports is traversed to get each "check_sum", then a table called the Check_sum to ReportID is built. Finally, we add the tag "visitid" to each report according to the two tables mentioned above.</p><p>As the retrieval task contains the request of ages' distinguish, while the reports don't have the tag "age", we use regular expression to extract patients' age information from each report. This tag will be used when building index. There is some useless information about patients' personal detail in the last part of each report, so we also use regular expression to get and delete them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Index building</head><p>The indri query language provides a executive program called "buildindex.exe" to build index for given documents. So we use it to do the index building job for all of the test reports. Since the field "report_text" contains each report' main information such as secondary diagnoses, surgical procedure, hospital course and so on, while "chief_complaint" contains the sort of the patient's illness, additionally age is limited in the query condition, we build index for the context of the tag "age". Besides, the result is asked to be returned by "visitid", so an index is also built for the context of "visitid". As a result, fields that need to be built index on include "checksum", "chief_complaint", "report_text", "age", "visitid".</p><p>As to the ranking part, tag "age" and "visitid" is needed, and context of the two tags will be returned, so we add "metadata" for them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Term expansion</head><p>The Indri provides the function of extracting term expansion from the returned documents. Figure <ref type="figure" coords="2,182.32,403.48,6.00,10.80" target="#fig_0">1</ref> depicts the general procedure of our approach. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Designing search sentences</head><p>35 topics are given and they specify a particular disease or condition set and a particular treatment or intervention set. We extract the key words from each sentences, then form the search sentences by connecting key words on the regular "and", "or", "not". We design one search sentence for each topic and put them into a text file.</p><p>The search system runs two times: (1) The first time is to extract term expansion for each topic. So this time we connect</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Initialize the query envirnment</head><p>Load the index Read the query sentence, and use the term expansion handle for query</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Use regular expression to extract term expansion and its correlation</head><p>Ranking the expanded term by correlation, and do some manual selection the key words with "or" to form the search sentences.</p><p>(2) The second time is to return relative "visitid" and rank them. So we connect key words with their expanded term with "or", then connect them with the result in the first run with "and". After that we use this search sentences to run the second query.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Searching and ranking</head><p>No more than 1000 "visitid" is requested to submit for each topic, so we set the number of returned document to be 1000. The system run searching according to the search sentences which have been designed above. Relative medical reports are returned and then "visitid" is extracted from each of the reports. Since some different reports have a same visitid, which means this visitid is of high correlation with the topic, we add the score of the reports of this visitid when calculate the score of each visitid. Finally, we rank the visitid according to their score.</p><p>Figure <ref type="figure" coords="3,145.38,270.88,6.00,10.80">2</ref> depicts the procedure of searching and ranking. </p><note type="other">Figure</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Ad hoc Retrieval with Xapian</head><p>Indexing, initial query expansion and searching are accomplished on the platform of Xapian.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Building Index with Xapian</head><p>This approach will retrieve related medical reports by searching the test document collection twice. The first step is to build index for the given 92088 medical reports. The preprocessing is the same as the Indri approach, which is getting rid of the regular describe from each reports and keeping only useful message about patients' sickness. We use the Xapian toolkit to build index, which is a searching engine based on probabilistic search model. The default weight is set to be BM25.</p><p>The following contents are import when building index with Xapian.</p><p>1. "chief_complaint", is the most import key field. Terms in that tag have a relatively higher weight. 2. "report_text", gives main description of a patient, is treated as a normal field, terms in which have lower weight that the former field. 3. "age" in "report_text" is used as a value of documents when indexing by Xapian.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Preprocessing</head><p>This part begins with extracting the key content from topics, which can avoid the noise of useless words. According to the task, we need two kind of information, including symptom and therapy. For example, from "patients with complicated GERD who receive endoscopy", we extract "GERD" and "endoscopy" as key words. Since the test document collection comes from different medical staffs, who have their own writing styles, we added some manual procedure as following to improve the callback of first time search. 1) Add other forms of key words. 2) Expand each abbreviation, for example, "gastroesophageal reflux disease" for "GERD".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Query Expansion</head><p>Since medical text is somehow special with a same terminology may have different forms in medical field, we crawler the introduction "html" of each key word from WIKI, then extract the most frequent adjectives and nouns as the other description of the key word. In order to improve the extracting accuracy, we make up of a black list, which concludes the most frequent but vague words, such as "disease", "treatment", "hospital" and so on. These words don't give particular description on patient's disease, so they will not be treated as expansion terms.</p><p>Since each topic describes one kind of symptom or therapy, we connect the key words extracted from them with "or", which can make sure the first searching don't interference the next. For the same reason, other expansion terms are also connected with "or".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">The first searching</head><p>We run the searching in the Xapian database with the query sentences designed above. If a topic gets a return set of more than 500, it's labeled with "nta" (need to adjust), while those that get less than 500 returns are labeled with "nte" (need to expand). Reports returned in this run are of relatively higher accuracy, but if the number is less than 500, that is "nte" topics, need further expanding. Because not enough number means that the topics have many synonymies. As to "nta" topics, we're also not sure the rank from this searching run is accurate, so the result needs to be adjusted by query expansion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Query Expansion with LSI</head><p>There are a lot of professional words in medical reports, and many of them have the phenomenon of polysemy and synonymy, which make the traditional approach of relative term searching based on term co-occurrence not satisfying. So we use LSI (Latent Semantic Indexing) to detecting the inner relation of professional vocabulary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">LSI</head><p>LSI is an information retrieval method which attempts to capture this hidden structure using techniques from linear algebra. It maps the terms and documents to a latent semantic space of low dimension, by which noise in the original vector space is removed. LSI's core step is singular value decomposition (SVD), which is an import method of extracting matrix's feature. It's computed as:</p><formula xml:id="formula_0" coords="5,214.70,369.09,196.48,17.00">T V U A  <label>(1)</label></formula><p>Suppose that A is a N*M matrix of terms and documents, then U is an N*N matrix, Σis an N*M matrix (diagonal matrix, and its diagonal item is the singular value), V T is an N*N matrix. Under normal situation, the total of the first 10%, even 1% singular value of Σ makes up of 99% of all the singular value. That is, we can use the first R of them to describe the A. So, a low rank matrix of A is built to approximate Ar by SVD:</p><formula xml:id="formula_1" coords="5,213.19,358.29,199.48,153.39">T n r r r r m n m V U A * * * *  <label>(2)</label></formula><p>U m*r is SVD term matrix，V T r*n is SVD document matrix，we use U m*r in this task。 The input for LSI is the returned reports from the first time of searching. The procedure of LSI is as follows:</p><p>1. Build the TF-IDF matrix 2. singular value decomposition 3. make use of the matrix from the second step to extract the relative terms for key words The preprocessing is the same as building index with Xapian. After that we use "genia tagger" to do the pos tagging. Only these tagged to be noun is used to build the TF-IDF matrix.</p><p>The GNU Scientific Library, which provides the function of random number, integral computing, and matrix decomposition and so on, is used to do the singular value decomposition. In the result of singular value decomposition, we choose the first 100 to approximate the original term document.</p><p>The dealt SVD term matrix U m*r is used to compute the expansion of a key word. Each row of U m*r is the description of one term in a low dimension space. For example, we find the row of "GERD", and then compute its cosine value with every other row. By ranking the result, we get the first two as the relative terms, as to this task, they are "regurgitation" and "dysphagia". Finally, the expansion terms from LSI is connected to the original query sentence with "or".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">The second searching</head><p>Since further expansion terms are obtained from above, we simply use them to search the Xapian database. Now that we have two results from two searching runs, a weight score is needed to find out a final result. It goes as follows:</p><p>nta： score(d) = s1*0.7 + s2 * 0.3 nte： score(d) = s1*0.5 + s2 * 0.5 s1 &gt; 0 (3) nte： score(d) = s1*0.5 + s2 * 1 s1 = 0 "nta" is based on the regular of fine adjustment, which gives more weight to the result from first searching, because it get enough returns from first time ,so the accuracy is relatively higher. "nte" is based on the regular of supplement, which average the result of two searching runs. If a report returned by second searching is not appeared in the first time, s1is set to be 0, while s2 set to be 1.</p><p>The whole procedure is shown in Figure <ref type="figure" coords="6,308.02,333.28,4.50,10.80" target="#fig_0">1</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Indexing by Xapian</head><note type="other">Medical</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Evaluation Results</head><p>The results of our system, the median and the best by three measurements are listed in table <ref type="table" coords="7,128.70,75.86,4.50,10.80">1</ref>. The numbers of topics whose score are higher than the median are shown in table <ref type="table" coords="7,128.70,91.46,4.50,10.80" target="#tab_1">2</ref>. From the evaluation results in table 1 and 2, a conclusion can be reached that our results are between median and best in bpref and P@10, but in R-prec, our result is lower than median. In general, the performance of our system is above the average. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>bpref</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="2,208.52,631.44,220.30,10.80"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. Procedure of extract term expansion</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="6,163.52,707.72,285.63,10.80"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. Framework of searching and ranking with Xapian</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" coords="7,153.02,168.31,274.67,214.71"><head>Table 2 .</head><label>2</label><figDesc>Relation between our system results and Median</figDesc><table coords="7,164.18,168.31,251.66,189.68"><row><cell></cell><cell></cell><cell>R-prec</cell><cell>P@10</cell></row><row><cell>pris</cell><cell>0.474</cell><cell>0.3422</cell><cell>0.5471</cell></row><row><cell>Median</cell><cell cols="3">0.308718 0.411529 0.476471</cell></row><row><cell>Best</cell><cell cols="3">0.609471 0.760738 0.876471</cell></row><row><cell></cell><cell cols="2">Table 1. Evaluation Results</cell><cell></cell></row><row><cell></cell><cell>bpref</cell><cell>R-prec</cell><cell>P@10</cell></row><row><cell>&gt;Median</cell><cell>22</cell><cell>17</cell><cell>17</cell></row><row><cell>=Median</cell><cell>3</cell><cell>8</cell><cell>9</cell></row><row><cell>&lt;Median</cell><cell>9</cell><cell>9</cell><cell>8</cell></row></table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct coords="7,105.56,434.98,392.60,9.88;7,90.02,450.58,170.04,9.88" xml:id="b0">
	<analytic>
		<title/>
		<author>
			<persName coords=""><forename type="first">F</forename><surname>Farfan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">V</forename><surname>Jrostodos</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Ranganathan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><surname>Weiner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><forename type="middle">D</forename><surname>Xontorank</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="7,423.50,434.98,74.66,9.88;7,90.02,450.58,165.19,9.88">Ontology-Aware Search of Electronic Medical Records</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct coords="7,105.56,466.18,356.54,9.88;7,90.02,481.78,397.09,9.88;7,90.02,497.38,179.34,9.88" xml:id="b1">
	<analytic>
		<title level="a" type="main" coord="7,190.74,466.18,170.20,9.88">Probabilistic Latent Semantic Indexing</title>
		<author>
			<persName coords=""><forename type="first">Thomas</forename><surname>Hofmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="7,380.26,466.18,81.84,9.88;7,90.02,481.78,397.09,9.88;7,90.02,497.38,146.90,9.88">Proceedings of the Twenty-Second Annual International SIGIR Conference on Research and Development in Information Retrieval (SIGIR-99)</title>
		<meeting>the Twenty-Second Annual International SIGIR Conference on Research and Development in Information Retrieval (SIGIR-99)</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="7,105.56,512.98,368.99,9.88;7,90.02,528.58,162.54,9.88" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="7,308.74,512.98,114.59,9.88">Latent Dirichlet allocation</title>
		<author>
			<persName coords=""><forename type="first">David</forename><forename type="middle">M</forename><surname>Blei</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Y</forename><surname>Andrew</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Jordan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">I</forename><surname>Michael</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="7,430.27,512.98,44.28,9.88;7,90.02,528.58,121.89,9.88">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="7,105.55,544.18,396.92,9.88;7,90.02,559.78,406.55,9.88" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="7,463.38,544.18,39.09,9.88;7,90.02,559.78,116.89,9.88">Indexing by latent semantic analysis</title>
		<author>
			<persName coords=""><surname>Deerwester</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><forename type="middle">T</forename><surname>Dumais</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">T</forename><forename type="middle">K</forename><surname>Landauer</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">G</forename><forename type="middle">W</forename><surname>Furnas</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">R</forename><forename type="middle">A</forename><surname>Harshman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j" coord="7,218.22,559.78,202.13,9.88">Journal of the Society for Information Science</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="391" to="407" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="7,105.55,575.38,396.26,9.88;7,90.02,590.98,412.19,9.88;7,90.02,606.58,414.32,9.88;7,90.02,622.18,293.62,9.88" xml:id="b4">
	<analytic>
		<title level="a" type="main" coord="7,90.02,590.98,166.23,9.88">Implementation and Scalability Issues</title>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">N</forename><surname>Stoffel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">N</forename><surname>Post</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Basu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Bassu</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Behrens</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Telcordia</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Engine</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="7,275.17,590.98,227.03,9.88;7,90.02,606.58,118.18,9.88;7,274.44,606.58,229.90,9.88;7,90.02,622.18,117.91,9.88">Proceedings of the 11th Int. Workshop on Research Issues in Data Engineering</title>
		<meeting>the 11th Int. Workshop on Research Issues in Data Engineering<address><addrLine>Heidelberg, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-04-01">2001. Apr. 1-2, 2001</date>
		</imprint>
	</monogr>
	<note>Document Management for Data Intensive Business and Scientific Applications</note>
</biblStruct>

<biblStruct coords="7,105.55,637.78,375.21,9.88;7,90.02,653.38,297.79,9.88" xml:id="b5">
	<analytic>
		<title level="a" type="main" coord="7,174.31,637.78,306.44,9.88;7,90.02,653.38,28.36,9.88">Using LSI for Information Retrieval, Information Filtering, and Other Things</title>
		<author>
			<persName coords=""><forename type="first">S</forename><forename type="middle">T</forename><surname>Dumais</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" coord="7,130.58,653.38,178.14,9.88">Talk at Cognitive Technology Workshop</title>
		<imprint>
			<date type="published" when="1997">April 4-5, 1997</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
